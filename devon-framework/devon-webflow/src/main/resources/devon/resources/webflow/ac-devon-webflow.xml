<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/webflow-config"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:util="http://www.springframework.org/schema/util"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
               http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
               http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
               http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
               http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

    <!-- Flow Controller -->
    <beans:bean id="flowController" class="org.springframework.webflow.mvc.servlet.FlowController">
        <beans:property name="flowExecutor" ref="flowExecutor" />
    </beans:bean>
    <beans:bean id="flowMappings" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <beans:property name="mappings">
            <beans:value>/**/*.htm=flowController</beans:value>
        </beans:property>
        <beans:property name="order" value="100" />
    </beans:bean>

    <!-- Executes flows: the central entry point into the Spring Web Flow system -->
    <flow-executor id="flowExecutor" flow-registry="flowRegistry">
        <flow-execution-listeners>
            <listener ref="securityFlowExecutionListener" />
            <!-- 
            <listener ref="hibernateFlowExecutionListener" />
             -->
        </flow-execution-listeners>
        <flow-execution-attributes>
        <!-- eliminamos el control de postback de webflow -->
			<always-redirect-on-pause value="false" />
        </flow-execution-attributes>
    </flow-executor>

    <!-- The registry of executable flow definitions -->
    <flow-registry id="flowRegistry" flow-builder-services="flowBuilderServices">
        <flow-location-pattern value="/WEB-INF/flows/**/*.xml" />
        <flow-location-pattern value="classpath*:devon/resources/webflow/flows/**/*.xml" />
        <flow-location-pattern value="classpath*:plugins/flows/**/*.xml" />
    </flow-registry>

    <!-- Installs a listener that manages Hiberbate persistence contexts for flows that require them 
    <beans:bean id="hibernateFlowExecutionListener" class="org.springframework.webflow.persistence.HibernateFlowExecutionListener">
        <beans:constructor-arg ref="entitySessionFactory" />
        <beans:constructor-arg ref="entityTransactionManager" />
    </beans:bean>
    -->
    
    <beans:bean id="conversionService" depends-on="startUp" class="es.capgemini.devon.binding.ConversionService" />
    
    <flow-builder-services id="flowBuilderServices" view-factory-creator="mvcViewFactoryCreator" conversion-service="conversionService" />
    
    <!-- Default ViewResolvers -->
    <util:list id="webflow.viewResolvers">
        <beans:ref bean="xmlViewResolver"/>
        <beans:ref bean="fwkJspViewResolver"/>
        <beans:ref bean="jspViewResolver"/> <!-- Must be the last one -->
    </util:list>
    
    <beans:bean id="mvcViewFactoryCreator" class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
        <beans:property name="viewResolvers" ref="webflow.viewResolvers"/>
    </beans:bean>    

    <!-- Installs a listener to apply Spring Security authorities -->
    <beans:bean id="securityFlowExecutionListener" class="org.springframework.webflow.security.SecurityFlowExecutionListener" />

	<beans:bean id="fwkSWFExceptionHandler" class="es.capgemini.devon.webflow.view.SWFExceptionHandler" />
    
    <!-- sobreescribimos el exception resolver -->
    <beans:bean id="fwkMVCExceptionResolver" class="es.capgemini.devon.webflow.WebflowMVCExceptionResolver"/>

	<!-- sobreescribimos el beansExecutor para meterle la funcionalidad de bind and validate -->
	<beans:bean id="executor" class="es.capgemini.devon.webflow.bo.WebExecutor" />
    
    <!-- sobreescribimos las vistas JSP para utilizar una resoluciÃ³n de excepciones diferente -->
    <beans:bean id="fwkJspViewResolver" parent="fwk.fwkJspViewResolver">
        <beans:property name="viewClass" value="es.capgemini.devon.webflow.view.WebflowJSPView"/>
    </beans:bean>
    
    <beans:bean id="jspViewResolver" parent="fwk.jspViewResolver">
        <beans:property name="viewClass" value="es.capgemini.devon.webflow.view.WebflowJSPView"/>
    </beans:bean>
    
    <!-- 
    <aop:config>
        <aop:advisor pointcut="execution(* org.springframework.webflow.mvc.servlet..*FlowHandlerAdapter+.*(..))" advice-ref="webflow.txAdvice" />
    </aop:config>

    <tx:advice id="webflow.txAdvice" transaction-manager="entityTransactionManager">
        <tx:attributes>
            <tx:method name="handle*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>    
     -->    
    
</beans:beans>