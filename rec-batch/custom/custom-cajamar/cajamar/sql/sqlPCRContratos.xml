<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<!-- BAYM -38 (Jaime Sánchez-cuenca): Construcción Técnica: Carga P.C.R. CONTRATOS - Gestión del Cambio en la Numeración del Contrato
	 Este UPDATe que implementa esta BAYM hay que hacerlo lo primero para que no se puedan producir errores de CLAVE DUPLICADA. -->
	 
<entry key="pcr.cambioNumeracion.contratos">
    <![CDATA[
		UPDATE CNT_CONTRATOS A
		 SET (A.CNT_CONTRATO,
			  A.CNT_COD_OFICINA,
			  A.OFI_ID_CONTABLE,
			  A.USUARIOMODIFICAR,
			  A.FECHAMODIFICAR)
		 = (SELECT  B.TMP_CNT_CONTRATO AS CNT_CONTRATO,
				   (B.TMP_CNT_COD_ENT_OFI_CNTBLE||B.TMP_CNT_COD_OFI_CNTBLE||B.TMP_CNT_COD_SUBSC_OFI_CNTBLE) AS CNT_COD_OFICINA,
				   (SELECT Z.OFI_ID
					FROM OFI_OFICINAS Z 
					WHERE Z.OFI_CODIGO_ENTIDAD_OFICINA = B.TMP_CNT_COD_ENT_OFI_CNTBLE 
					AND Z.OFI_CODIGO_OFICINA = B.TMP_CNT_COD_OFI_CNTBLE
					AND Z.OFI_CODIGO_SUBSECCION_OFICINA = B.TMP_CNT_COD_SUBSC_OFI_CNTBLE) AS OFI_ID,
					'BACTH' AS USUARIOMODIFICAR,
					SYSDATE AS FECHAMODIFICAR 
			FROM TMP_CNT_CONTRATOS B
			WHERE B.TMP_CNT_NUM_CNT_ANTERIOR IS NOT NULL
				AND (LPAD(TO_CHAR(B.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(B.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(B.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(B.TMP_CNT_NUM_ESPEC),15,'0')) = A.CNT_CONTRATO
			)
		WHERE NOT EXISTS (SELECT 1
						  FROM TMP_CNT_CONTRATOS X
						  WHERE X.TMP_CNT_NUM_CNT_ANTERIOR IS NOT NULL
						  AND X.TMP_CNT_CODIGO_CNT50= A.CNT_CONTRATO
						 )
        ]]>
    </entry>
	<!-- FIN  BAYM -38 -->
	
	<!--BAYM-99 (Jaime Sánchez-Cuenca): Construcción Técnica: Carga P.C.R. CONTRATOS - Modificar pasaje a producción. -->
    <entry key="pcr.estFinanAnt.contratos">
    <!-- ANTES DEL INSERT O UPDATE DE CONTRATOS, HAY QUE "DETECTAR" SI HAY CAMBIO DEL ESTADO FINANCIERO. AÑADO ESTA ENTRY: -->
	<![CDATA[
		MERGE INTO TMP_CNT_CONTRATOS UPP_DATA USING
				(
				SELECT DISTINCT CNT.CNT_CONTRATO, EFC.DD_EFC_CODIGO, CNT.CNT_FECHA_EFC
				FROM TMP_CNT_CONTRATOS TCC
					INNER JOIN CNT_CONTRATOS CNT ON (LPAD(TO_CHAR(TCC.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(TCC.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(TCC.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(TCC.TMP_CNT_NUM_ESPEC),15,'0'))=CNT.CNT_CONTRATO
					INNER JOIN DD_EFC_ESTADO_FINAN_CNT EFC ON EFC.DD_EFC_ID = CNT.DD_EFC_ID
				WHERE CNT.BORRADO = 0 AND EFC.DD_EFC_CODIGO <> TCC.TMP_CNT_ESTADO_FINANCIERO
				) UPP_VALUES
		ON (UPP_VALUES.CNT_CONTRATO = LPAD(TO_CHAR(UPP_DATA.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(UPP_DATA.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(UPP_DATA.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(UPP_DATA.TMP_CNT_NUM_ESPEC),15,'0'))
		WHEN MATCHED THEN
		UPDATE SET UPP_DATA.TMP_CNT_ESTADO_FINANCIERO_ANT = UPP_VALUES.DD_EFC_CODIGO,
				   UPP_DATA.TMP_CNT_FECHA_ESTADO_FINAN_ANT = UPP_VALUES.CNT_FECHA_EFC
        ]]>
    </entry>
	
    <entry key="pcr.insert.contratos">
    <![CDATA[
		insert  /*+ APPEND PARALLEL(cnt_contratos, 16) PQ_DISTRIBUTE(cnt_contratos, NONE) */ into cnt_contratos(
            CNT_ID, 
            CNT_FECHA_EXTRACCION,
            CNT_COD_ENTIDAD,
            OFI_ID,
            CNT_COD_OFICINA,
            CNT_COD_CENTRO,
            CNT_CONTRATO,
            DD_MON_ID,
            DD_TPE_ID,
            DD_TPR_ID,
            CNT_FECHA_CARGA,
            CNT_FICHERO_CARGA,
            USUARIOCREAR,
            FECHACREAR,
            ZON_ID,
            CNT_FECHA_CREACION,
			DD_EFC_ID,
			DD_EFC_ID_ANT, 
			CNT_FECHA_ESC, 
			CNT_FECHA_EFC, 
			CNT_FECHA_EFC_ANT, 
			dd_esc_id,            
            CNT_LIMITE_INI,
            CNT_LIMITE_FIN,
            DD_FNO_ID,
            DD_FCN_ID,
            DD_GC1_ID,
            DD_GC2_ID,
            DD_CT1_ID,
            DD_CT2_ID,
            DD_CT3_ID,
            DD_CT4_ID,
            DD_CT5_ID,
            DD_CT6_ID,
            CNT_FECHA_CONSTITUCION,
            CNT_FECHA_VENC,
            CNT_FECHA_DATO,
            DD_APO_ID,
            CNT_IBAN,
            CNT_CUOTA_IMPORTE,
            CNT_CUOTA_PERIODICIDAD,
            CNT_DISPUESTO,
            CNT_SISTEMA_AMORTIZACION,
            CNT_INTERES_FIJO_VAR,
            CNT_TIPO_INTERES,
            CNT_CCC_DOMICILIACION,
            OFI_ID_CONTABLE,
            OFI_ID_ADMIN,
            DD_GES_ID,
            DD_CRE_ID,
            CNT_DOMICI_EXT,
            CNT_PARAGUAS_ID,
            CNT_CONTRATO_ANTERIOR,
            DD_MTR_ID,
            DD_PRO_ID
      )
        select
            S_CNT_CONTRATOS.nextVal as CNT_ID,
            tc.TMP_CNT_FECHA_EXTRACCION,
            tc.TMP_CNT_COD_ENTIDAD,
            (SELECT Z.OFI_ID
                FROM OFI_OFICINAS Z 
                WHERE Z.OFI_CODIGO_ENTIDAD_OFICINA = tc.TMP_CNT_COD_ENT_OFI_CNTBLE 
                AND Z.OFI_CODIGO_OFICINA = tc.TMP_CNT_COD_OFI_CNTBLE
                AND Z.OFI_CODIGO_SUBSECCION_OFICINA = tc.TMP_CNT_COD_SUBSC_OFI_CNTBLE) AS OFI_ID,
            tc.TMP_CNT_COD_OFICINA,
            case
	            when tc.TMP_CNT_COD_CENTRO is null then tc.TMP_CNT_COD_OFICINA
	            else tc.TMP_CNT_COD_CENTRO
            end TMP_CNT_COD_CENTRO,
            LPAD(TO_CHAR(tc.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(tc.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(tc.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(tc.TMP_CNT_NUM_ESPEC),15,'0') AS TMP_CNT_CONTRATO,
            (select DD_MON_ID from dd_mon_monedas where DD_MON_CODIGO = tc.TMP_CNT_MONEDA) monedaID,
            (select tp.dd_tpe_id from dd_tpe_tipo_prod_entidad tp where trim(dd_tpe_codigo) = trim(tc.TMP_CNT_TIPO_PRODUCTO)) AS DD_TPE_ID,
            (select tp.dd_tpr_id from dd_tpe_tipo_prod_entidad tp where trim(dd_tpe_codigo) = trim(tc.TMP_CNT_TIPO_PRODUCTO)) AS DD_TPR_ID,
            tc.TMP_CNT_FECHA_CARGA,
            tc.TMP_CNT_FICHERO_CARGA,
            '${PasajeAProducciónUser}',
            systimestamp,
            (select distinct z.zon_id
               from zon_zonificacion z, ofi_oficinas o
               where o.OFI_CODIGO_ENTIDAD_OFICINA||o.OFI_CODIGO_OFICINA||o.OFI_CODIGO_SUBSECCION_OFICINA = tc.TMP_CNT_COD_OFICINA
               and z.ofi_id = o.ofi_id) AS ZON_ID,
            tc.TMP_CNT_FECHA_CONSTITUCION AS CNT_FECHA_CREACION,
            (select def.DD_EFC_ID from dd_efc_estado_finan_cnt def where def.dd_efc_codigo = tc.TMP_CNT_ESTADO_FINANCIERO) AS DD_EFC_ID,
            (select def.DD_EFC_ID from dd_efc_estado_finan_cnt def where def.dd_efc_codigo = tc.TMP_CNT_ESTADO_FINANCIERO_ANT ) AS DD_EFC_ID_ANT,
            tc.tmp_fecha_estado_contrato,
            tc.TMP_CNT_FECHA_ESTADO_FINANC,
            tc.TMP_CNT_FECHA_ESTADO_FINAN_ANT,
            (select est.dd_esc_id from ${master.schema}.dd_esc_estado_cnt est where est.dd_esc_codigo = trim(tc.TMP_ESTADO_CONTRATO) ) AS DD_ESC_ID,
            tc.TMP_CNT_LIMITE_INI,
            tc.TMP_CNT_LIMITE_FIN,
            (select FNO.DD_FNO_ID from DD_FNO_FINALIDAD_OFICIAL FNO where tc.TMP_CNT_FINALIDAD_OFI is not null and  FNO.DD_FNO_CODIGO = TRIM(tc.TMP_CNT_FINALIDAD_OFI)),
            (select FCN.DD_FCN_ID from DD_FCN_FINALIDAD_CONTRATO FCN where tc.TMP_CNT_FINALIDAD_CON is not null and  FCN.DD_FCN_CODIGO = TRIM(tc.TMP_CNT_FINALIDAD_CON)),
            (select GCN.DD_GCN_ID from DD_GCN_GARANTIA_CONTRATO GCN where tc.TMP_CNT_GARANTIA_1 is not null and  GCN.DD_GCN_CODIGO = TRIM(tc.TMP_CNT_GARANTIA_1)),
            (select GCO.DD_GCO_ID from DD_GCO_GARANTIA_CONTABLE GCO where tc.TMP_CNT_GARANTIA_2 is not null and  GCO.DD_GCO_CODIGO = TRIM(tc.TMP_CNT_GARANTIA_2)),
            (SELECT ct1.DD_CT1_ID from DD_CT1_CATALOGO_1 ct1 where tc.TMP_CNT_CATALOGO_1 is not null and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
            (SELECT ct2.DD_CT2_ID from DD_CT2_CATALOGO_2 ct2 JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_2 is not null and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
            (SELECT ct3.DD_CT3_ID from DD_CT3_CATALOGO_3 ct3 JOIN DD_CT2_CATALOGO_2 ct2 ON ct3.dd_ct2_id = ct2.dd_ct2_id JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_3 is not null and  ct3.DD_CT3_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_3) and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
            (SELECT ct4.DD_CT4_ID from DD_CT4_CATALOGO_4 ct4 JOIN DD_CT3_CATALOGO_3 ct3 ON ct4.dd_ct3_id = ct3.dd_ct3_id JOIN DD_CT2_CATALOGO_2 ct2 ON ct3.dd_ct2_id = ct2.dd_ct2_id  JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_4 is not null and ct4.DD_CT4_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_4) and  ct3.DD_CT3_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_3) and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
            (SELECT ct5.DD_CT5_ID from DD_CT5_CATALOGO_5 ct5 JOIN DD_CT4_CATALOGO_4 ct4 ON ct5.dd_ct4_id = ct4.dd_ct4_id JOIN DD_CT3_CATALOGO_3 ct3 ON ct4.dd_ct3_id = ct3.dd_ct3_id JOIN DD_CT2_CATALOGO_2 ct2 ON ct3.dd_ct2_id = ct2.dd_ct2_id  JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_5 is not null and ct5.DD_CT5_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_5) and ct4.DD_CT4_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_4) and  ct3.DD_CT3_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_3) and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
            (SELECT ct6.DD_CT6_ID from DD_CT6_CATALOGO_6 ct6 JOIN DD_CT5_CATALOGO_5 ct5 ON ct6.dd_ct5_id = ct5.dd_ct5_id JOIN DD_CT4_CATALOGO_4 ct4 ON ct5.dd_ct4_id = ct4.dd_ct4_id JOIN DD_CT3_CATALOGO_3 ct3 ON ct4.dd_ct3_id = ct3.dd_ct3_id JOIN DD_CT2_CATALOGO_2 ct2 ON ct3.dd_ct2_id = ct2.dd_ct2_id  JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_6 is not null and  ct6.DD_CT6_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_6) and ct5.DD_CT5_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_5) and ct4.DD_CT4_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_4) and  ct3.DD_CT3_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_3) and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
            tc.TMP_CNT_FECHA_CONSTITUCION,
            tc.TMP_CNT_FECHA_VENC,
            tc.TMP_CNT_FECHA_DATO,
            (SELECT DD_APO_ID FROM DD_APO_APLICATIVO_ORIGEN WHERE TRIM(UPPER(DD_APO_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_APLICATIVO_ORIGEN))) AS DD_APO_ID,
            tc.TMP_CNT_IBAN_CNT AS CNT_IBAN,
            tc.TMP_CNT_CUOTA_IMPORTE AS CNT_CUOTA_IMPORTE,
            tc.TMP_CNT_CUOTA_PERIODICIDAD AS CNT_CUOTA_PERIODICIDAD,
            tc.TMP_CNT_DISPUESTO AS CNT_DISPUESTO,
            (SELECT DISTINCT DD_SAM_ID FROM DD_SAM_SIST_AMORT_CONTRATO WHERE TRIM(UPPER(DD_SAM_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_SIST_AMORTIZACION))) AS DD_SAM_ID,            
            1 AS CNT_INTERES_FIJO_VAR, 
            tc.TMP_CNT_TIPO_INTERES AS CNT_TIPO_INTERES,
            tc.TMP_CNT_DOMICILIACION AS CNT_CCC_DOMICILIACION,
            (SELECT Z.OFI_ID
                FROM OFI_OFICINAS Z 
                WHERE Z.OFI_CODIGO_ENTIDAD_OFICINA = tc.TMP_CNT_COD_ENT_OFI_CNTBLE 
                AND Z.OFI_CODIGO_OFICINA = tc.TMP_CNT_COD_OFI_CNTBLE
                AND Z.OFI_CODIGO_SUBSECCION_OFICINA = tc.TMP_CNT_COD_SUBSC_OFI_CNTBLE) AS OFI_ID_CONTABLE,
            (SELECT Z.OFI_ID
                FROM OFI_OFICINAS Z 
                WHERE Z.OFI_CODIGO_ENTIDAD_OFICINA = tc.TMP_CNT_COD_ENTIDAD_OFI_ADM 
                AND Z.OFI_CODIGO_OFICINA = tc.TMP_CNT_COD_OFICINA_ADM
                AND Z.OFI_CODIGO_SUBSECCION_OFICINA = tc.TMP_CNT_COD_SUBSEC_OFI_ADM) AS OFI_ID_ADMIN,
            (SELECT DD_GES_ID FROM DD_GES_GESTION_ESPECIAL WHERE TRIM(UPPER(DD_GES_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_COD_GESTION_ESPECIAL))) AS DD_GES_ID,
            (SELECT DD_CRE_ID FROM DD_CRE_CONDICIONES_REMUN_EXT WHERE TRIM(UPPER(DD_CRE_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_REMU_GEST_ESPECIAL))) AS DD_CRE_ID,
            tc.TMP_CNT_IND_DOMICI_EXTERNA AS CNT_DOMICI_EXT,
            tc.TMP_CNT_CD_CONTRATO_PARAGUAS AS CNT_CONTRATO_PARAGUAS,
            tc.TMP_CNT_NUM_CNT_ANTERIOR AS CNT_CONTRATO_ANTERIOR,
            (SELECT DD_MTR_ID FROM DD_MTR_MOTIVO_RENUMERACION WHERE TRIM(UPPER(DD_MTR_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_MOTIVO_RENUMERACION))) AS DD_MTR_ID,
            (SELECT DD_PRO_ID FROM DD_PRO_PROPIETARIOS WHERE TRIM(UPPER(DD_PRO_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_CODIGO_PROPIETARIO))) AS DD_PRO_ID 
        FROM tmp_cnt_contratos tc
        where not exists (
                          select 1
                          from cnt_contratos c
                          where c.cnt_contrato = tc.TMP_CNT_CODIGO_CNT50
                          and c.borrado = 0
                         )
        ]]>
    </entry>
	
    <entry key="pcr.update.contratos">
  <!-- Agregar fix de oracle para que actualice el campo dd_esc_id  -->
    <![CDATA[
UPDATE cnt_contratos c SET (
			 USUARIOMODIFICAR,
			 c.fechamodificar,
			 BORRADO, 
             c.cnt_fichero_carga, 
             c.cnt_fecha_esc, 
             DD_EFC_ID,
             DD_EFC_ID_ANT,
             c.cnt_fecha_efc,
             c.cnt_fecha_efc_ant,
             c.dd_esc_id,
             c.cnt_fecha_extraccion,
             dd_tpe_id,
             dd_tpr_id,
             CNT_LIMITE_INI,
             CNT_LIMITE_FIN,
             DD_FNO_ID,
             DD_FCN_ID,
             DD_GC1_ID,
             DD_GC2_ID,
             DD_CT1_ID,
             DD_CT2_ID,
             DD_CT3_ID,
             DD_CT4_ID,
             DD_CT5_ID,
             DD_CT6_ID,
             CNT_FECHA_CONSTITUCION    ,
             CNT_FECHA_VENC
             ,CNT_COD_ENTIDAD
             ,CNT_COD_OFICINA
             ,CNT_COD_CENTRO
             ,CNT_CONTRATO
             ,DD_MON_ID
             ,CNT_FECHA_CARGA
             ,OFI_ID
             ,ZON_ID
             ,CNT_FECHA_CREACION
             --AQUI EMPIEZAN LOS CAMPOS PARA EL PROYECTO CAJAMAR (V10):
               ,CNT_FECHA_DATO,
                DD_APO_ID,
                CNT_IBAN,
                CNT_CUOTA_IMPORTE,
                CNT_CUOTA_PERIODICIDAD,
                CNT_DISPUESTO,
                CNT_SISTEMA_AMORTIZACION,
                CNT_INTERES_FIJO_VAR,
                CNT_TIPO_INTERES,
                CNT_CCC_DOMICILIACION,
                OFI_ID_CONTABLE,
                OFI_ID_ADMIN,
                DD_GES_ID,
                DD_CRE_ID,
                CNT_DOMICI_EXT,
                CNT_PARAGUAS_ID,
                CNT_CONTRATO_ANTERIOR,
                DD_MTR_ID
             ) =
        (
		   SELECT '${PasajeAProducciónUser}',
				sysdate,
				0, 
                tc.tmp_cnt_fichero_carga,
                tc.tmp_fecha_estado_contrato,
                (select def.DD_EFC_ID from dd_efc_estado_finan_cnt def where def.dd_efc_codigo = TMP_CNT_ESTADO_FINANCIERO ),
                (select def.DD_EFC_ID from dd_efc_estado_finan_cnt def where def.dd_efc_codigo = TMP_CNT_ESTADO_FINANCIERO_ANT ), 
                tc.tmp_cnt_fecha_estado_financ,
                tc.TMP_CNT_FECHA_ESTADO_FINAN_ANT,
                nvl((SELECT est.dd_esc_id FROM ${master.schema}.dd_esc_estado_cnt est WHERE est.dd_esc_codigo = TRIM(tc.tmp_estado_contrato)), 21),
                tc.tmp_cnt_fecha_extraccion,
                (select tp.dd_tpe_id from dd_tpe_tipo_prod_entidad tp where trim(dd_tpe_codigo) = trim(TMP_CNT_TIPO_PRODUCTO)),
                (select tp.dd_tpr_id from dd_tpe_tipo_prod_entidad tp where trim(dd_tpe_codigo) = trim(TMP_CNT_TIPO_PRODUCTO)),                
                tc.TMP_CNT_LIMITE_INI,
                tc.TMP_CNT_LIMITE_FIN,
                (SELECT fcn.DD_FNO_ID from DD_FNO_FINALIDAD_OFICIAL fcn where tc.TMP_CNT_FINALIDAD_OFI is not null and  fcn.DD_FNO_CODIGO  = TRIM(tc.TMP_CNT_FINALIDAD_OFI)),
                (SELECT fcn.dd_fcn_id from DD_FCN_FINALIDAD_CONTRATO fcn where TMP_CNT_FINALIDAD_OFI is not null and  fcn.DD_FCN_CODIGO  = TRIM(tc.TMP_CNT_FINALIDAD_CON)),
                (SELECT GCN.DD_GCN_ID from DD_GCN_GARANTIA_CONTRATO GCN where tc.TMP_CNT_GARANTIA_1 is not null and  GCN.DD_GCN_CODIGO = TRIM(tc.TMP_CNT_GARANTIA_1)),
                (SELECT GCO.DD_GCO_ID from DD_GCO_GARANTIA_CONTABLE GCO where tc.TMP_CNT_GARANTIA_2 is not null and  GCO.DD_GCO_CODIGO = TRIM(tc.TMP_CNT_GARANTIA_2)),
                (SELECT ct1.DD_CT1_ID from DD_CT1_CATALOGO_1 ct1 where tc.TMP_CNT_CATALOGO_1 is not null and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
                (SELECT ct2.DD_CT2_ID from DD_CT2_CATALOGO_2 ct2 JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_2 is not null and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
                (SELECT ct3.DD_CT3_ID from DD_CT3_CATALOGO_3 ct3 JOIN DD_CT2_CATALOGO_2 ct2 ON ct3.dd_ct2_id = ct2.dd_ct2_id JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_3 is not null and  ct3.DD_CT3_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_3) and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
                (SELECT ct4.DD_CT4_ID from DD_CT4_CATALOGO_4 ct4 JOIN DD_CT3_CATALOGO_3 ct3 ON ct4.dd_ct3_id = ct3.dd_ct3_id JOIN DD_CT2_CATALOGO_2 ct2 ON ct3.dd_ct2_id = ct2.dd_ct2_id  JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_4 is not null and ct4.DD_CT4_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_4) and  ct3.DD_CT3_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_3) and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
                (SELECT ct5.DD_CT5_ID from DD_CT5_CATALOGO_5 ct5 JOIN DD_CT4_CATALOGO_4 ct4 ON ct5.dd_ct4_id = ct4.dd_ct4_id JOIN DD_CT3_CATALOGO_3 ct3 ON ct4.dd_ct3_id = ct3.dd_ct3_id JOIN DD_CT2_CATALOGO_2 ct2 ON ct3.dd_ct2_id = ct2.dd_ct2_id  JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_5 is not null and ct5.DD_CT5_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_5) and ct4.DD_CT4_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_4) and  ct3.DD_CT3_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_3) and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
                (SELECT ct6.DD_CT6_ID from DD_CT6_CATALOGO_6 ct6 JOIN DD_CT5_CATALOGO_5 ct5 ON ct6.dd_ct5_id = ct5.dd_ct5_id JOIN DD_CT4_CATALOGO_4 ct4 ON ct5.dd_ct4_id = ct4.dd_ct4_id JOIN DD_CT3_CATALOGO_3 ct3 ON ct4.dd_ct3_id = ct3.dd_ct3_id JOIN DD_CT2_CATALOGO_2 ct2 ON ct3.dd_ct2_id = ct2.dd_ct2_id  JOIN DD_CT1_CATALOGO_1 ct1 ON ct2.dd_ct1_id = ct1.dd_ct1_id where tc.TMP_CNT_CATALOGO_6 is not null and  ct6.DD_CT6_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_6) and ct5.DD_CT5_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_5) and ct4.DD_CT4_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_4) and  ct3.DD_CT3_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_3) and ct2.DD_CT2_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_2) and  ct1.DD_CT1_CODIGO = TRIM(tc.TMP_CNT_CATALOGO_1)),
                tc.TMP_CNT_FECHA_CONSTITUCION,
                tc.TMP_CNT_FECHA_VENC                               
               ,TMP_CNT_COD_ENTIDAD
               ,TMP_CNT_COD_OFICINA
               ,case
	            	when tc.TMP_CNT_COD_CENTRO is null then tc.TMP_CNT_COD_OFICINA
	            	else tc.TMP_CNT_COD_CENTRO
            	end TMP_CNT_COD_CENTRO
               ,TMP_CNT_CONTRATO
               ,(select DD_MON_ID from dd_mon_monedas where DD_MON_CODIGO = TMP_CNT_MONEDA) monedaID 
               ,TMP_CNT_FECHA_CARGA                          
               ,NVL((SELECT Z.OFI_ID
                    FROM OFI_OFICINAS Z 
                    WHERE Z.OFI_CODIGO_ENTIDAD_OFICINA = tc.TMP_CNT_COD_ENT_OFI_CNTBLE 
                    AND Z.OFI_CODIGO_OFICINA = tc.TMP_CNT_COD_OFI_CNTBLE
                    AND Z.OFI_CODIGO_SUBSECCION_OFICINA = tc.TMP_CNT_COD_SUBSC_OFI_CNTBLE), 9999) AS OFI_ID
               ,NVL((select max(z.zon_id) from zon_zonificacion z, ofi_oficinas o where o.OFI_CODIGO = tc.TMP_CNT_COD_OFICINA and z.ofi_id = o.ofi_id), 12501) AS ZON_ID
               ,tc.TMP_CNT_FECHA_CONSTITUCION AS CNT_FECHA_CREACION,
               --AQUI EMPIEZAN LOS CAMPOS PARA EL PROYECTO CAJAMAR (V10):
                tc.TMP_CNT_FECHA_DATO,
                (SELECT DD_APO_ID FROM DD_APO_APLICATIVO_ORIGEN WHERE TRIM(UPPER(DD_APO_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_APLICATIVO_ORIGEN))) AS DD_APO_ID,
                tc.TMP_CNT_IBAN_CNT AS CNT_IBAN,
                tc.TMP_CNT_CUOTA_IMPORTE AS CNT_CUOTA_IMPORTE,
                tc.TMP_CNT_CUOTA_PERIODICIDAD AS CNT_CUOTA_PERIODICIDAD,
                tc.TMP_CNT_DISPUESTO AS CNT_DISPUESTO,
                (SELECT DISTINCT DD_SAM_ID FROM DD_SAM_SIST_AMORT_CONTRATO WHERE TRIM(UPPER(DD_SAM_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_SIST_AMORTIZACION))) AS CNT_SISTEMA_AMORTIZACION,
                --tc.TMP_CNT_SIST_AMORTIZACION AS CNT_SISTEMA_AMORTIZACION,
                tc.TMP_CNT_INTERES_FIJO_VBLE AS CNT_INTERES_FIJO_VAR,
                tc.TMP_CNT_TIPO_INTERES AS CNT_TIPO_INTERES,
                tc.TMP_CNT_DOMICILIACION AS CNT_CCC_DOMICILIACION,
                NVL((SELECT Z.OFI_ID
                    FROM OFI_OFICINAS Z 
                    WHERE Z.OFI_CODIGO_ENTIDAD_OFICINA = tc.TMP_CNT_COD_ENT_OFI_CNTBLE 
                    AND Z.OFI_CODIGO_OFICINA = tc.TMP_CNT_COD_OFI_CNTBLE
                    AND Z.OFI_CODIGO_SUBSECCION_OFICINA = tc.TMP_CNT_COD_SUBSC_OFI_CNTBLE), 9999) AS OFI_ID_CONTABLE,
                NVL((SELECT Z.OFI_ID
                    FROM OFI_OFICINAS Z 
                    WHERE Z.OFI_CODIGO_ENTIDAD_OFICINA = tc.TMP_CNT_COD_ENTIDAD_OFI_ADM 
                    AND Z.OFI_CODIGO_OFICINA = tc.TMP_CNT_COD_OFICINA_ADM
                    AND Z.OFI_CODIGO_SUBSECCION_OFICINA = tc.TMP_CNT_COD_SUBSEC_OFI_ADM), 9999) AS OFI_ID_ADMIN,
                (SELECT DD_GES_ID FROM DD_GES_GESTION_ESPECIAL WHERE TRIM(UPPER(DD_GES_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_COD_GESTION_ESPECIAL))) AS DD_GES_ID,
                (SELECT DD_CRE_ID FROM DD_CRE_CONDICIONES_REMUN_EXT WHERE TRIM(UPPER(DD_CRE_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_REMU_GEST_ESPECIAL))) AS DD_CRE_ID,
                tc.TMP_CNT_IND_DOMICI_EXTERNA AS CNT_DOMICI_EXT,
                tc.TMP_CNT_CD_CONTRATO_PARAGUAS AS CNT_CONTRATO_PARAGUAS,
                tc.TMP_CNT_NUM_CNT_ANTERIOR AS CNT_CONTRATO_ANTERIOR,
                (SELECT DD_MTR_ID FROM DD_MTR_MOTIVO_RENUMERACION WHERE TRIM(UPPER(DD_MTR_CODIGO)) = TRIM(UPPER(tc.TMP_CNT_MOTIVO_RENUMERACION))) AS DD_MTR_ID                        
            FROM tmp_cnt_contratos tc
            WHERE c.cnt_contrato = tc.TMP_CNT_CODIGO_CNT50
			  AND c.borrado = 0
		)
        WHERE EXISTS (SELECT 1 
        			  FROM TMP_CNT_CONTRATOS A 
        			  WHERE c.cnt_contrato = A.TMP_CNT_CODIGO_CNT50
        			  AND c.borrado = 0
        			 )
      ]]>
    </entry>
	
    <entry key="pcr.insert.movimientos">
    <![CDATA[     
             insert /*+ APPEND PARALLEL(mov_movimientos, 16) PQ_DISTRIBUTE(mov_movimientos, NONE) */ into mov_movimientos (
                    MOV_ID, 
                    CNT_ID,
                    MOV_POS_VIVA_NO_VENCIDA,
                    MOV_POS_VIVA_VENCIDA,
                    MOV_FECHA_POS_VENCIDA,
                    MOV_SALDO_DUDOSO,
                    MOV_FECHA_DUDOSO,
                    MOV_PROVISION,
                    MOV_INT_REMUNERATORIOS,
                    MOV_INT_MORATORIOS,
                    MOV_COMISIONES,
                    MOV_GASTOS,
                    MOV_FECHA_EXTRACCION,
                    MOV_FICHERO_CARGA,
                    MOV_FECHA_CARGA,
                    USUARIOCREAR,
                    FECHACREAR,
                    
                    MOV_RIESGO,
                    MOV_DEUDA_IRREGULAR,
                    MOV_DISPUESTO,
                    MOV_SALDO_PASIVO,
                    MOV_RIESGO_GARANT,
                    MOV_SALDO_EXCE,
                    MOV_LIMITE_DESC,
                    --MOV_EXTRA_1,
                    --MOV_EXTRA_2,
                    MOV_LTV_INI,
                    MOV_LTV_FIN,
                    --DD_MX3_ID,
                    --DD_MX4_ID,
                    --MOV_EXTRA_5,
                    --MOV_EXTRA_6
                                        
                    --AQUI EMPIEZAN LOS CAMPOS DE CAJAMAR (V10)
                    MOV_FECHA_DATO,
                    MOV_IMPUESTOS,
                    MOV_ENTREGAS_A_CUENTA,
                    MOV_INTERESES_ENTREGAS,
                    MOV_CUOTAS_VENCIDAS_IMPAGADAS,
                    MOV_PENDIENTE_DESEMBOLSO,
                    MOV_PROVISION_PORCENTAJE,
                    MOV_SCORING,
                    MOV_DOMICI_EXT_FECHA_RECIB_DEV,
                    MOV_DOMICI_EXT_TOTAL_SALDO_DEV,
                    MOV_CONTRATO_ANTERIOR,
                    DD_MTR_ID,
		    MOV_CNT_FECHA_INI_EPI_IRREG
                    )
                select s_mov_movimientos.nextval as mov_id,
                    (select c.cnt_id from cnt_contratos c 
                     where c.cnt_contrato = LPAD(TO_CHAR(A.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(A.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(A.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(A.TMP_CNT_NUM_ESPEC),15,'0')) as CNT_ID,
                    TMP_CNT_POS_VIVA_NO_VENCIDA,
                    TMP_CNT_POS_VIVA_VENCIDA,
                    TMP_CNT_FECHA_POS_VENCIDA,
                    TMP_CNT_SALDO_DUDOSO,
                    TMP_CNT_FECHA_DUDOSO, 
                    NVL(TMP_CNT_PROVISION,0),
                    NVL(TMP_CNT_INT_REMUNERATORIOS,0),
                    NVL(TMP_CNT_INT_MORATORIOS,0),
                    NVL(TMP_CNT_COMISIONES,0),
                    NVL(TMP_CNT_GASTOS,0),
                    TMP_CNT_FECHA_EXTRACCION,
                    TMP_CNT_FICHERO_CARGA,
                    TMP_CNT_FECHA_CARGA,
                    '${PasajeAProducciónUser}',
                    SYSDATE AS FECHACREAR,
                    
                    NVL(TMP_CNT_RIESGO,0),
                    NVL(TMP_CNT_DEUDA_IRREGULAR,0),
                    NVL(TMP_CNT_DISPUESTO,0),
                    NVL(TMP_CNT_SALDO_PASIVO,0),
                    NVL(TMP_CNT_RIESGO_GARANT    ,0),
                    NVL(TMP_CNT_SALDO_EXCE ,0),
                    NVL(TMP_CNT_LIMITE_DESC    ,0),
                    --NVL(TMP_CNT_EXTRA_1    ,0),
                    --NVL(TMP_CNT_EXTRA_2 ,0),
                    NVL(TMP_CNT_LTV_INI    ,0),
                    NVL(TMP_CNT_LTV_FIN    ,0),
                    --(select DD_MX3_ID from DD_MX3_MOVIMIENTO_EXTRA_3 where DD_MX3_CODIGO = TMP_CNT_EXTRA_3_CODIGO),
                    --(select DD_MX4_ID from DD_MX4_MOVIMIENTO_EXTRA_4 where DD_MX4_CODIGO = TMP_CNT_EXTRA_4_CODIGO),
                    -- MOV_EXTRA_5,
                    --TMP_CNT_EXTRA_6   
                    
                    --AQUI EMPIEZAN LOS CAMPOS DE CAJAMAR (V10)
                    A.TMP_CNT_FECHA_DATO AS MOV_FECHA_DATO,
                    NVL(A.TMP_CNT_IMPUESTOS,0) AS MOV_IMPUESTOS,
                    NVL(A.TMP_CNT_ENTREGAS,0) AS  MOV_ENTREGAS_A_CUENTA,
                    NVL(A.TMP_CNT_INTERESES_ENTREGAS,0) AS MOV_INTERESES_ENTREGAS,
                    NVL(TMP_CNT_CUOTAS_VENCIDAS_IMP,0) AS MOV_CUOTAS_VENCIDAS_IMPAGADAS,
                    NVL(A.TMP_CNT_PTE_DESEMBOLSO,0) AS  MOV_PENDIENTE_DESEMBOLSO,
                    NVL(A.TMP_CNT_PORCEN_PROVISION,0) AS  MOV_PROVISION_PORCENTAJE,
                    TMP_CNT_SCORING AS  MOV_SCORING,
                    TMP_CNT_FECHA_RECIBO_DEV_ANT AS MOV_DOMICI_EXT_FECHA_RECIB_DEV,
                    TMP_CNT_SALDO_VENC_NO_RECLAM AS MOV_DOMICI_EXT_TOTAL_SALDO_DEV,
                    TMP_CNT_NUM_CNT_ANTERIOR AS MOV_CONTRATO_ANTERIOR,
                    (SELECT DD_MTR_ID FROM DD_MTR_MOTIVO_RENUMERACION WHERE TRIM(UPPER(DD_MTR_CODIGO)) = TRIM(UPPER(A.TMP_CNT_MOTIVO_RENUMERACION))) AS DD_MTR_ID,
		    TMP_CNT_FECHA_INI_EPI_IRREG
                from tmp_cnt_contratos A
        ]]>
    </entry>
	
	<!-- BAYM-104 (Jaime Sánchez-Cuenca): Construcción Técnica: Carga P.C.R. CONTRATOS - Desactivación de contratos que vuelven a llegar.-->
	 <entry key="pcr.deactivate1.contratos">
      <![CDATA[
        UPDATE CNT_CONTRATOS A
		 SET (A.DD_ESC_ID,
			  A.USUARIOMODIFICAR,
			  A.FECHAMODIFICAR)
		 = (SELECT  DD_ESC_ID,
					'BACTH' AS USUARIOMODIFICAR,
					SYSDATE AS FECHAMODIFICAR
			FROM ${master.schema}.DD_ESC_ESTADO_CNT
			WHERE DD_ESC_DESCRIPCION = 'No recibido'
			)         
		WHERE NOT EXISTS (SELECT 1
						  FROM TMP_CNT_CONTRATOS X
						  WHERE X.TMP_CNT_CODIGO_CNT50 = A.CNT_CONTRATO
						 )
        ]]>
    </entry>
	
	<!-- BAYM-104: Además al desactivar CONTRATOS hay que meter un MOV con todos los importes a 0 -->
	<entry key="pcr.deactivate2.contratos">
	<![CDATA[
        INSERT /*+ APPEND PARALLEL(mov_movimientos, 16) PQ_DISTRIBUTE(mov_movimientos, NONE) */ INTO MOV_MOVIMIENTOS(MOV_ID,
                            CNT_ID,
                            MOV_POS_VIVA_NO_VENCIDA,
                            MOV_POS_VIVA_VENCIDA,
                            MOV_FECHA_POS_VENCIDA,
                            MOV_SALDO_DUDOSO,
                            MOV_FECHA_DUDOSO,
                            MOV_PROVISION,
                            MOV_INT_REMUNERATORIOS,
                            MOV_INT_MORATORIOS,
                            MOV_COMISIONES,
                            MOV_GASTOS,
                            MOV_FECHA_EXTRACCION,
                            MOV_FICHERO_CARGA,
                            MOV_FECHA_CARGA,
                            USUARIOCREAR,
                            FECHACREAR,
                            MOV_RIESGO,
                            MOV_DEUDA_IRREGULAR,
                            MOV_DISPUESTO,
                            MOV_SALDO_PASIVO,
                            MOV_RIESGO_GARANT,
                            MOV_SALDO_EXCE,
                            MOV_LIMITE_DESC,
                            MOV_LTV_INI,
                            MOV_LTV_FIN,
                            MOV_FECHA_DATO,
                            MOV_IMPUESTOS,
                            MOV_ENTREGAS_A_CUENTA,
                            MOV_INTERESES_ENTREGAS,
                            MOV_CUOTAS_VENCIDAS_IMPAGADAS,
                            MOV_PENDIENTE_DESEMBOLSO,
                            MOV_PROVISION_PORCENTAJE,
                            MOV_CNT_FECHA_INI_EPI_IRREG,
                            MOV_SCORING,
                            MOV_DOMICI_EXT_FECHA_RECIB_DEV,
                            MOV_DOMICI_EXT_TOTAL_SALDO_DEV)
		SELECT S_MOV_MOVIMIENTOS.NextVal AS MOV_ID,
			   A.CNT_ID,
			   0,
			   0,
			   SYSDATE AS MOV_FECHA_POS_VENCIDA,
			   0,
			   SYSDATE AS MOV_FECHA_DUDOSO,
			   0,
			   0,
			   0,
			   0,
			   0,
			   SYSDATE AS MOV_FECHA_EXTRACCION,
			   (SELECT TMP_CNT_FICHERO_CARGA FROM TMP_CNT_CONTRATOS WHERE ROWNUM=1),
			   (SELECT TMP_CNT_FECHA_CARGA FROM TMP_CNT_CONTRATOS WHERE ROWNUM=1),
			   'BATCH',
			   SYSDATE,
			   0,
			   0,
			   0,
			   0,
			   0,
			   0,
			   0,
			   0,
			   0,
			   SYSDATE AS MOV_FECHA_DATO,
			   0,
			   0,
			   0,
			   0,
			   0,
			   0,
			   SYSDATE AS FECHA_INICIO_EPI_IRREGULAR,
			   0,
			   SYSDATE AS MOV_DOMICI_EXT_FECHA_RECIB_DEV,
			   0
		FROM CNT_CONTRATOS A
		WHERE DD_ESC_ID = (SELECT DD_ESC_ID FROM ${master.schema}.DD_ESC_ESTADO_CNT WHERE DD_ESC_DESCRIPCION = 'No recibido') 
		AND NOT EXISTS (SELECT 1
						FROM TMP_CNT_CONTRATOS X 
						WHERE X.TMP_CNT_CODIGO_CNT50 = A.CNT_CONTRATO
					   )
         ]]>
    </entry>
	<!--  FIN BAYM 104 -->
	
    <entry key="pcr.analize.contratos">
      <![CDATA[
        ANALYZE TABLE cnt_contratos ${sql.analyze}
         ]]>
    </entry>
	
    <entry key="pcr.analize.movimientos">
      <![CDATA[
        ANALYZE TABLE mov_movimientos ${sql.analyze}
         ]]>
    </entry>
	
    <entry key="pcr.fechaExtraccion">
    <![CDATA[
		SELECT COUNT (1)
        FROM tmp_cnt_per A, tmp_cnt_contratos B, tmp_per_personas C, tmp_direcciones D
        WHERE A.TMP_CNT_PER_COD_PROPIETARIO = B.TMP_CNT_CODIGO_PROPIETARIO
          AND A.TMP_CNT_PER_TIPO_PRODUCTO = B.TMP_CNT_TIPO_PRODUCTO
          AND A.tmp_cnt_per_NUM_contrato = B.tmp_cnt_contrato
          AND A.TMP_CNT_PER_NUM_ESPEC = B.TMP_CNT_NUM_ESPEC
          AND A.tmp_cnt_per_cod_entidad = B.tmp_cnt_cod_entidad
          AND A.tmp_cnt_per_cod_PERSONA = C.tmp_per_cod_PERSONA
          AND D.tmp_dir_cod_cliente_entidad = C.tmp_per_cod_PERSONA
          AND (   tmp_cnt_per_fecha_extraccion != tmp_cnt_fecha_extraccion
                    OR tmp_cnt_per_fecha_extraccion != tmp_per_fecha_extraccion
                    OR tmp_cnt_per_fecha_extraccion != tmp_dir_fecha_extraccion
                    OR tmp_per_fecha_extraccion != tmp_cnt_fecha_extraccion
                    OR tmp_per_fecha_extraccion != tmp_dir_fecha_extraccion
                    OR tmp_dir_fecha_extraccion != tmp_cnt_fecha_extraccion
                   )
        ]]>
    </entry>
    <!-- EJD:> Proyecto Bankia  -->
    <entry key="cargaContrato.contractSumValidator"><![CDATA[select sum(TMP_CNT_POS_VIVA_NO_VENCIDA) from tmp_cnt_contratos]]></entry>
	<!-- EJD:> Proyecto Bankia  -->     
    <entry key="cnt-01.entityValidator">
      <![CDATA[
      SELECT tmp_cnt_cod_entidad AS ERROR_FIELD,
			(tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE      
	  FROM tmp_cnt_contratos X  
	  WHERE tmp_cnt_cod_entidad <> ?
      ]]>
    </entry>
   <!-- EJD:> Proyecto Bankia  -->     
    <entry key="cnt-02.loadDateValidator">
      <![CDATA[
         SELECT TMP_CNT_FECHA_EXTRACCION AS ERROR_FIELD,
			   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE      
         from TMP_CNT_CONTRATOS X where TMP_CNT_FECHA_EXTRACCION <> to_date(?,'YYYYMMDD')
         ]]>
    </entry>
	
    <entry key="cnt-03.movementValidator">
    <![CDATA[
      SELECT tc.tmp_cnt_fecha_extraccion AS ERROR_FIELD,
               (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(tc.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(tc.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(tc.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(tc.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE
          FROM cnt_contratos c, tmp_cnt_contratos tc
          where c.cnt_contrato = TO_CHAR(tc.TMP_CNT_CODIGO_PROPIETARIO)||'|'||tc.TMP_CNT_TIPO_PRODUCTO||'|'||TO_CHAR(tc.TMP_CNT_CONTRATO )||'|'||TO_CHAR(tc.TMP_CNT_NUM_ESPEC)
          and c.cnt_fecha_extraccion >= tc.tmp_cnt_fecha_extraccion          
        ]]>
    </entry>
    <entry key="cnt-04.insertOfficeZoneCodeValidator"> 
      <![CDATA[	
		DECLARE
		    
		    CURSOR c_NEWOFFICE IS 
		      SELECT  TMP_CNT_COD_ENT_OFI_CNTBLE,
		              TMP_CNT_COD_OFI_CNTBLE,
		              TMP_CNT_COD_SUBSC_OFI_CNTBLE,
		              TMP_CNT_COD_OFICINA
		      FROM tmp_cnt_contratos X 
		      WHERE NOT EXISTS (
		        SELECT 1 
		         FROM ofi_oficinas o 
		         WHERE X.TMP_CNT_COD_OFICINA = O.OFI_CODIGO_ENTIDAD_OFICINA||LPAD(O.OFI_CODIGO_OFICINA, 5, '0')||LPAD(O.OFI_CODIGO_SUBSECCION_OFICINA, 2, '0')
		                       );
		                       
		    v_SQL VARCHAR2(32000);
		    v_SQLInsert VARCHAR2(32000);
		    n_OFI_ID NUMBER;
			n_OFI_CODE VARCHAR2 (100);
			
			n_ZON_ID NUMBER;
			v_ZON_COD VARCHAR2(50);
			n_ZON_PID NUMBER;
			ifExist NUMBER;
			
		BEGIN
		
		    FOR i IN c_NEWOFFICE LOOP    
		      v_SQL := '--> VALORES DEL LOOP '||i.TMP_CNT_COD_ENT_OFI_CNTBLE||' - '||i.TMP_CNT_COD_OFI_CNTBLE||' - '||i.TMP_CNT_COD_SUBSC_OFI_CNTBLE||'.';                 
		      	  
			  select S_OFI_OFICINAS.NEXTVAL into n_OFI_ID from dual;
			  select i.TMP_CNT_COD_OFICINA into n_OFI_CODE FROM DUAL; 
			  select count(1) into ifExist FROM OFI_OFICINAS where OFI_CODIGO = i.TMP_CNT_COD_OFICINA;
			
			  --DBMS_OUTPUT.PUT_LINE('Existe Oficinas:>'||ifExist);
			  	
			  if ifExist = 0 then			
				  v_SQLInsert := 'Insert into OFI_OFICINAS (  
									  OFI_ID, OFI_CODIGO, OFI_NOMBRE,
									  VERSION, USUARIOCREAR, FECHACREAR,
									  BORRADO, OFI_FECHA_EXTRACCION, OFI_FECHA_DATO,
									  OFI_CODIGO_ENTIDAD_OFICINA, OFI_CODIGO_OFICINA, OFI_CODIGO_SUBSECCION_OFICINA
									) 
									  SELECT '||n_OFI_ID||', '''||n_OFI_CODE||''', ''Oficina pendiente de definir'',
									  		 ''0'', ''Batch'',sysdate,
									  		 ''0'', sysdate, sysdate,
									  		 '||i.TMP_CNT_COD_ENT_OFI_CNTBLE||','||i.TMP_CNT_COD_OFI_CNTBLE||','||i.TMP_CNT_COD_SUBSC_OFI_CNTBLE||'
									  FROM DUAL 
									  WHERE '''||n_OFI_CODE||''' NOT IN (SELECT DISTINCT OFI_CODIGO FROM OFI_OFICINAS)
								';
				  
			      --DBMS_OUTPUT.PUT_LINE('Insertamos Oficinas:>'||v_SQL||' Ofi id:> '||n_OFI_ID||' Cod. Oficina:> '||n_OFI_CODE||' Insert:> '||v_SQLInsert||'.'); 
			      EXECUTE IMMEDIATE v_SQLInsert;
			
			      -- DBMS_OUTPUT.PUT_LINE('ZONIFICAMOS>');
			      select s_ZON_ZONIFICACION.nextval into n_ZON_ID from dual;
			
				    select to_char('01'||newzoncod) zoncod into v_ZON_COD from (select max(hijo)+1 newzoncod 
																			  from (select zon_cod, to_number(substr(zon_cod, 3, 6)) hijo
																				    from zon_zonificacion 
																				    where length(zon_cod) = 6
																				 ) 
																			  );
			
				   SELECT ZON_ID into n_ZON_PID FROM ZON_ZONIFICACION WHERE ZON_DESCRIPCION = 'CENTRO EMPRESA CAJAMAR';
			
				  v_SQLInsert := 'Insert into ZON_ZONIFICACION (
											  ZON_ID, ZON_COD, ZON_PID,
											  NIV_ID, OFI_ID, VERSION, 
											  USUARIOCREAR,FECHACREAR, BORRADO,
											  ZON_FECHA_EXTRACCION,ZON_FECHA_DATO
											  ) 
									 SELECT '||n_ZON_ID||', '''||v_ZON_COD||''', '||n_ZON_PID||',
											(SELECT NIV_ID FROM niv_nivel WHERE niv_descripcion = ''Oficina'' and borrado = 0),  '||n_OFI_ID||', ''0'',
									 		''Batch'',sysdate,  ''0'', 
				  							sysdate, sysdate
				  					 FROM DUAL		  					 
				  				  ';
							  
			      --DBMS_OUTPUT.PUT_LINE('Insertamos Zonas:>'||v_SQL||' ZON_ID:> '||n_ZON_ID||' ZON_COD:> '||v_ZON_COD||' ZON_PID:> '||n_ZON_PID||' Insert:> '||v_SQLInsert||'.');
			      EXECUTE IMMEDIATE v_SQLInsert;       
				end if;
		    END LOOP;
		    
		    --COMMIT;
		END;
         ]]>
    </entry>	
    <entry key="cnt-04.officeCodeValidator"> 
      <![CDATA[
        SELECT TMP_CNT_COD_OFICINA AS ERROR_FIELD, 
               (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE
        FROM tmp_cnt_contratos X 
        WHERE NOT EXISTS(SELECT 1 
                         FROM ofi_oficinas o 
                         WHERE X.TMP_CNT_COD_OFICINA = O.OFI_CODIGO_ENTIDAD_OFICINA||LPAD(O.OFI_CODIGO_OFICINA, 5, '0')||LPAD(O.OFI_CODIGO_SUBSECCION_OFICINA, 2, '0')
                         )
         ]]>
    </entry>
	
    <entry key="cnt-05.zonaCodeValidator">
      <![CDATA[
        SELECT X.TMP_CNT_COD_ENT_OFI_CNTBLE||'|'||X.TMP_CNT_COD_OFI_CNTBLE||'|'||X.TMP_CNT_COD_SUBSC_OFI_CNTBLE AS ERROR_FIELD,
			  (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE 
        FROM tmp_cnt_contratos X 
        WHERE NOT EXISTS(SELECT 1 
                         FROM zon_zonificacion z, ofi_oficinas o
                         where O.OFI_CODIGO_ENTIDAD_OFICINA||LPAD(O.OFI_CODIGO_OFICINA, 5, '0')||LPAD(O.OFI_CODIGO_SUBSECCION_OFICINA, 2, '0') = X.TMP_CNT_COD_OFICINA
                         and z.ofi_id = o.ofi_id
                        )
         ]]>
    </entry>
	
    <entry key="cnt-06.insertCurrencyCodeValidator">
      <![CDATA[
		INSERT INTO dd_mon_monedas (DD_MON_ID, DD_MON_CODIGO, DD_MON_DESCRIPCION, USUARIOCREAR, FECHACREAR, BORRADO)	
		SELECT S_dd_mon_monedas.NEXTVAL
		     ,MONX.DD_MON_CODIGO
		     ,MONX.DD_MON_DESCRIPCION
		     ,'${PasajeAProducciónUser}' 
		     ,SYSTIMESTAMP
		     ,0
		FROM (
					SELECT DISTINCT ERROR_FIELD as DD_MON_CODIGO, 'Moneda pendiente de definir ('||ERROR_FIELD||')' as DD_MON_DESCRIPCION 
					from (
		          SELECT TMP_CNT_MONEDA AS ERROR_FIELD,
		          (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE 
		          FROM tmp_cnt_contratos X
		          WHERE NOT EXISTS (SELECT 1 FROM dd_mon_monedas m WHERE X.TMP_CNT_MONEDA = m.DD_MON_CODIGO)
		        )
		) MONX         
      ]]>
    </entry>	
	
    <entry key="cnt-06.currencyCodeValidator">
      <![CDATA[
        SELECT TMP_CNT_MONEDA AS ERROR_FIELD,
        (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE 
        FROM tmp_cnt_contratos X
        WHERE NOT EXISTS (SELECT 1
                          FROM dd_mon_monedas m 
                          WHERE X.TMP_CNT_MONEDA = m.DD_MON_CODIGO)
      ]]>
    </entry>
	
    <entry key="cnt-07.insertProductTypeCodeValidator">
    <![CDATA[
		INSERT INTO DD_TPE_TIPO_PROD_ENTIDAD (DD_TPE_ID, DD_TPR_ID, DD_TPE_CODIGO, DD_TPE_ACTIVO, DD_TPE_DESCRIPCION, USUARIOCREAR, FECHACREAR, BORRADO)
		SELECT 
		  S_DD_TPE_TIPO_PROD_ENTIDAD.NEXTVAL
		  ,(SELECT DD_TPR_ID FROM DD_TPR_TIPO_PROD TPR WHERE UPPER(TPR.DD_TPR_DESCRIPCION) LIKE '%PRODUCTO NO ESPECIFICADO%') 
		  ,TPEX.DD_TPE_CODIGO 
		  ,1
		  ,TPEX.DD_TPE_DESCRIPCION
		  ,'${PasajeAProducciónUser}' 
		  ,SYSTIMESTAMP 
		  ,0
		FROM (
		    SELECT DISTINCT ERROR_FIELD as DD_TPE_CODIGO, 'Tipo producto pendiente de definir ('||ERROR_FIELD||')' as DD_TPE_DESCRIPCION 
		    from (  
	          SELECT X.TMP_CNT_TIPO_PRODUCTO AS ERROR_FIELD,
	          (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE
	          FROM TMP_CNT_CONTRATOS X
	          WHERE NOT EXISTS (SELECT 1 FROM DD_TPE_TIPO_PROD_ENTIDAD TPE WHERE X.TMP_CNT_TIPO_PRODUCTO = TRIM(TPE.DD_TPE_CODIGO))   
	        )  
	    ) TPEX	
    ]]>
    </entry>  

    <entry key="cnt-07.productTypeCodeValidator">
    <![CDATA[
      SELECT tmp_cnt_tipo_producto AS ERROR_FIELD,
             (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE 
      FROM tmp_cnt_contratos X 
      WHERE NOT EXISTS (SELECT 1
                        FROM dd_tpe_tipo_prod_entidad tpe 
                        where trim(X.tmp_cnt_tipo_producto) = trim(tpe.DD_TPE_CODIGO)
                        )
      ]]>
    </entry>
	
    <entry key="cnt-08.contratoRelacionValidator">
      <![CDATA[
        SELECT 'No existe relacion' AS ERROR_FIELD,
        (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE 
        from tmp_cnt_contratos X
        where not exists (select 1 
        	              from tmp_cnt_per tcp 
        	              where tcp.TMP_CNT_PER_COD_PROPIETARIO = X.TMP_CNT_CODIGO_PROPIETARIO
                          AND tcp.TMP_CNT_PER_TIPO_PRODUCTO = X.TMP_CNT_TIPO_PRODUCTO
                          AND X.TMP_CNT_CONTRATO = tcp.TMP_CNT_PER_NUM_CONTRATO
                          AND tcp.TMP_CNT_PER_NUM_ESPEC = X.TMP_CNT_NUM_ESPEC
                         )
        ]]>
    </entry>
	
    <entry key="cnt-09.movimientoPrevio">
    <![CDATA[
    SELECT cnt.cnt_id AS ERROR_FIELD,
          (cnt_cod_entidad ||'-'|| cnt.CNT_CONTRATO)AS ENTITY_CODE 
        FROM cnt_contratos cnt, ${master.schema}.DD_ESC_ESTADO_CNT ec 
        WHERE CNT.BORRADO = 0
        AND CNT.DD_ESC_ID = ec.DD_ESC_ID
        AND ec.dd_esc_codigo = ?
        AND NOT EXISTS(SELECT 1
                       FROM TMP_CNT_CONTRATOS X
                       WHERE LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0') = cnt.CNT_CONTRATO
                       )
     ]]>
    </entry>
	
    <entry key="cnt-10.fechaExtracionMenorHoy">
    <![CDATA[
        SELECT X.tmp_cnt_fecha_extraccion AS ERROR_FIELD,
			  (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE 
        FROM tmp_cnt_contratos X
        WHERE X.tmp_cnt_fecha_extraccion > ${sql.function.curdate}
     ]]>
    </entry>
	
    <entry key="cnt-11.fechaPosVencida">
    <![CDATA[
           SELECT X.tmp_cnt_fecha_pos_vencida AS ERROR_FIELD,
				 (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE         
            FROM tmp_cnt_contratos X, cnt_contratos c, mov_movimientos m
            WHERE LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0') = c.cnt_contrato
            AND c.cnt_id = m.cnt_id
            AND X.tmp_cnt_fecha_pos_vencida < m.mov_fecha_pos_vencida
        ]]>
    </entry>
    <entry key="cnt-12.activoPositvo">
    <![CDATA[
			SELECT X.TMP_CNT_POS_VIVA_NO_VENCIDA AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
            FROM tmp_cnt_contratos X, dd_tpe_tipo_prod_entidad tp
            WHERE TRIM(tp.dd_tpe_codigo) = TRIM(X.TMP_CNT_TIPO_PRODUCTO)
            AND tp.dd_tpe_activo=1
            AND X.TMP_CNT_POS_VIVA_VENCIDA < 0
    ]]>
    </entry>
    
	<entry key="cnt-13.insertFinalidadOficial">
    <![CDATA[	
    	INSERT INTO DD_FNO_FINALIDAD_OFICIAL (DD_FNO_ID, DD_FNO_CODIGO, DD_FNO_DESCRIPCION, USUARIOCREAR, FECHACREAR, BORRADO)	
		SELECT S_DD_FNO_FINALIDAD_OFICIAL.NEXTVAL
			   ,FNOX.DD_FNO_CODIGO
			   ,FNOX.DD_FNO_DESCRIPCION
			   ,'${PasajeAProducciónUser}' 
			   ,SYSTIMESTAMP
			   ,0
		FROM (
			SELECT DISTINCT ERROR_FIELD as DD_FNO_CODIGO, 'Finalidad pendiente de definir ('||ERROR_FIELD||')' as DD_FNO_DESCRIPCION 
			from (
				SELECT 	X.TMP_CNT_FINALIDAD_OFI AS ERROR_FIELD
						,(tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
				FROM TMP_CNT_CONTRATOS X
				WHERE X.TMP_CNT_FINALIDAD_OFI is not null 
					AND NOT EXISTS (SELECT 1 FROM DD_FNO_FINALIDAD_OFICIAL FNO WHERE X.TMP_CNT_FINALIDAD_OFI = FNO.DD_FNO_CODIGO)
			)
		) FNOX
    ]]>
    </entry>      
	
	<entry key="cnt-13.finalidadOficial">
    <![CDATA[
			SELECT X.TMP_CNT_FINALIDAD_OFI AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
            FROM tmp_cnt_contratos X
            WHERE X.TMP_CNT_FINALIDAD_OFI is not null 
            AND NOT EXISTS (SELECT 1
                            FROM DD_FNO_FINALIDAD_OFICIAL FNO
			                WHERE X.TMP_CNT_FINALIDAD_OFI = FNO.DD_FNO_CODIGO)
    ]]>
    </entry>  
        
	<entry key="cnt-14.insertFinalidadContrato">
    <![CDATA[
		INSERT INTO DD_FCN_FINALIDAD_CONTRATO  (DD_FCN_ID, DD_FCN_CODIGO, DD_FCN_DESCRIPCION, USUARIOCREAR, FECHACREAR, BORRADO)
		SELECT 
			S_DD_FCN_FINALIDAD_CONTRATO.NEXTVAL
			,FNOX.DD_FCN_CODIGO
			,FNOX.DD_FCN_DESCRIPCION
			,'${PasajeAProducciónUser}' 
			,SYSTIMESTAMP 
			,0
		FROM (
			SELECT DISTINCT ERROR_FIELD as DD_FCN_CODIGO, 'Finalidad CNT pendiente de definir ('||ERROR_FIELD||')' as DD_FCN_DESCRIPCION 
			from (
					SELECT X.TMP_CNT_FINALIDAD_CON AS ERROR_FIELD,
		                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
		            FROM tmp_cnt_contratos X
		            WHERE X.TMP_CNT_FINALIDAD_CON is not null 
		            AND NOT EXISTS (SELECT 1 FROM DD_FCN_FINALIDAD_CONTRATO FCN WHERE X.TMP_CNT_FINALIDAD_CON = FCN.DD_FCN_CODIGO )
			)
		) FNOX    
    ]]>
    </entry>    
	<entry key="cnt-14.finalidadContrato">
    <![CDATA[
		SELECT X.TMP_CNT_FINALIDAD_CON AS ERROR_FIELD,
			  (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
 	    FROM tmp_cnt_contratos X
		WHERE X.TMP_CNT_FINALIDAD_CON is not null 
		AND NOT EXISTS (SELECT 1 
		 			    FROM DD_FCN_FINALIDAD_CONTRATO FCN
						WHERE X.TMP_CNT_FINALIDAD_CON = FCN.DD_FCN_CODIGO
						)
    ]]>
    </entry>
    <entry key="cnt-15.insertGarantia1">
    <![CDATA[
	INSERT INTO DD_GCN_GARANTIA_CONTRATO (DD_GCN_ID, DD_GCN_CODIGO, DD_GCN_DESCRIPCION,
					 VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
	SELECT S_DD_GCN_GARANTIA_CONTRATO.NEXTVAL,DD_GCN_CODIGO, DD_GCN_DESCRIPCION, 
				0, '${PasajeAProducciónUser}',SYSTIMESTAMP, 0
			FROM (
			    SELECT DISTINCT ERROR_FIELD as DD_GCN_CODIGO, 'Garantia contrato pendiente de definir ('||ERROR_FIELD||')' as DD_GCN_DESCRIPCION 
			    from (  
				  SELECT X.TMP_CNT_GARANTIA_1 AS ERROR_FIELD,
				    (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
			      FROM tmp_cnt_contratos X
			      WHERE X.TMP_CNT_GARANTIA_1 is not null 
			      AND NOT EXISTS (SELECT 1
					      FROM DD_GCN_GARANTIA_CONTRATO GCN
							  WHERE X.TMP_CNT_GARANTIA_1 = GCN.DD_GCN_CODIGO)
				)
			) GCNX
	]]>
    </entry>

    <entry key="cnt-15.garantia1">
	<![CDATA[
	  SELECT X.TMP_CNT_GARANTIA_1 AS ERROR_FIELD,
            (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
      FROM tmp_cnt_contratos X
      WHERE X.TMP_CNT_GARANTIA_1 is not null 
      AND NOT EXISTS (SELECT 1
                      FROM DD_GCN_GARANTIA_CONTRATO GCN
			          WHERE X.TMP_CNT_GARANTIA_1 = GCN.DD_GCN_CODIGO
					  )
	]]>
    </entry>

    <entry key="cnt-16.insertGarantia2">
    <![CDATA[
	INSERT INTO DD_GCO_GARANTIA_CONTABLE (DD_GCO_ID, DD_GCO_CODIGO, DD_GCO_DESCRIPCION,
					 VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
	SELECT S_DD_GCO_GARANTIA_CONTABLE.NEXTVAL,DD_GCO_CODIGO, DD_GCO_DESCRIPCION, 
				0, '${PasajeAProducciónUser}',SYSTIMESTAMP, 0
			FROM (
			    SELECT DISTINCT ERROR_FIELD as DD_GCO_CODIGO, 'Garantia contable pendiente de definir ('||ERROR_FIELD||')' as DD_GCO_DESCRIPCION 
			    from (  
				SELECT X.TMP_CNT_GARANTIA_2 AS ERROR_FIELD,
					  (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
				FROM tmp_cnt_contratos X
				WHERE X.TMP_CNT_GARANTIA_2 is not null 
				AND NOT EXISTS (SELECT 1
								FROM DD_GCO_GARANTIA_CONTABLE GCO
								WHERE X.TMP_CNT_GARANTIA_2 = GCO.DD_GCO_CODIGO
								)
				)
			) GCOX
	]]>
    </entry>


	<entry key="cnt-16.garantia2">
    <![CDATA[
			SELECT X.TMP_CNT_GARANTIA_2 AS ERROR_FIELD,
				  (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
			FROM tmp_cnt_contratos X
			WHERE X.TMP_CNT_GARANTIA_2 is not null 
			AND NOT EXISTS (SELECT 1
							FROM DD_GCO_GARANTIA_CONTABLE GCO
							WHERE X.TMP_CNT_GARANTIA_2 = GCO.DD_GCO_CODIGO
							)
            
	]]>
    </entry>

	<entry key="cnt-17.insertCatalogo1">
    <![CDATA[
		INSERT INTO DD_CT1_CATALOGO_1 (DD_CT1_ID, DD_CT1_CODIGO, DD_CT1_DESCRIPCION, USUARIOCREAR, FECHACREAR, BORRADO)	
		SELECT S_DD_CT1_CATALOGO_1.NEXTVAL
		     ,CT1X.DD_CT1_CODIGO
		     ,CT1X.DD_CT1_DESCRIPCION
		     ,'${PasajeAProducciónUser}' 
		     ,SYSTIMESTAMP
		     ,0
		FROM (
					SELECT DISTINCT ERROR_FIELD as DD_CT1_CODIGO, 'Catalogo 1 pendiente de definir ('||ERROR_FIELD||')' as DD_CT1_DESCRIPCION 
					from (
		          SELECT X.TMP_CNT_CATALOGO_1 AS ERROR_FIELD,
		               (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
		            FROM tmp_cnt_contratos X
		          WHERE X.TMP_CNT_CATALOGO_1 is not null
		          AND NOT EXISTS (SELECT 1 FROM DD_CT1_CATALOGO_1 CT1	WHERE X.TMP_CNT_CATALOGO_1 = CT1.DD_CT1_CODIGO )
		        )
		) CT1X 
	]]>
    </entry>

	<entry key="cnt-17.catalogo1">
    <![CDATA[
			SELECT X.TMP_CNT_CATALOGO_1 AS ERROR_FIELD,
				   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
 		    FROM tmp_cnt_contratos X
			WHERE X.TMP_CNT_CATALOGO_1 is not null
			AND NOT EXISTS (SELECT 1 
			 			    FROM DD_CT1_CATALOGO_1 CT1
							WHERE X.TMP_CNT_CATALOGO_1 = CT1.DD_CT1_CODIGO
							)
	]]>
    </entry>

	<entry key="cnt-18.catalogo2">
    <![CDATA[
			SELECT X.TMP_CNT_CATALOGO_2 AS ERROR_FIELD,
				   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
 		    FROM tmp_cnt_contratos X
			WHERE X.TMP_CNT_CATALOGO_2 is not null
			AND NOT EXISTS (SELECT 1 
			 			    FROM DD_CT2_CATALOGO_2 CT2
							WHERE X.TMP_CNT_CATALOGO_2 = CT2.DD_CT2_CODIGO
							)
	]]>
    </entry>


	<entry key="cnt-19.catalogo3">
    <![CDATA[
			SELECT X.TMP_CNT_CATALOGO_3 AS ERROR_FIELD,
				   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
 		    FROM tmp_cnt_contratos X
			WHERE X.TMP_CNT_CATALOGO_3 is not null
			AND NOT EXISTS (SELECT 1 
			 			    FROM DD_CT3_CATALOGO_3 CT3
							WHERE X.TMP_CNT_CATALOGO_3 = CT3.DD_CT3_CODIGO
							)
    ]]>
    </entry>



	<entry key="cnt-20.catalogo4">
    <![CDATA[
			SELECT X.TMP_CNT_CATALOGO_4 AS ERROR_FIELD,
				   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
 		    FROM tmp_cnt_contratos X
			WHERE X.TMP_CNT_CATALOGO_4 is not null
			AND NOT EXISTS (SELECT 1 
			 			    FROM DD_CT4_CATALOGO_4 CT4
							WHERE X.TMP_CNT_CATALOGO_4 = CT4.DD_CT4_CODIGO
							)
    ]]>
    </entry>

	<!-- ESTA VALIDACION NO ENTRA PARA CAJAMAR (V10) -->
	<entry key="cnt-21.extra3">
    <![CDATA[
      SELECT tmp_cnt.TMP_CNT_EXTRA_3_CODIGO AS ERROR_FIELD,
      (tmp_cnt.tmp_cnt_cod_entidad ||'-'|| tmp_cnt.tmp_cnt_cod_oficina ||'-'|| tmp_cnt.tmp_cnt_contrato) AS ENTITY_CODE  
      FROM tmp_cnt_contratos tmp_cnt
      WHERE tmp_cnt.TMP_CNT_EXTRA_3_CODIGO is not null and NOT EXISTS (
				SELECT * FROM DD_MX3_MOVIMIENTO_EXTRA_3 MX3
			WHERE tmp_cnt.TMP_CNT_EXTRA_3_CODIGO = MX3.DD_MX3_CODIGO)
    ]]>
    </entry>

	<!-- ESTA VALIDACION NO ENTRA PARA CAJAMAR (V10) -->
	<entry key="cnt-22.extra4">
    <![CDATA[
          SELECT tmp_cnt.TMP_CNT_EXTRA_4_CODIGO AS ERROR_FIELD,
      (tmp_cnt.tmp_cnt_cod_entidad ||'-'|| tmp_cnt.tmp_cnt_cod_oficina ||'-'|| tmp_cnt.tmp_cnt_contrato) AS ENTITY_CODE  
      FROM tmp_cnt_contratos tmp_cnt
      WHERE tmp_cnt.TMP_CNT_EXTRA_4_CODIGO is not null and NOT EXISTS (
				SELECT * FROM DD_MX4_MOVIMIENTO_EXTRA_4 MX4
			WHERE tmp_cnt.TMP_CNT_EXTRA_4_CODIGO = MX4.DD_MX4_CODIGO)
    ]]>
    </entry>
	
	<entry key="cnt-23.relacionesCatalogos">
    <![CDATA[
          select
            X.TMP_CNT_ID as ERROR_FIELD,
            (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE
            from tmp_cnt_contratos X 
            where X.TMP_CNT_ID not in
            (
            select 
                tmp_cnt.TMP_CNT_ID
            from tmp_cnt_contratos tmp_cnt,DD_CT1_CATALOGO_1 c1 
            JOIN DD_CT2_CATALOGO_2 c2 ON c2.dd_ct1_id = c1.dd_ct1_id 
            JOIN DD_CT3_CATALOGO_3 c3 ON c3.dd_ct2_id = c2.dd_ct2_id 
            JOIN DD_CT4_CATALOGO_4 c4 ON c4.dd_ct3_id = c3.dd_ct3_id 
            LEFT JOIN DD_CT5_CATALOGO_5 c5 ON c5.dd_ct4_id = c4.dd_ct4_id 
            LEFT JOIN DD_CT6_CATALOGO_6 c6 ON c6.dd_ct5_id = c5.dd_ct5_id 
            where c1.dd_ct1_codigo = tmp_cnt.TMP_CNT_CATALOGO_1
            and c2.dd_ct2_codigo = tmp_cnt.TMP_CNT_CATALOGO_2
            and c3.dd_ct3_codigo = tmp_cnt.TMP_CNT_CATALOGO_3
            and c4.dd_ct4_codigo = tmp_cnt.TMP_CNT_CATALOGO_4
            and c5.dd_ct5_codigo = tmp_cnt.TMP_CNT_CATALOGO_5
            and c6.dd_ct6_codigo = tmp_cnt.TMP_CNT_CATALOGO_6
            )
    ]]>
    </entry>
<!-- A PARTIR DE AQUI, LAS NUEVAS VALIDACIONES PARA CAJAMAR(V10): -->	
	<entry key="cnt-24.insertAplicativoOrigen">
		<![CDATA[
		INSERT INTO DD_APO_APLICATIVO_ORIGEN
		  (DD_APO_ID, DD_APO_CODIGO, DD_APO_DESCRIPCION,
		    VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
		SELECT S_DD_APO_APLICATIVO_ORIGEN.NEXTVAL, APOX.DD_APO_CODIGO, APOX.DD_APO_DESCRIPCION,
			0, '${PasajeAProducciónUser}',SYSTIMESTAMP, 0
		FROM (
		    SELECT DISTINCT ERROR_FIELD as DD_APO_CODIGO, 'Aplicativo Origen pendiente de definir ('||ERROR_FIELD||')' as DD_APO_DESCRIPCION 
		    from (  
			    SELECT X.TMP_CNT_APLICATIVO_ORIGEN AS ERROR_FIELD,
				   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
			     FROM tmp_cnt_contratos X
			    WHERE NOT EXISTS (SELECT 1 
				              FROM DD_APO_APLICATIVO_ORIGEN APO
				              WHERE TRIM(UPPER(X.TMP_CNT_APLICATIVO_ORIGEN)) = TRIM(UPPER(APO.DD_APO_CODIGO))
				              )
             )
		) APOX
		]]>
	</entry>
	<entry key="cnt-24.aplicativoOrigen">
    <![CDATA[
            SELECT X.TMP_CNT_APLICATIVO_ORIGEN AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
             FROM tmp_cnt_contratos X
            WHERE NOT EXISTS (SELECT 1 
                              FROM DD_APO_APLICATIVO_ORIGEN APO
                              WHERE TRIM(UPPER(X.TMP_CNT_APLICATIVO_ORIGEN)) = TRIM(UPPER(APO.DD_APO_CODIGO))
                              )
    ]]>
    </entry>
	
    <entry key="cnt-25.insertCodPropietario">
	<![CDATA[
		INSERT INTO DD_PRO_PROPIETARIOS
		  (DD_PRO_ID, DD_PRO_CODIGO, DD_PRO_DESCRIPCION,
	 	   VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
		SELECT 
		  S_DD_PRO_PROPIETARIOS.NEXTVAL, PROX.DD_PRO_CODIGO, PROX.DD_PRO_DESCRIPCION,
		  0,'${PasajeAProducciónUser}',SYSTIMESTAMP,0
		FROM (
		    SELECT DISTINCT ERROR_FIELD as DD_PRO_CODIGO, 'Propietario pendiente de definir ('||ERROR_FIELD||')' as DD_PRO_DESCRIPCION 
		    from (
			    SELECT X.TMP_CNT_CODIGO_PROPIETARIO AS ERROR_FIELD,
				   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
			     FROM tmp_cnt_contratos X
			    WHERE NOT EXISTS (SELECT 1 
				              FROM DD_PRO_PROPIETARIOS PRO
				              WHERE X.TMP_CNT_CODIGO_PROPIETARIO = PRO.DD_PRO_CODIGO)
		    )
		) PROX
	]]>
    </entry>
	<entry key="cnt-25.codPropietario">
    <![CDATA[
            SELECT X.TMP_CNT_CODIGO_PROPIETARIO AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
             FROM tmp_cnt_contratos X
            WHERE NOT EXISTS (SELECT 1 
                              FROM DD_PRO_PROPIETARIOS PRO
                              WHERE X.TMP_CNT_CODIGO_PROPIETARIO = PRO.DD_PRO_CODIGO
                              )
    ]]>
    </entry>
	
	<entry key="cnt-26.insertEstadoFinanciero">
		<![CDATA[
			INSERT INTO DD_EFC_ESTADO_FINAN_CNT
				(DD_EFC_ID, DD_EFC_CODIGO, DD_EFC_DESCRIPCION, DD_EFC_PRIORIDAD, 
				 VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
			SELECT S_DD_EFC_ESTADO_FINAN_CNT.NEXTVAL, EFCX.DD_EFC_CODIGO, EFCX.DD_EFC_DESCRIPCION,
				(SELECT MAX(DD_EFC_PRIORIDAD) FROM DD_EFC_ESTADO_FINAN_CNT WHERE BORRADO=0) + ROWNUM AS DD_EFC_PRIORIDAD,
				0, '${PasajeAProducciónUser}',SYSTIMESTAMP, 0
			FROM (
			    SELECT DISTINCT ERROR_FIELD as DD_EFC_CODIGO, 'Estado financiero pendiente de definir ('||ERROR_FIELD||')' as DD_EFC_DESCRIPCION 
			    from (  
				    SELECT X.TMP_CNT_ESTADO_FINANCIERO AS ERROR_FIELD,
					   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
				    FROM tmp_cnt_contratos X
				    WHERE NOT EXISTS (SELECT 1 
						      FROM DD_EFC_ESTADO_FINAN_CNT EFC
						      WHERE X.TMP_CNT_ESTADO_FINANCIERO = EFC.DD_EFC_CODIGO)
			  )   
			) EFCX
		]]>
	</entry>
           
	<entry key="cnt-26.estadoFinanciero">
    <![CDATA[
            SELECT X.TMP_CNT_ESTADO_FINANCIERO AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
            FROM tmp_cnt_contratos X
            WHERE NOT EXISTS (SELECT 1 
                              FROM DD_EFC_ESTADO_FINAN_CNT EFC
                              WHERE X.TMP_CNT_ESTADO_FINANCIERO = EFC.DD_EFC_CODIGO
                              )
    ]]>
    </entry>
			   
    <entry key="cnt-27.officeAdmCodeValidator"> <!-- OJO: OFICINA ADMINISTRATIVA -->
      <![CDATA[
        SELECT X.TMP_CNT_COD_ENTIDAD_OFI_ADM||'|'||X.TMP_CNT_COD_OFICINA_ADM||'|'||X.TMP_CNT_COD_SUBSEC_OFI_ADM AS ERROR_FIELD, -- OJO: Este CAMPO Contiene la CONCATENACIÓN de los 3 CAMPOS DE OFICINA CONTABLE
               (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE
        FROM tmp_cnt_contratos X 
        WHERE NOT EXISTS(SELECT 1 
                         FROM ofi_oficinas o 
                         WHERE X.TMP_CNT_COD_OFICINA = O.OFI_CODIGO_ENTIDAD_OFICINA||O.OFI_CODIGO_OFICINA||O.OFI_CODIGO_SUBSECCION_OFICINA
                         )          
         ]]>
    </entry>


	<entry key="cnt-28.insertGestionEspecial">
    <![CDATA[
		INSERT INTO DD_GES_GESTION_ESPECIAL  (DD_GES_ID, DD_GES_CODIGO, DD_GES_DESCRIPCION, USUARIOCREAR, FECHACREAR, BORRADO)
		SELECT 
		  S_DD_GES_GESTION_ESPECIAL.NEXTVAL
		  ,GESX.DD_GES_CODIGO
		  ,GESX.DD_GES_DESCRIPCION
		  ,'${PasajeAProducciónUser}' 
		  ,SYSTIMESTAMP 
		  ,0
		FROM (
		    SELECT DISTINCT ERROR_FIELD as DD_GES_CODIGO, 'Gestión Especial pendiente de definir ('||ERROR_FIELD||')' as DD_GES_DESCRIPCION 
		    from (  
		      SELECT X.TMP_CNT_COD_GESTION_ESPECIAL AS ERROR_FIELD,
		             (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
		      FROM tmp_cnt_contratos X
		      WHERE NOT EXISTS (SELECT 1 FROM DD_GES_GESTION_ESPECIAL GES WHERE X.TMP_CNT_COD_GESTION_ESPECIAL = GES.DD_GES_CODIGO )
		  )   
		) GESX 	
    ]]>
    </entry>  
			   
	<entry key="cnt-28.gestionEspecial">
    <![CDATA[
            SELECT X.TMP_CNT_COD_GESTION_ESPECIAL AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
            FROM tmp_cnt_contratos X
            WHERE NOT EXISTS (SELECT 1 
                              FROM DD_GES_GESTION_ESPECIAL GES
                              WHERE X.TMP_CNT_COD_GESTION_ESPECIAL = GES.DD_GES_CODIGO
                              )
    ]]>
    </entry>   
    
	<entry key="cnt-29.insertCondicionesRemuneracion">
    <![CDATA[
		INSERT INTO DD_CRE_CONDICIONES_REMUN_EXT  (DD_CRE_ID, DD_CRE_CODIGO, DD_CRE_DESCRIPCION, USUARIOCREAR, FECHACREAR, BORRADO)
		SELECT 
		  S_DD_CRE_CONDICIONES_REMUN_EXT.NEXTVAL
		  ,CREX.DD_CRE_CODIGO
		  ,CREX.DD_CRE_DESCRIPCION
		  ,'${PasajeAProducciónUser}' 
		  ,SYSTIMESTAMP 
		  ,0
		FROM (
		    SELECT DISTINCT ERROR_FIELD as DD_CRE_CODIGO, 'Condiciones Remuneración Gestión Especial ('||ERROR_FIELD||')' as DD_CRE_DESCRIPCION 
		    from (  
		      SELECT X.TMP_CNT_REMU_GEST_ESPECIAL AS ERROR_FIELD,
		                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
		      FROM tmp_cnt_contratos X
		      WHERE NOT EXISTS (SELECT 1 FROM DD_CRE_CONDICIONES_REMUN_EXT CRE WHERE X.TMP_CNT_REMU_GEST_ESPECIAL = CRE.DD_CRE_CODIGO )
		        )                
		) CREX 	
    ]]>
    </entry>    
	
	<entry key="cnt-29.condicionesRemuneracion">
    <![CDATA[
			SELECT X.TMP_CNT_REMU_GEST_ESPECIAL AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
            FROM tmp_cnt_contratos X
            WHERE NOT EXISTS (SELECT 1 
                              FROM DD_CRE_CONDICIONES_REMUN_EXT CRE
                              WHERE X.TMP_CNT_REMU_GEST_ESPECIAL = CRE.DD_CRE_CODIGO
                              )
    ]]>
    </entry>
	
    <entry key="cnt-30.insertMotivoRenumeracion">
	<![CDATA[
		INSERT INTO DD_MTR_MOTIVO_RENUMERACION
		  (DD_MTR_ID, DD_MTR_CODIGO, DD_MTR_DESCRIPCION,
		    VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
		SELECT 
		  S_DD_MTR_MOTIVO_RENUMERACION.NEXTVAL, MTRX.DD_MTR_CODIGO, MTRX.DD_MTR_DESCRIPCION,
		  0,'${PasajeAProducciónUser}',SYSTIMESTAMP,0
		FROM (
		    SELECT DISTINCT ERROR_FIELD as DD_MTR_CODIGO, 'Motivo Remuneración pendiente de definir ('||ERROR_FIELD||')' as DD_MTR_DESCRIPCION 
		    from (
			SELECT X.TMP_CNT_MOTIVO_RENUMERACION AS ERROR_FIELD,
	                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
            		FROM tmp_cnt_contratos X
            		WHERE X.TMP_CNT_MOTIVO_RENUMERACION IS NOT NULL 
            			AND NOT EXISTS (SELECT 1 
                        		  FROM DD_MTR_MOTIVO_RENUMERACION MTR 
                              		  WHERE X.TMP_CNT_MOTIVO_RENUMERACION = MTR.DD_MTR_CODIGO)
		    )
		) MTRX
	]]>
    </entry>		   
    <entry key="cnt-30.motivoRenumeracion">
    <![CDATA[
			SELECT X.TMP_CNT_MOTIVO_RENUMERACION AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
            FROM tmp_cnt_contratos X
            WHERE X.TMP_CNT_MOTIVO_RENUMERACION IS NOT NULL 
            			AND NOT EXISTS (SELECT 1 
                              FROM DD_MTR_MOTIVO_RENUMERACION MTR 
                              WHERE X.TMP_CNT_MOTIVO_RENUMERACION = MTR.DD_MTR_CODIGO
                              )
    ]]>
    </entry>			   

	<entry key="cnt-31.limiteInicialMayorCero">
    <![CDATA[
			SELECT X.TMP_CNT_LIMITE_INI AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
            FROM tmp_cnt_contratos X
            WHERE X.TMP_CNT_LIMITE_INI < 0
	]]>
    </entry>   
			   
	<entry key="cnt-32.limiteFinalMayorCero">
    <![CDATA[
			SELECT X.TMP_CNT_LIMITE_FIN AS ERROR_FIELD,
                   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
            FROM tmp_cnt_contratos X
            WHERE X.TMP_CNT_LIMITE_FIN < 0
	]]>
    </entry> 

	<entry key="cnt-33.insertEstadoFinancieroAnterior">
		<![CDATA[
			INSERT INTO DD_EFC_ESTADO_FINAN_CNT
				(DD_EFC_ID, DD_EFC_CODIGO, DD_EFC_DESCRIPCION, DD_EFC_PRIORIDAD, 
				 VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
			SELECT S_DD_EFC_ESTADO_FINAN_CNT.NEXTVAL, EFCX.DD_EFC_CODIGO, EFCX.DD_EFC_DESCRIPCION,
				(SELECT MAX(DD_EFC_PRIORIDAD) FROM DD_EFC_ESTADO_FINAN_CNT WHERE BORRADO=0) + ROWNUM AS DD_EFC_PRIORIDAD,
				0, '${PasajeAProducciónUser}',SYSTIMESTAMP, 0
			FROM (
			    SELECT DISTINCT ERROR_FIELD as DD_EFC_CODIGO, 'Estado financiero pendiente de definir ('||ERROR_FIELD||')' as DD_EFC_DESCRIPCION 
			    from (  
				    SELECT X.TMP_CNT_ESTADO_FINANCIERO_ANT AS ERROR_FIELD,
					   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
				    FROM tmp_cnt_contratos X
				    WHERE NOT EXISTS (SELECT 1 
						      FROM DD_EFC_ESTADO_FINAN_CNT EFC
						      WHERE X.TMP_CNT_ESTADO_FINANCIERO_ANT = EFC.DD_EFC_CODIGO)
			  )   
			) EFCX
		]]>
	</entry>
           
	<entry key="cnt-33.estadoFinancieroAnterior">
	    <![CDATA[
		    SELECT X.TMP_CNT_ESTADO_FINANCIERO_ANT AS ERROR_FIELD,
		           (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
		    FROM tmp_cnt_contratos X
		    WHERE NOT EXISTS (SELECT 1 
		                      FROM DD_EFC_ESTADO_FINAN_CNT EFC
		                      WHERE X.TMP_CNT_ESTADO_FINANCIERO_ANT = EFC.DD_EFC_CODIGO
		                      )
	    ]]>
    	</entry>
	<entry key="cnt-34.estadoContrato">
		<![CDATA[
			SELECT X.TMP_ESTADO_CONTRATO AS ERROR_FIELD,
		           (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
		    	FROM tmp_cnt_contratos X
			WHERE NOT EXISTS (SELECT 1 
			              	  FROM ${master.schema}.DD_ESC_ESTADO_CNT ESC
			              	  WHERE X.TMP_ESTADO_CONTRATO = ESC.DD_ESC_CODIGO
			              	  )
		]]>
	</entry>
	<entry key="cnt-35.insertTipoProducto">
		<![CDATA[
			INSERT INTO DD_TPR_TIPO_PROD
				(DD_TPR_ID, DD_TPR_CODIGO, DD_TPR_DESCRIPCION, DD_TPR_DESCRIPCION_LARGA,
				 VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
			SELECT S_DD_TPR_TIPO_PROD.NEXTVAL, TPRX.DD_TPR_CODIGO, TPRX.DD_TPR_DESCRIPCION, TPRX.DD_TPR_DESCRIPCION,
				0, '${PasajeAProducciónUser}',SYSTIMESTAMP, 0
			FROM (
			    SELECT DISTINCT ERROR_FIELD as DD_TPR_CODIGO, 'Tipo producto pendiente de definir ('||ERROR_FIELD||')' as DD_TPR_DESCRIPCION 
			    from (  
				SELECT X.TMP_CNT_TIPO_PRODUCTO AS ERROR_FIELD,
				   (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
			    	FROM tmp_cnt_contratos X
				WHERE NOT EXISTS (SELECT 1 
					      	  FROM DD_TPR_TIPO_PROD TPR
					      	  WHERE X.TMP_CNT_TIPO_PRODUCTO = TPR.DD_TPR_CODIGO
					      	  )
			  )   
			) TPRX
		]]>
	</entry>
	<entry key="cnt-35.tipoProducto">
		<![CDATA[
			SELECT X.TMP_CNT_TIPO_PRODUCTO AS ERROR_FIELD,
		           (tmp_cnt_cod_entidad ||'-'|| LPAD(TO_CHAR(X.TMP_CNT_CODIGO_PROPIETARIO),5,'0')||LPAD(X.TMP_CNT_TIPO_PRODUCTO,5,'0')||LPAD(TO_CHAR(X.tmp_cnt_contrato),17,'0')||LPAD(TO_CHAR(X.TMP_CNT_NUM_ESPEC),15,'0')) AS ENTITY_CODE  
		    	FROM tmp_cnt_contratos X
			WHERE NOT EXISTS (SELECT 1 
			              	  FROM DD_TPR_TIPO_PROD TPR
			              	  WHERE X.TMP_CNT_TIPO_PRODUCTO = TPR.DD_TPR_CODIGO
			              	  )
		]]>
	</entry>
	<entry key="cnt-36.cnt50CodeValidator"> 
      <![CDATA[
			select TMP.TMP_CNT_CODIGO_CNT50 AS ERROR_FIELD, 
				TMP.TMP_CNT_CODIGO_CNT50 AS ENTITY_CODE,
				count(1)
			from CM01.TMP_CNT_CONTRATOS TMP
			group by TMP.TMP_CNT_CODIGO_CNT50
			having count(1) > 1
         ]]>
    </entry>	
 
</properties>