/*==============================================================*/
/* Table: 	 LIA_LISTA_ARQUETIPOS							    */
/* Listado de arquetios que pueden ser editados por				*/
/* medio Del módulo de parametrización y administración			*/														
/*==============================================================*/

DROP SEQUENCE S_LIA_LISTA_ARQUETIPOS;
CREATE SEQUENCE S_LIA_LISTA_ARQUETIPOS;

 DROP TABLE LIA_LISTA_ARQUETIPOS CASCADE CONSTRAINTS;
 CREATE TABLE LIA_LISTA_ARQUETIPOS(
		LIA_ID, ITI_ID, LIA_PRIORIDAD, LIA_NOMBRE, VERSION,USUARIOCREAR, 
   		FECHACREAR, USUARIOMODIFICAR, FECHAMODIFICAR, USUARIOBORRAR, 
   		FECHABORRAR, BORRADO, LIA_NIVEL, LIA_GESTION, LIA_PLAZO_DISPARO, 
   		DD_TSN_ID, RD_ID)
AS (
	SELECT 	S_LIA_LISTA_ARQUETIPOS.nextVal AS LIA_ID, ITI_ID, ARQ_PRIORIDAD, 
   				ARQ_NOMBRE,1 AS VERSION, 'ARQDIA' AS USUARIOCREAR, 
   				SYSDATE AS FECHACREAR,  USUARIOMODIFICAR, FECHAMODIFICAR, 
   				 USUARIOBORRAR,   FECHABORRAR, BORRADO, 
   				ARQ_NIVEL, ARQ_GESTION, ARQ_PLAZO_DISPARO, 
   				DD_TSN_ID, RD_ID
	FROM ARQ_ARQUETIPOS
);

ALTER TABLE LIA_LISTA_ARQUETIPOS 
	ADD CONSTRAINT PK_LIA_LISTA_ARQUETIPOS PRIMARY KEY (LIA_ID);

ALTER TABLE LIA_LISTA_ARQUETIPOS
   ADD CONSTRAINT FK_LIA_FK_ITI FOREIGN KEY (ITI_ID)
      REFERENCES ITI_ITINERARIOS (ITI_ID);
      
ALTER TABLE LIA_LISTA_ARQUETIPOS ADD (
  CONSTRAINT FK_LIA_FK_RULE_DEFINITION FOREIGN KEY (RD_ID) 
  REFERENCES RULE_DEFINITION (RD_ID));

ALTER TABLE LIA_LISTA_ARQUETIPOS ADD (
  CONSTRAINT FK_LIA_FK_DD_TSN_ID FOREIGN KEY (DD_TSN_ID) 
  REFERENCES PFSMASTER.DD_TSN_TIPO_SALTO_NIVEL (DD_TSN_ID));
  
ALTER TABLE LIA_LISTA_ARQUETIPOS
  MODIFY LIA_NIVEL DEFAULT 0;
  
ALTER TABLE LIA_LISTA_ARQUETIPOS
  MODIFY LIA_GESTION DEFAULT 1;
  
ALTER TABLE LIA_LISTA_ARQUETIPOS
  MODIFY BORRADO DEFAULT 0;


/*==============================================================*/
/* Table: 	 MODELOARQUETIPOS								    */
/* Listado de modelos de arquetios que pueden ser editados por	*/
/* medio Del módulo de parametrización y administración			*/														
/*==============================================================*/

DROP SEQUENCE S_DD_ESM_ESTADOS_MODELO;
CREATE SEQUENCE S_DD_ESM_ESTADOS_MODELO;

DROP TABLE DD_ESM_ESTADOS_MODELO;
CREATE TABLE DD_ESM_ESTADOS_MODELO  (
   DD_ESM_ID		 			NUMBER(16)			NOT NULL,
   DD_ESM_CODIGO           	VARCHAR2(20 BYTE)   NOT NULL,
   DD_ESM_DESCRIPCION       VARCHAR2(50 BYTE),
   DD_ESM_DESCRIPCION_LARGA     	VARCHAR2(250 BYTE),
   VERSION                  INTEGER         DEFAULT 0  	NOT NULL,
   USUARIOCREAR             VARCHAR2(10 BYTE)   				NOT NULL,
   FECHACREAR               TIMESTAMP(6)        				NOT NULL,
   USUARIOMODIFICAR         VARCHAR2(10 BYTE),
   FECHAMODIFICAR           TIMESTAMP(6),
   USUARIOBORRAR            VARCHAR2(10 BYTE),
   FECHABORRAR              TIMESTAMP(6),
   BORRADO                  NUMBER(1)       DEFAULT 0		NOT NULL,   
   CONSTRAINT PK_DD_ESM_ESTADOS_MODELO PRIMARY KEY (DD_ESM_ID)
);

INSERT INTO DD_ESM_ESTADOS_MODELO (DD_ESM_ID,DD_ESM_CODIGO,DD_ESM_DESCRIPCION,DD_ESM_DESCRIPCION_LARGA,USUARIOCREAR,FECHACREAR) VALUES (S_DD_ESM_ESTADOS_MODELO.nextVal,'1','CONFORMACIÓN','','DD',SYSDATE);
INSERT INTO DD_ESM_ESTADOS_MODELO (DD_ESM_ID,DD_ESM_CODIGO,DD_ESM_DESCRIPCION,DD_ESM_DESCRIPCION_LARGA,USUARIOCREAR,FECHACREAR) VALUES (S_DD_ESM_ESTADOS_MODELO.nextVal,'2','PRUEBAS','','DD',SYSDATE);
INSERT INTO DD_ESM_ESTADOS_MODELO (DD_ESM_ID,DD_ESM_CODIGO,DD_ESM_DESCRIPCION,DD_ESM_DESCRIPCION_LARGA,USUARIOCREAR,FECHACREAR) VALUES (S_DD_ESM_ESTADOS_MODELO.nextVal,'3','VIGENTE','','DD',SYSDATE);
INSERT INTO DD_ESM_ESTADOS_MODELO (DD_ESM_ID,DD_ESM_CODIGO,DD_ESM_DESCRIPCION,DD_ESM_DESCRIPCION_LARGA,USUARIOCREAR,FECHACREAR) VALUES (S_DD_ESM_ESTADOS_MODELO.nextVal,'4','HISTÓRICO','','DD',SYSDATE);


CREATE SEQUENCE S_MOA_MODELOS_ARQ;

CREATE TABLE MOA_MODELOS_ARQ  (
   MOA_ID		 			NUMBER(16)			NOT NULL,
   MOA_NOMBRE           	VARCHAR2(20 BYTE)   NOT NULL,
   MOA_DESCRIPCION          VARCHAR2(50 BYTE)   NOT NULL,
   DD_ESM_ID				NUMBER(16)	 DEFAULT 1		NOT NULL,
   MOA_OBSERVACIONES		VARCHAR2(100),		
   MOA_FECHA_INI_VIGENCIA              TIMESTAMP(6),
   MOA_FECHA_FIN_VIGENCIA              TIMESTAMP(6),
   VERSION                  INTEGER         DEFAULT 0  	NOT NULL,
   USUARIOCREAR             VARCHAR2(10 BYTE)   				NOT NULL,
   FECHACREAR               TIMESTAMP(6)        				NOT NULL,
   USUARIOMODIFICAR         VARCHAR2(10 BYTE),
   FECHAMODIFICAR           TIMESTAMP(6),
   USUARIOBORRAR            VARCHAR2(10 BYTE),
   FECHABORRAR              TIMESTAMP(6),
   BORRADO                  NUMBER(1)       DEFAULT 0		NOT NULL,   
   CONSTRAINT MOA_MODELOS_ARQ PRIMARY KEY (MOA_ID)
);

ALTER TABLE MOA_MODELOS_ARQ
   ADD CONSTRAINT FK_MOA_MOD_FK_DD_ESM FOREIGN KEY (DD_ESM_ID)
      REFERENCES DD_ESM_ESTADOS_MODELO (DD_ESM_ID);
 


CREATE SEQUENCE S_MRA_REL_MODELO_ARQ;

CREATE TABLE MRA_REL_MODELO_ARQ  (
   MRA_ID		 			NUMBER(16)			NOT NULL,
   MOA_ID		           	NUMBER(16)			NOT NULL,
   LIA_ID					NUMBER(16)			NOT NULL,
   MRA_NIVEL 		        NUMBER(4)                  DEFAULT 0                     NOT NULL,
   ITI_ID					NUMBER(16),			
   MRA_PRIORIDAD			NUMBER(16)			NOT NULL,
   VERSION                  INTEGER         DEFAULT 0  	NOT NULL,
   USUARIOCREAR             VARCHAR2(10 BYTE)   				NOT NULL,
   FECHACREAR               TIMESTAMP(6)        				NOT NULL,
   USUARIOMODIFICAR         VARCHAR2(10 BYTE),
   FECHAMODIFICAR           TIMESTAMP(6),
   USUARIOBORRAR            VARCHAR2(10 BYTE),
   FECHABORRAR              TIMESTAMP(6),
   BORRADO                  NUMBER(1)       DEFAULT 0		NOT NULL,   
   CONSTRAINT PK_MRA_REL_MODELO_ARQ PRIMARY KEY (MRA_ID)
);	

ALTER TABLE MRA_REL_MODELO_ARQ
   ADD CONSTRAINT FK_MRA_MODELO_FK_MOA_MODELOS FOREIGN KEY (MOA_ID)
      REFERENCES MOA_MODELOS_ARQ (MOA_ID);

ALTER TABLE MRA_REL_MODELO_ARQ
   ADD CONSTRAINT FK_MRA_MODELO_FK_ARQ FOREIGN KEY (LIA_ID)
      REFERENCES LIA_LISTA_ARQUETIPOS (LIA_ID);

ALTER TABLE MRA_REL_MODELO_ARQ
   ADD CONSTRAINT FK_MAR_MODELO_FK_ITI FOREIGN KEY (ITI_ID)
      REFERENCES ITI_ITINERARIOS (ITI_ID);