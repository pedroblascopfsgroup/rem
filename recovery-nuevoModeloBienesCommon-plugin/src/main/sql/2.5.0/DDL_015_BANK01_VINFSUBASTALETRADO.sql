--/*
--##########################################
--## Author: #AUTOR#
--## Finalidad: DDL creacion vistas para el nuevo informe letrado
--##            CREATE OR REPLACE VIEW VINFSUBASTALETRADO
--##
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;

DECLARE
  seq_count          NUMBER(3);                    -- Vble. para validar la existencia de las Secuencias.
  table_count        NUMBER(3);                    -- Vble. para validar la existencia de las Tablas.
  v_column_count     NUMBER(3);                    -- Vble. para validar la existencia de las Columnas.
  v_constraint_count NUMBER(3);                    -- Vble. para validar la existencia de las Constraints.
  err_num            NUMBER;                       -- Número de errores
  err_msg            VARCHAR2(2048);               -- Mensaje de error
  V_ESQUEMA          VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquemas
  V_MSQL             VARCHAR2(4000 CHAR);
BEGIN

  DBMS_OUTPUT.PUT_LINE('[START] Crear o modificar la vista VINFSUBASTALETRADO');

EXECUTE IMMEDIATE '
CREATE OR REPLACE VIEW ' || V_ESQUEMA || '.VINFSUBASTALETRADO AS
WITH
VALORES_DEMANDA AS (
  SELECT /*+ MATERIALIZE */ TEV.TEV_NOMBRE, TEV.TEV_VALOR, TAR.PRC_ID
  FROM TAR_TAREAS_NOTIFICACIONES TAR
    INNER JOIN TEX_TAREA_EXTERNA TEX ON TEX.TAR_ID = TAR.TAR_ID
      INNER JOIN TAP_TAREA_PROCEDIMIENTO TAP ON TEX.TAP_ID = TAP.TAP_ID
        INNER JOIN TFI_TAREAS_FORM_ITEMS TFI ON  TAP.TAP_ID = TFI.TAP_ID
          INNER JOIN TEV_TAREA_EXTERNA_VALOR TEV ON TEV.TEX_ID = TEX.TEX_ID AND UPPER(TFI.TFI_NOMBRE) = UPPER(TEV.TEV_NOMBRE)    
  WHERE NOT TEV.TEV_VALOR IS NULL
  AND TAP.TAP_CODIGO IN (''P01_DemandaCertificacionCargas'',
                                 ''P17_InterposicionDemandaMasBienes'',
                                 ''P04_InterposicionDemanda'',
                                 ''P25_interposicionDemanda'',
                                 ''P15_InterposicionDemandaMasBienes'',
                                 ''P03_InterposicionDemanda'',
                                 ''P02_InterposicionDemanda'')
),
VALORES_SENYALAMIENTO AS (
  SELECT /*+ MATERIALIZE */ TEV.TEV_NOMBRE, TEV.TEV_VALOR, TAR.PRC_ID, TAP.TAP_CODIGO
  FROM TAR_TAREAS_NOTIFICACIONES TAR
    INNER JOIN TEX_TAREA_EXTERNA TEX ON TEX.TAR_ID = TAR.TAR_ID
      INNER JOIN TAP_TAREA_PROCEDIMIENTO TAP ON TEX.TAP_ID = TAP.TAP_ID
        INNER JOIN TFI_TAREAS_FORM_ITEMS TFI ON  TAP.TAP_ID = TFI.TAP_ID
          INNER JOIN TEV_TAREA_EXTERNA_VALOR TEV ON TEV.TEX_ID = TEX.TEX_ID AND UPPER(TFI.TFI_NOMBRE) = UPPER(TEV.TEV_NOMBRE)    
  WHERE NOT TEV.TEV_VALOR IS NULL
    AND TAP.TAP_CODIGO IN (''P401_SenyalamientoSubasta'',''P409_SenyalamientoSubasta'')
),
DESPACHOS_PROCURADORES AS (
  SELECT /*+ MATERIALIZE */ DISTINCT GAA.ASU_ID, DES.DES_ID, DES.DES_DESPACHO
  FROM GAA_GESTOR_ADICIONAL_ASUNTO GAA
    INNER JOIN BANKMASTER.DD_TGE_TIPO_GESTOR TGE ON GAA.DD_TGE_ID = TGE.DD_TGE_ID AND TGE.DD_TGE_CODIGO = ''PROC''
    INNER JOIN USD_USUARIOS_DESPACHOS USD ON GAA.USD_ID = USD.USD_ID
    INNER JOIN DES_DESPACHO_EXTERNO DES ON USD.DES_ID = DES.DES_ID
  WHERE GAA.BORRADO = 0
),
DESPACHOS_LETRADO AS (
  SELECT /*+ MATERIALIZE */ DISTINCT GAA.ASU_ID, DES.DES_ID, DES.DES_DESPACHO
  FROM GAA_GESTOR_ADICIONAL_ASUNTO GAA
    INNER JOIN BANKMASTER.DD_TGE_TIPO_GESTOR TGE ON GAA.DD_TGE_ID = TGE.DD_TGE_ID AND TGE.DD_TGE_CODIGO = ''GEXT''
    INNER JOIN USD_USUARIOS_DESPACHOS USD ON GAA.USD_ID = USD.USD_ID
    INNER JOIN DES_DESPACHO_EXTERNO DES ON USD.DES_ID = DES.DES_ID
),
CONTRATOS_MAYORES AS (
  SELECT /*+ MATERIALIZE */ PRC_ID, CNT_ID, CNT_NUM
  FROM (
    SELECT /*+ MATERIALIZE */PRC_ID, CNT_ID, ROW_NUMBER() OVER (PARTITION BY PRC_ID ORDER BY SUMA DESC) CNT_NUM
    FROM 
      (SELECT /*+ MATERIALIZE */ (MOV.MOV_POS_VIVA_NO_VENCIDA + MOV.MOV_POS_VIVA_VENCIDA) SUMA, MOV.CNT_ID, PRCCEX.PRC_ID
      FROM PRC_CEX PRCCEX
        INNER JOIN CEX_CONTRATOS_EXPEDIENTE CEX ON PRCCEX.CEX_ID = CEX.CEX_ID
        INNER JOIN MOV_MOVIMIENTOS MOV ON CEX.CNT_ID = MOV.CNT_ID  AND MOV.MOV_FECHA_EXTRACCION = (SELECT /*+ MATERIALIZE */ MAX(MOV_FECHA_EXTRACCION) FROM MOV_MOVIMIENTOS)
    )
  ) WHERE CNT_NUM = 1
),
FIADORES AS (
  SELECT /*+ MATERIALIZE */ COUNT(1) NFIADORES , CPE.CNT_ID
  FROM CPE_CONTRATOS_PERSONAS CPE
    LEFT JOIN DD_TIN_TIPO_INTERVENCION TIN ON CPE.DD_TIN_ID = TIN.DD_TIN_ID AND TIN.DD_TIN_CODIGO IN (30, 31)
  GROUP BY CPE.CNT_ID
),
DOCADJUNTO AS (
  SELECT /*+ MATERIALIZE */ COUNT(1) NDOCS, ADA.ASU_ID, TFA.DD_TFA_CODIGO
  FROM ADA_ADJUNTOS_ASUNTOS ADA
    LEFT JOIN DD_TFA_FICHERO_ADJUNTO TFA ON ADA.DD_TFA_ID = TFA.DD_TFA_ID
  GROUP BY ADA.ASU_ID, TFA.DD_TFA_CODIGO
),
TITULARES AS (
SELECT /*+ MATERIALIZE */ * FROM (
SELECT CNT.CNT_ID, PER.PER_NOM50, ROW_NUMBER() OVER (PARTITION BY CNT.CNT_ID ORDER BY CPE.CPE_ORDEN) NUM
FROM CNT_CONTRATOS CNT
  INNER JOIN CPE_CONTRATOS_PERSONAS CPE ON CNT.CNT_ID = CPE.CNT_ID
    INNER JOIN DD_TIN_TIPO_INTERVENCION TIN ON CPE.DD_TIN_ID = TIN.DD_TIN_ID AND TIN.DD_TIN_CODIGO = 20
  LEFT JOIN PER_PERSONAS PER ON CPE.PER_ID = PER.PER_ID
) WHERE NUM = 1
)
SELECT 
  SUB.SUB_ID
  ,SUB.SUB_NUM_AUTOS NUMERO_AUTO
  ,DD_JUZ.DD_JUZ_DESCRIPCION NUMERO_JUZ
  ,DD_PLA.DD_PLA_DESCRIPCION PROV_JUZ
  ,SUBSTR(CNT.CNT_CONTRATO,11,17) || ''/'' || TPR.DD_TPR_DESCRIPCION NUM_OPERACION
  ,cnt.cnt_id
  ,OFI.OFI_NOMBRE CENTRO
  ,TIT.PER_NOM50 TITULAR
  ,CASE WHEN FIA.NFIADORES >0 THEN 1 ELSE 0 END FIADORES
  ,DD_TPO_PRC.DD_TPO_DESCRIPCION TPO_PROCEDI
  ,DESP_LET.DES_DESPACHO LETRADO
  ,DESP_PROC.DES_DESPACHO PROCURADOR
  ,VFDEMANDA.TEV_VALOR FDEMANDA
  ,SUB.SUB_FECHA_SENYALAMIENTO FSUBASTA
  ,DD_TSU.DD_TSU_DESCRIPCION TPO_SUBASTA
  ,PRC.PRC_SALDO_RECUPERACION PRINCIPAL_DEMANDA
  ,CASE WHEN MOV.MOV_INT_MORATORIOS IS NULL THEN 0 ELSE MOV.MOV_INT_MORATORIOS END INT_MORATORIOS
  ,CASE WHEN CLETRADO.TEV_VALOR IS NULL THEN 0 ELSE TO_NUMBER(REPLACE(CLETRADO.TEV_VALOR,''.'','','')) END MINUTA_LETRADO
  ,CASE WHEN CPROCURADOR.TEV_VALOR IS NULL THEN 0 ELSE TO_NUMBER(REPLACE(CPROCURADOR.TEV_VALOR,''.'','','')) END MINUTA_PROCURADOR
  ,CASE WHEN MOV.MOV_ENTREGAS_A_CUENTA IS NULL THEN 0 ELSE MOV.MOV_ENTREGAS_A_CUENTA END ENTREGAS_CUENTA
  ,ASU.ASU_OBSERVACION COMENTARIOS
  ,CASE WHEN CERTCARGAS.NDOCS >0 THEN 1 ELSE 0 END CERTCARGAS
  ,CASE WHEN EDICTO.NDOCS >0 THEN 1 ELSE 0 END EDICTO
  ,CASE WHEN AVALUO.NDOCS >0 THEN 1 ELSE 0 END AVALUO
FROM  SUB_SUBASTA SUB
  LEFT JOIN DD_TSU_TIPO_SUBASTA DD_TSU ON SUB.DD_TSU_ID = DD_TSU.DD_TSU_ID
  LEFT JOIN ASU_ASUNTOS ASU ON SUB.ASU_ID = ASU.ASU_ID
    LEFT JOIN DESPACHOS_LETRADO DESP_LET ON DESP_LET.ASU_ID = ASU.ASU_ID
    LEFT JOIN DESPACHOS_PROCURADORES DESP_PROC ON DESP_PROC.ASU_ID = ASU.ASU_ID
  LEFT JOIN PRC_PROCEDIMIENTOS PRC ON SUB.PRC_ID = PRC.PRC_ID
    LEFT JOIN DD_TPO_TIPO_PROCEDIMIENTO DD_TPO_PRC ON PRC.DD_TPO_ID = DD_TPO_PRC.DD_TPO_ID
    LEFT JOIN DD_JUZ_JUZGADOS_PLAZA DD_JUZ ON PRC.DD_JUZ_ID = DD_JUZ.DD_JUZ_ID
    LEFT JOIN DD_PLA_PLAZAS DD_PLA ON DD_JUZ.DD_PLA_ID = DD_PLA.DD_PLA_ID
    LEFT JOIN VALORES_DEMANDA VDEMANDA ON PRC.PRC_ID = VDEMANDA.PRC_ID  AND UPPER(VDEMANDA.TEV_NOMBRE) = UPPER(''principalDemanda'')
    LEFT JOIN VALORES_DEMANDA VFDEMANDA ON PRC.PRC_ID = VFDEMANDA.PRC_ID  AND UPPER(VFDEMANDA.TEV_NOMBRE) = UPPER(''fecha'')
    LEFT JOIN CONTRATOS_MAYORES CNTMAY ON PRC.PRC_ID = CNTMAY.PRC_ID
        LEFT JOIN MOV_MOVIMIENTOS MOV ON CNTMAY.CNT_ID = MOV.CNT_ID
        LEFT JOIN CNT_CONTRATOS CNT ON CNTMAY.CNT_ID = CNT.CNT_ID
          LEFT JOIN DD_TPR_TIPO_PROD TPR ON CNT.DD_TPR_ID = TPR.DD_TPR_ID
          LEFT JOIN OFI_OFICINAS OFI ON CNT.OFI_ID = OFI.OFI_ID
          LEFT JOIN FIADORES FIA ON CNT.CNT_ID = FIA.CNT_ID
          LEFT JOIN TITULARES TIT ON CNT.CNT_ID = TIT.CNT_ID
    LEFT JOIN DOCADJUNTO CERTCARGAS ON ASU.ASU_ID = CERTCARGAS.ASU_ID AND CERTCARGAS.DD_TFA_CODIGO IN (''CCB'',''CCH'')
    LEFT JOIN DOCADJUNTO EDICTO ON ASU.ASU_ID = EDICTO.ASU_ID AND EDICTO.DD_TFA_CODIGO IN (''ESRAS'')
    LEFT JOIN DOCADJUNTO AVALUO ON ASU.ASU_ID = AVALUO.ASU_ID AND AVALUO.DD_TFA_CODIGO IN (''AVPR'')
    LEFT JOIN VALORES_SENYALAMIENTO CLETRADO ON PRC.PRC_ID = CLETRADO.PRC_ID AND UPPER(CLETRADO.TEV_NOMBRE) = UPPER(''COSTASLETRADO'')
    LEFT JOIN VALORES_SENYALAMIENTO CPROCURADOR ON PRC.PRC_ID = CPROCURADOR.PRC_ID AND UPPER(CPROCURADOR.TEV_NOMBRE) = UPPER(''COSTASPROCURADOR'')';
    
EXCEPTION
WHEN OTHERS THEN
  err_num := SQLCODE;
  err_msg := SQLERRM;
  DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion:'||TO_CHAR(err_num));
  DBMS_OUTPUT.put_line('-----------------------------------------------------------');
  DBMS_OUTPUT.put_line(err_msg);
  ROLLBACK;
  RAISE;
END;
/

EXIT;
