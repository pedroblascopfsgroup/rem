<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
               http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
               http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
               http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd
               http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd"
	default-autowire="byName">
	
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/precontencioso/precontencioso.xml" p:version="31"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/precontenciosohaya/precontenciosohaya.xml" p:version="100"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/precontenciosobankia/precontenciosobankia.xml" p:version="100"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/precontenciosocajamar/precontenciosocajamar.xml" p:version="100"/>
	
	<bean id="precontenciosoLeaveActionHandler" class="es.pfsgroup.plugin.precontencioso.expedienteJudicial.handler.PrecontenciosoLeaveActionHandler"></bean>
	<bean id="precontenciosoEnterActionHandler" class="es.pfsgroup.plugin.precontencioso.expedienteJudicial.handler.PrecontenciosoEnterActionHandler"></bean>
	<bean id="precontenciosoDecisionActionHandler" class="es.pfsgroup.plugin.precontencioso.expedienteJudicial.handler.PrecontenciosoUserDecisionActionHandler"></bean>
 	<bean id="precontenciosoHayaDecisionActionHandler" class="es.pfsgroup.plugin.precontencioso.expedienteJudicial.handler.PrecontenciosoHayaUserDecisionActionHandler"></bean>
 	<bean id="precontenciosoHayaLeaveActionHandler" class="es.pfsgroup.plugin.precontencioso.expedienteJudicial.handler.PrecontenciosoHayaLeaveActionHandler"></bean>
 	<bean id="precontenciosoGestorProcuradorHandler" class="es.pfsgroup.plugin.precontencioso.handler.PrecontenciosoGestorProcuradorHandler"></bean>
 	
	<bean id="jbpmUtilPrecontencioso" class="es.pfsgroup.plugin.precontencioso.expedienteJudicial.manager.JBPMProcessPrecontenciosoManager" >
  	<property name="contextScripts">
  		<list>
  			<value><![CDATA[
  			
  			def dameProcedimientoPropuesto = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameProcedimientoPropuesto(idProcedimiento);
			}
			
  			def dameTipoAsunto = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameTipoAsunto(idProcedimiento);
			}
			
  			def existenGestoresCorrectos = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.existenGestoresCorrectos(idProcedimiento);
			}
			
			def dameTipoTurnado = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameTipoTurnado(idProcedimiento);
			}
			
			def dameDecisionPrepararExpediente = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameDecisionPrepararExpediente(idProcedimiento);
			}
			
			def noExisteGestorDocumentacionAsignadoAsunto = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.noExisteGestorDocumentacionAsignadoAsunto(idProcedimiento);
			}
			
			def comprobarExisteGestorLiquidacion = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.comprobarExisteGestorLiquidacion(idProcedimiento);
			}
			
			def comprobarExisteLetrado = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.comprobarExisteLetrado(idProcedimiento);
			}
			
			def existeTipoGestor(String codigo) {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.existeTipoGestor(idProcedimiento, codigo);
			}
			
			def existeTipoGestorMensaje(String codigo) {
            	def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.existeTipoGestorMensaje(codigo);
            }
			
			def dameFechaSolicitudExpediente = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameFechaSolicitudExpediente(idProcedimiento);
			}
			
			def dameFechaSolicitudDocumentos = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameFechaSolicitudDocumentos(idProcedimiento);
			}
			
			def dameFechaResultadoArchivo = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameFechaResultadoArchivo(idProcedimiento);
			}
			
			def dameFechaEnvio = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameFechaEnvio(idProcedimiento);
			}
			
			def dameFechaFinalizacionTareasPrecedentes = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameFechaFinalizacionTareasPrecedentes(idProcedimiento);
			}
			
			def dameFechaUltimoEnvioExp = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.dameFechaUltimoEnvioExp(idProcedimiento);
			}
			
			def compruebaRiesgoOperacional = {
				def riesgoOperacionalManager = ctx.getBean("riesgoOperacionalManager");
				return riesgoOperacionalManager.comprobarRiesgoProcedimiento(idProcedimiento);
			}
			
			def getEstadoLimiteImporteConcurso = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.getEstadoLimiteImporteConcurso(idProcedimiento);
			}

			def comprobarExistenciaGestor = {
				 def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
				 return procedimientoPcoManager.comprobarExistenciaGestor(idProcedimiento);
			}
            def asuntoConProcuradorPrecontencioso = {
                def procedimientoPcoManager = ctx.getBean("procedimientoPcoManager");
                return procedimientoPcoManager.asuntoConProcuradorPrecontencioso(idProcedimiento);
            }
			]]></value>
  		</list>
  	</property>
  </bean> 
		
  <!-- Diccionarios -->
  <bean parent="clasesDiccionarioAnotadas">
    <property name="sourceList">
    	<list merge="true">    
    		<value>es.pfsgroup.plugin.precontencioso.expedienteJudicial.model.DDTipoProblemaDocPco</value>
    		<value>es.pfsgroup.plugin.precontencioso.expedienteJudicial.model.DDMotivoAsignacionLetrado</value>
    		<value>es.pfsgroup.plugin.precontencioso.expedienteJudicial.model.DDTipoGestionRevisarExpJudicial</value>
    	</list>
    </property>
   </bean>
   
</beans>	
