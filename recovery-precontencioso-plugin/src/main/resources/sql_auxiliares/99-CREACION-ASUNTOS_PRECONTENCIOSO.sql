WHENEVER SQLERROR EXIT ROLLBACK;
SET ECHO ON
DEFINE master = &&ESQUEMA_MASTER

/*******************************************************/
/** INSERCIÓN DE DATOS DE PRUEBA PARA PRECONTENCIOSO **/
/*******************************************************/

-- PRECONDICIÓN: LOS DATOS DE ORIGEN DEBEN HABERSE CARGADO PREVIAMENTE EN LAS TABLAS:
-- CNV_AUX_ALTA_PRC_PER
-- CNV_AUX_ALTA_PRC
-- CNV_AUX_ALTA_PRC_CNT
-- CNV_AUX_ALTA_PCO (esta última contiene los datos particulares de PRECONTENCIOSO)


/***************************************************/
/** TRUNCATE_CNV_TMP_PER_ID **/
/***************************************************/
TRUNCATE TABLE CNV_TMP_PER_ID;

/***************************************************/
/** CNV_TMP_PER_ID **/
/***************************************************/
INSERT INTO CNV_TMP_PER_ID (CODIGO_PERSONA, PER_ID)
   SELECT DISTINCT PRD.CODIGO_PERSONA, PER.PER_ID 
   FROM CNV_AUX_ALTA_PRC_PER PRD 
   LEFT JOIN PER_PERSONAS PER 
   ON (PRD.CODIGO_PERSONA = PER.PER_COD_CLIENTE_ENTIDAD);

/***************************************************/
/** TRUNCATE_CNV_TMP_CNT_ID **/
/***************************************************/
TRUNCATE TABLE CNV_TMP_CNT_ID;

/***************************************************/
/** CNV_TMP_CNT_ID **/
/***************************************************/
INSERT INTO CNV_TMP_CNT_ID (TIPO_PRODUCTO, NUMERO_CONTRATO, NUMERO_ESPEC, CNT_ID)
SELECT DISTINCT PRO.TIPO_PRODUCTO, PRO.NUMERO_CONTRATO, PRO.NUMERO_ESPEC, CNT.CNT_ID  
    FROM CNV_AUX_ALTA_PRC_CNT PRO left join  CNT_CONTRATOS CNT 
    ON PRO.NUMERO_CONTRATO = SUBSTR(CNT.CNT_CONTRATO,11,17);
--    ON PRO.NUMERO_CONTRATO = CNT.CNT_CONTRATO;
--    ON (PRO.NUMERO_CONTRATO = SUBSTR(CNT.CNT_CONTRATO,18,10) AND PRO.TIPO_PRODUCTO = SUBSTR(CNT.CNT_CONTRATO,6,5)
--    AND PRO.NUMERO_ESPEC = TO_NUMBER(SUBSTR(CNT.CNT_CONTRATO,28,15)));

/***************************************************/
/** INSERT_CLI_CLIENTE **/
/***************************************************/
INSERT INTO CLI_CLIENTES
	(CLI_ID, PER_ID, ARQ_ID, DD_EST_ID, CLI_FECHA_EST_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO, CLI_FECHA_CREACION, DD_ECL_ID, CLI_TELECOBRO, OFI_ID) 
SELECT S_CLI_CLIENTES.NEXTVAL, TMP.PER_ID, (select min(arq_id) from arq_arquetipos), iti.DD_EST_ID, PER.PER_FECHA_EXTRACCION, '0', 
		'CARGA_PCO', SYSDATE, '0', SYSDATE, cli.DD_ECL_CODIGO, '0', OFI_ID 
	FROM CNV_TMP_PER_ID TMP 
		LEFT JOIN &master .DD_ECL_ESTADO_CLIENTE cli ON cli.DD_ECL_CODIGO = '1' 
		LEFT JOIN &master .DD_EST_ESTADOS_ITINERARIOS iti on iti.DD_EST_CODIGO = 'AS' 
		LEFT JOIN PER_PERSONAS PER ON TMP.PER_ID=PER.PER_ID 
	WHERE TMP.PER_ID NOT IN 
	(SELECT CLIENTES.PER_ID FROM CLI_CLIENTES CLIENTES) 
		AND TMP.PER_ID IS NOT NULL;

/***************************************************/
/** INSERT_CCL_CONTRATOS_CLIENTE **/
/***************************************************/
INSERT INTO CCL_CONTRATOS_CLIENTE
	(CCL_ID, CNT_ID, CLI_ID, CCL_PASE, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
SELECT S_CCL_CONTRATOS_CLIENTE.NEXTVAL, CNT_ID, CLI_ID, '1', '0', 'CARGA_PCO', SYSDATE, '0' 
	FROM CNV_AUX_ALTA_PRC_PER P 
		INNER JOIN CNV_TMP_PER_ID PER ON P.CODIGO_PERSONA=PER.CODIGO_PERSONA 
		INNER JOIN CLI_CLIENTES CLI ON PER.PER_ID=CLI.PER_ID, 
	CNV_AUX_ALTA_PRC_CNT C 
		LEFT JOIN CNV_TMP_CNT_ID CNT ON C.NUMERO_CONTRATO=CNT.NUMERO_CONTRATO AND C.NUMERO_ESPEC=CNT.NUMERO_ESPEC AND C.TIPO_PRODUCTO=CNT.TIPO_PRODUCTO
	WHERE PER.PER_ID NOT IN (SELECT CLIENTE.CLI_ID FROM CCL_CONTRATOS_CLIENTE CLIENTE) 
		AND PER.PER_ID IS NOT NULL AND P.CODIGO_PROCEDIMIENTO=C.CODIGO_PROCEDIMIENTO 
		AND CNT.CNT_ID NOT IN (SELECT CLIENTE.CNT_ID FROM CCL_CONTRATOS_CLIENTE CLIENTE) 
		AND CNT.CNT_ID IS NOT NULL;

/***************************************************/
/** INSERT_EXP_EXPEDIENTES **/
/***************************************************/
INSERT INTO EXP_EXPEDIENTES
	(EXP_ID, DD_EST_ID, EXP_FECHA_EST_ID, OFI_ID, ARQ_ID, EXP_PROCESS_BPM, EXP_MANUAL, VERSION, USUARIOCREAR, FECHACREAR, BORRADO, 
		DD_EEX_ID, DD_TPX_ID, CD_EXPEDIENTE_NUSE, NUMERO_EXP_NUSE, CD_PROCEDIMIENTO) 
SELECT S_EXP_EXPEDIENTES.NEXTVAL, iti.DD_EST_ID, CNV_AUX_ALTA_PRC.FECHA_PROCESO, zon.OFI_ID, (select min(arq_id) from arq_arquetipos), 
  '0', '0', '0', 'CARGA_PCO', SYSDATE, '0', 
	est.DD_EEX_ID, exp.DD_TPX_ID, CNV_AUX_ALTA_PRC.CODIGO_EXPEDIENTE_NUSE, CNV_AUX_ALTA_PRC.NUMERO_EXP_NUSE, CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE 
FROM CNV_AUX_ALTA_PRC 
	LEFT JOIN &master .DD_EEX_ESTADO_EXPEDIENTE est ON est.DD_EEX_CODIGO = '1' 
		LEFT JOIN DD_TPX_TIPO_EXPEDIENTE exp ON exp.DD_TPX_CODIGO = 'INT' 
		LEFT JOIN ZON_ZONIFICACION zon ON zon.zon_num_centro = '00000000100' 
		LEFT JOIN &master .DD_EST_ESTADOS_ITINERARIOS iti on iti.DD_EST_CODIGO = 'AS' 
	WHERE NOT EXISTS 
		(SELECT 1 FROM EXP_EXPEDIENTES EXPE 
			WHERE EXPE.CD_PROCEDIMIENTO=CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE AND EXPE.NUMERO_EXP_NUSE = CNV_AUX_ALTA_PRC.NUMERO_EXP_NUSE) 
		AND CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE IS NOT NULL 
		AND CNV_AUX_ALTA_PRC.NUMERO_EXP_NUSE IS NOT NULL;

/***************************************************/
/** INSERT_PEX_PERSONAS_EXPEDIENTE **/
/***************************************************/
INSERT INTO PEX_PERSONAS_EXPEDIENTE
	(PEX_ID, PER_ID, EXP_ID, DD_AEX_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
SELECT S_PEX_PERSONAS_EXPEDIENTE.NEXTVAL, TMP.PER_ID, EXP.EXP_ID, AMB.DD_AEX_ID, '0', 'CARGA_PCO', SYSDATE, '0' 
	FROM CNV_AUX_ALTA_PRC_PER PER 
		LEFT JOIN &master .DD_AEX_AMBITOS_EXPEDIENTE AMB ON AMB.DD_AEX_CODIGO = 'AE_AUTO' 
		LEFT JOIN EXP_EXPEDIENTES EXP ON EXP.CD_PROCEDIMIENTO=PER.CODIGO_PROCEDIMIENTO 
		LEFT JOIN CNV_TMP_PER_ID TMP ON TMP.CODIGO_PERSONA=PER.CODIGO_PERSONA 
	WHERE NOT EXISTS (SELECT 1 FROM PEX_PERSONAS_EXPEDIENTE PEX WHERE TMP.PER_ID=PEX.PER_ID AND EXP.EXP_ID=PEX.EXP_ID) 
		AND TMP.PER_ID IS NOT NULL AND EXP.EXP_ID IS NOT NULL;

/***************************************************/
/** INSERT_CEX_CONTRATOS_EXPEDIENTE **/
/***************************************************/
INSERT INTO CEX_CONTRATOS_EXPEDIENTE
	(CEX_ID, CNT_ID, EXP_ID, CEX_SIN_ACTUACION, VERSION, USUARIOCREAR, FECHACREAR, BORRADO, DD_AEX_ID)
SELECT S_CEX_CONTRATOS_EXPEDIENTE.NEXTVAL, TMP.CNT_ID, EXP.EXP_ID, '0', '0', 'CARGA_PCO', SYSDATE, '0', AMB.DD_AEX_ID 
	FROM CNV_AUX_ALTA_PRC_CNT CNT 
		LEFT JOIN &master .DD_AEX_AMBITOS_EXPEDIENTE AMB ON AMB.DD_AEX_CODIGO = 'AE_AUTO' 
		LEFT JOIN EXP_EXPEDIENTES EXP ON EXP.CD_PROCEDIMIENTO=CNT.CODIGO_PROCEDIMIENTO 
		LEFT JOIN CNV_TMP_CNT_ID TMP ON TMP.NUMERO_CONTRATO=CNT.NUMERO_CONTRATO AND TMP.NUMERO_ESPEC=CNT.NUMERO_ESPEC AND TMP.TIPO_PRODUCTO=CNT.TIPO_PRODUCTO 
	WHERE NOT EXISTS (SELECT 1 FROM CEX_CONTRATOS_EXPEDIENTE CEX WHERE TMP.CNT_ID = CEX.CNT_ID AND EXP.EXP_ID = CEX.EXP_ID) 
		AND TMP.CNT_ID IS NOT NULL AND EXP.EXP_ID IS NOT NULL;

/***************************************************/
/** INSERT_ASU_ASUNTOS **/
/***************************************************/
INSERT INTO ASU_ASUNTOS
	(ASU_ID, DD_EST_ID, ASU_FECHA_EST_ID, EXP_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO, DD_EAS_ID, DTYPE, ASU_ID_EXTERNO)
SELECT S_ASU_ASUNTOS.NEXTVAL, iti.DD_EST_ID, SYSDATE, EXPE.EXP_ID, '0', 'CARGA_PCO', SYSDATE, '0', 
		DD_EAS_ID, 'EXTAsunto', CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE 
	FROM CNV_AUX_ALTA_PRC 
		INNER JOIN &master .DD_EAS_ESTADO_ASUNTOS asu ON asu.DD_EAS_CODIGO = '03' 
		INNER JOIN &master .DD_EST_ESTADOS_ITINERARIOS iti on iti.DD_EST_CODIGO = 'AS' 
		INNER JOIN EXP_EXPEDIENTES EXPE on CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE=EXPE.CD_PROCEDIMIENTO 
	WHERE NOT EXISTS (SELECT 1 FROM ASU_ASUNTOS ASUNTOS WHERE ASUNTOS.ASU_ID_EXTERNO=CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE) 
		AND CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE IS NOT NULL;

/***************************************************/
/** CNV_ALTA_GESTORES_ASUNTO (Procedure ADAPTADO PARA PRECONTENCIOSO)**/ 
/***************************************************/
-- DECLARE
-- 	C_USUCNV VARCHAR2(10 CHAR);
--     V_FECHA_RECH TIMESTAMP;
--     CURSOR CUR_GES_ASUNTO (P_FECHA TIMESTAMP) IS 
--     	WITH USU AS (SELECT USU_ID, USU_USERNAME FROM &master .USU_USUARIOS WHERE BORRADO = 0)
--     		, USD AS (SELECT USD.USD_ID, USD.USU_ID, USD.DES_ID, TDE.DD_TDE_CODIGO FROM USD_USUARIOS_DESPACHOS USD 
--         		JOIN DES_DESPACHO_EXTERNO DES ON USD.DES_ID = DES.DES_ID
--         		JOIN &master .DD_TDE_TIPO_DESPACHO TDE ON DES.DD_TDE_ID = TDE.DD_TDE_ID
--       			WHERE USD.BORRADO = 0)
--     		, TGE AS (SELECT DD_TGE_ID, DD_TGE_CODIGO FROM &master .DD_TGE_TIPO_GESTOR WHERE DD_TGE_CODIGO IN ('GEXT', 'PROC', 'GEST', 'PREDOC')
--     	)
--     SELECT ASU.ASU_ID, USD_L.USD_ID GEXT, USD_P.USD_ID PROC, USD_PD.USD_ID PREDOC, TGE_L.DD_TGE_ID TGE_GEXT, TGE_P.DD_TGE_ID TGE_PROC, TGE_PD.DD_TGE_ID TGE_PREDOC
--     FROM CNV_AUX_ALTA_PRC D
--       JOIN CNV_AUX_ALTA_PCO PCO ON D.CODIGO_PROCEDIMIENTO_NUSE = PCO.CODIGO_PROCEDIMIENTO_NUSE
--       JOIN ASU_ASUNTOS ASU ON D.CODIGO_PROCEDIMIENTO_NUSE = ASU.ASU_ID_EXTERNO
--       JOIN USU USU_L ON D.COD_LETRADO = USU_L.USU_USERNAME
--       JOIN USD USD_L ON USU_L.USU_ID = USD_L.USU_ID AND USD_L.DD_TDE_CODIGO = '1'
--       JOIN USU USU_P ON D.COD_PROCURADOR = USU_P.USU_USERNAME
--       JOIN USD USD_P ON USU_P.USU_ID = USD_P.USU_ID AND USD_P.DD_TDE_CODIGO = '2'
--       JOIN USU USU_PD ON PCO.COD_PREPARADORDOC = USU_PD.USU_USERNAME
--       JOIN USD USD_PD ON USU_PD.USU_ID = USD_PD.USU_ID AND USD_PD.DD_TDE_CODIGO = 'PREDOC'
--       JOIN TGE TGE_L ON TGE_L.DD_TGE_CODIGO = 'GEXT'
--       JOIN TGE TGE_P ON TGE_P.DD_TGE_CODIGO = 'PROC'
--       JOIN TGE TGE_PD ON TGE_PD.DD_TGE_CODIGO = 'PREDOC'
--       WHERE CODIGO_PROCEDIMIENTO_NUSE NOT IN (SELECT CODIGO_PROCEDIMIENTO_NUSE FROM CNV_ALTA_GES_ASU_RECHAZOS WHERE FECHA_RECH = P_FECHA)
--         AND NOT EXISTS (SELECT 1 FROM GAA_GESTOR_ADICIONAL_ASUNTO WHERE ASU_ID = ASU.ASU_ID);
--   	TYPE T_GEST IS TABLE OF CUR_GES_ASUNTO%ROWTYPE INDEX BY BINARY_INTEGER;
--   	L_GEST T_GEST;
-- BEGIN
--   C_USUCNV := 'CARGA_PCO';
--   SELECT SYSDATE INTO V_FECHA_RECH FROM DUAL;
--   INSERT INTO CNV_ALTA_GES_ASU_RECHAZOS
-- 	WITH USU AS (
--     	SELECT USU_ID, USU_USERNAME FROM &master .USU_USUARIOS WHERE BORRADO = 0
--   	)
--   	, USD AS (
--     	SELECT USD.USD_ID, USD.USU_ID, USD.DES_ID, TDE.DD_TDE_CODIGO 
--     		FROM USD_USUARIOS_DESPACHOS USD 
--       			JOIN DES_DESPACHO_EXTERNO DES ON USD.DES_ID = DES.DES_ID
--       			JOIN &master .DD_TDE_TIPO_DESPACHO TDE ON DES.DD_TDE_ID = TDE.DD_TDE_ID
--     		WHERE USD.BORRADO = 0
--   	)
--   	SELECT V_FECHA_RECH,  D.* 
--   		FROM CNV_AUX_ALTA_PRC D
--     		LEFT JOIN CNV_AUX_ALTA_PCO PCO ON D.CODIGO_PROCEDIMIENTO_NUSE = PCO.CODIGO_PROCEDIMIENTO_NUSE
--       		LEFT JOIN ASU_ASUNTOS ASU ON D.CODIGO_PROCEDIMIENTO_NUSE = ASU.ASU_ID_EXTERNO
--     		LEFT JOIN USU USU_L ON D.COD_LETRADO = USU_L.USU_USERNAME
--     		LEFT JOIN USD USD_L ON USU_L.USU_ID = USD_L.USU_ID AND USD_L.DD_TDE_CODIGO = '1'
--     		LEFT JOIN USU USU_P ON D.COD_PROCURADOR = USU_P.USU_USERNAME
--     		LEFT JOIN USD USD_P ON USU_P.USU_ID = USD_P.USU_ID AND USD_P.DD_TDE_CODIGO = '2'
--     		LEFT JOIN USU USU_PD ON PCO.COD_PREPARADORDOC = USU_PD.USU_USERNAME
--     		LEFT JOIN USD USD_PD ON USU_PD.USU_ID = USD_PD.USU_ID AND USD_PD.DD_TDE_CODIGO = 'PREDOC'
--     	WHERE ASU.ASU_ID IS NULL OR USD_L.DES_ID IS NULL OR USD_P.DES_ID IS NULL;
    
--   /*
--    * Insertamos los letrados de los asuntos no rechazados
--    */
--   OPEN CUR_GES_ASUNTO(V_FECHA_RECH);
--   LOOP
--     FETCH CUR_GES_ASUNTO BULK COLLECT INTO L_GEST LIMIT 1000;  
--     FORALL I IN 1..L_GEST.COUNT
--     	INSERT INTO GAA_GESTOR_ADICIONAL_ASUNTO (GAA_ID, ASU_ID, USD_ID, DD_TGE_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
--     		VALUES (S_GAA_GESTOR_ADICIONAL_ASUNTO.NEXTVAL, L_GEST(I).ASU_ID, L_GEST(I).GEXT, L_GEST(I).TGE_GEXT, 0, C_USUCNV, SYSDATE, 0);
    
--     FORALL I IN 1..L_GEST.COUNT
--     	INSERT INTO GAA_GESTOR_ADICIONAL_ASUNTO (GAA_ID, ASU_ID, USD_ID, DD_TGE_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
--     		VALUES (S_GAA_GESTOR_ADICIONAL_ASUNTO.NEXTVAL, L_GEST(I).ASU_ID, L_GEST(I).PROC, L_GEST(I).TGE_PROC, 0, C_USUCNV, SYSDATE, 0);
  
--     FORALL I IN 1..L_GEST.COUNT
--     	INSERT INTO GAA_GESTOR_ADICIONAL_ASUNTO (GAA_ID, ASU_ID, USD_ID, DD_TGE_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
--     		VALUES (S_GAA_GESTOR_ADICIONAL_ASUNTO.NEXTVAL, L_GEST(I).ASU_ID, L_GEST(I).PREDOC, L_GEST(I).TGE_PROC, 0, C_USUCNV, SYSDATE, 0);
  
--     FORALL I IN 1..L_GEST.COUNT
--     	INSERT INTO GAH_GESTOR_ADICIONAL_HISTORICO (GAH_ID, GAH_ASU_ID, GAH_GESTOR_ID, GAH_TIPO_GESTOR_ID, GAH_FECHA_DESDE, VERSION, USUARIOCREAR, FECHACREAR,BORRADO)
-- 		    VALUES(S_GAH_GESTOR_ADIC_HISTORICO.NEXTVAL, L_GEST(I).ASU_ID, L_GEST(I).GEXT, L_GEST(I).TGE_GEXT, TRUNC(SYSDATE), 0, C_USUCNV, SYSDATE, 0);
    
--     FORALL I IN 1..L_GEST.COUNT
--     	INSERT INTO GAH_GESTOR_ADICIONAL_HISTORICO (GAH_ID, GAH_ASU_ID, GAH_GESTOR_ID, GAH_TIPO_GESTOR_ID, GAH_FECHA_DESDE, VERSION, USUARIOCREAR, FECHACREAR,BORRADO)
--     		VALUES(S_GAH_GESTOR_ADIC_HISTORICO.NEXTVAL, L_GEST(I).ASU_ID, L_GEST(I).PROC, L_GEST(I).TGE_PROC, TRUNC(SYSDATE), 0, C_USUCNV, SYSDATE, 0);
  
--     FORALL I IN 1..L_GEST.COUNT
--     	INSERT INTO GAH_GESTOR_ADICIONAL_HISTORICO (GAH_ID, GAH_ASU_ID, GAH_GESTOR_ID, GAH_TIPO_GESTOR_ID, GAH_FECHA_DESDE, VERSION, USUARIOCREAR, FECHACREAR,BORRADO)
-- 		    VALUES(S_GAH_GESTOR_ADIC_HISTORICO.NEXTVAL, L_GEST(I).ASU_ID, L_GEST(I).GEXT, L_GEST(I).TGE_PREDOC, TRUNC(SYSDATE), 0, C_USUCNV, SYSDATE, 0);
      
--     EXIT WHEN CUR_GES_ASUNTO%NOTFOUND;
--   END LOOP;
--   COMMIT;

-- END;

/***************************************************/
/** INSERT_PRC_PROCEDIMIENTOS **/
/***************************************************/
INSERT INTO PRC_PROCEDIMIENTOS
	(PRC_ID, ASU_ID, DD_TAC_ID, DD_TRE_ID, DD_TPO_ID, PRC_PORCENTAJE_RECUPERACION, PRC_PLAZO_RECUPERACION, 
		PRC_SALDO_ORIGINAL_VENCIDO, PRC_SALDO_ORIGINAL_NO_VENCIDO, VERSION, USUARIOCREAR, FECHACREAR, BORRADO, 
		PRC_DECIDIDO, DD_EPR_ID, DTYPE, TIPO_PROC_ORIGINAL, PRC_PARALIZADO)
SELECT S_PRC_PROCEDIMIENTOS.NEXTVAL, ASU.ASU_ID, null, '1', null, '100', '18', 
		'0', '0', '0', 'CARGA_PCO', SYSDATE, '0', '0', 
		EST.DD_EPR_ID, 'MEJProcedimiento', null, '0' 
	FROM ASU_ASUNTOS ASU 
		LEFT JOIN &master .DD_EPR_ESTADO_PROCEDIMIENTO EST ON EST.DD_EPR_CODIGO='03' 
	WHERE ASU.ASU_ID NOT IN (SELECT PRC.ASU_ID FROM PRC_PROCEDIMIENTOS PRC) 
		AND ASU.ASU_ID IS NOT NULL;

/***************************************************/
/** INSERT_PRC_PER **/
/***************************************************/
INSERT INTO PRC_PER
	(PRC_ID, PER_ID, VERSION)
SELECT DISTINCT PRO.PRC_ID, TMP.PER_ID, '0' 
	FROM CNV_AUX_ALTA_PRC PRC 
		LEFT JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		LEFT JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID 
		LEFT JOIN CNV_AUX_ALTA_PRC_PER PER ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PER.CODIGO_PROCEDIMIENTO 
		LEFT JOIN CNV_TMP_PER_ID TMP ON TMP.CODIGO_PERSONA=PER.CODIGO_PERSONA 
	WHERE NOT EXISTS (SELECT 1 FROM PRC_PER CEX WHERE PRO.PRC_ID = CEX.PRC_ID AND TMP.PER_ID = CEX.PER_ID) 
		AND TMP.PER_ID IS NOT NULL 
		AND PRO.PRC_ID IS NOT NULL;

/***************************************************/
/** INSERT_PRC_CEX **/
/***************************************************/
INSERT INTO PRC_CEX
	(PRC_ID, CEX_ID, VERSION)
SELECT PRO.PRC_ID, CEX.CEX_ID, '0' 
	FROM CNV_AUX_ALTA_PRC PRC 
		LEFT JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		LEFT JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID, EXP_EXPEDIENTES EXP 
		LEFT JOIN CEX_CONTRATOS_EXPEDIENTE CEX ON CEX.EXP_ID=EXP.EXP_ID 
	WHERE PRC.CODIGO_PROCEDIMIENTO_NUSE=EXP.CD_PROCEDIMIENTO 
		AND NOT EXISTS (SELECT 1 FROM PRC_CEX CEX2 WHERE PRO.PRC_ID = CEX2.PRC_ID AND CEX2.CEX_ID = CEX.CEX_ID) 
		AND CEX.CEX_ID IS NOT NULL 
		AND PRO.PRC_ID IS NOT NULL;

/***************************************************/
/** INSERT_TAR_TAREAS_NOTIF(CONCURSOS)  **/
/** MODIFICADO PARA QUE SOLO TOME LOS QUE NO TIENEN PRECONTENCIOSO ASIGNADO **/
/***************************************************/
INSERT INTO TAR_TAREAS_NOTIFICACIONES
	(TAR_ID, EXP_ID, ASU_ID, DD_EST_ID, DD_EIN_ID, DD_STA_ID, TAR_CODIGO, TAR_TAREA, TAR_DESCRIPCION, 
		TAR_FECHA_INI, TAR_EN_ESPERA, TAR_ALERTA, TAR_EMISOR, 
		VERSION, USUARIOCREAR, FECHACREAR, BORRADO, PRC_ID, DTYPE, NFA_TAR_REVISADA)
SELECT S_TAR_TAREAS_NOTIFICACIONES.NEXTVAL, EXP_ID, PRO.ASU_ID, '6', '5', DD_STA_ID, '1', TAP_CODIGO, TAP_DESCRIPCION, 
		SYSDATE, '0', '0', 'AUTOMATICA', 
		'0', 'CARGA_PCO', SYSDATE, '0', PRC_ID, 'EXTTareaNotificacion', '0' 
	FROM CNV_AUX_ALTA_PRC PRC 
		LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		INNER JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID 
		INNER JOIN TAP_TAREA_PROCEDIMIENTO TAP ON TAP.TAP_CODIGO='H009_RegistrarPublicacionBOE' 
	WHERE PRC.TIPO_PROCEDIMIENTO='CONCURSO' 
		AND NOT EXISTS (SELECT 1 FROM TAR_TAREAS_NOTIFICACIONES TAR WHERE TAR.EXP_ID = ASU.EXP_ID AND TAR.ASU_ID = ASU.ASU_ID) 
		AND ASU.EXP_ID IS NOT NULL 
		AND ASU.ASU_ID IS NOT NULL
		AND PCO.CODIGO_PROCEDIMIENTO_NUSE IS NULL;

/***************************************************/
/** INSERT_TAR_TAREAS_NOTIF(LITIGIOS) **/
/** MODIFICADO PARA QUE SOLO TOME LOS QUE NO TIENEN PRECONTENCIOSO ASIGNADO **/
/***************************************************/
INSERT INTO TAR_TAREAS_NOTIFICACIONES
	(TAR_ID, EXP_ID, ASU_ID, DD_EST_ID, DD_EIN_ID, DD_STA_ID, TAR_CODIGO, TAR_TAREA, TAR_DESCRIPCION, 
		TAR_FECHA_INI, TAR_EN_ESPERA, TAR_ALERTA, TAR_EMISOR, 
		VERSION, USUARIOCREAR, FECHACREAR, BORRADO, PRC_ID, DTYPE, NFA_TAR_REVISADA)
SELECT S_TAR_TAREAS_NOTIFICACIONES.NEXTVAL, EXP_ID, PRO.ASU_ID, '6', '5', DD_STA_ID, '1', TAP_CODIGO, TAP_DESCRIPCION, 
		SYSDATE, '0', '0', 'AUTOMATICA', '0', 
		'CARGA_PCO', SYSDATE, '0', PRC_ID, 'EXTTareaNotificacion', '0' 
	FROM CNV_AUX_ALTA_PRC PRC 
		LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		LEFT JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		LEFT JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID 
		LEFT JOIN TAP_TAREA_PROCEDIMIENTO TAP ON TAP.TAP_CODIGO='P420_registrarAceptacion' 
	WHERE PRC.TIPO_PROCEDIMIENTO!='CONCURSO' 
		AND ASU.EXP_ID NOT IN (SELECT TAR.EXP_ID FROM TAR_TAREAS_NOTIFICACIONES TAR WHERE EXP_ID IS NOT NULL) 
		AND EXP_ID IS NOT NULL
		AND PCO.CODIGO_PROCEDIMIENTO_NUSE IS NULL;

/***************************************************/
/** INSERT_DD_STA_SUBTIPO_TAREA_BASE(PRECONTENCIOSO) **/
/***************************************************/
INSERT INTO &master .DD_STA_SUBTIPO_TAREA_BASE 
	(DD_STA_ID, DD_TAR_ID, DD_STA_CODIGO, DD_STA_DESCRIPCION, DD_STA_DESCRIPCION_LARGA, DD_STA_GESTOR, VERSION, USUARIOCREAR, FECHACREAR,  USUARIOMODIFICAR, FECHAMODIFICAR, USUARIOBORRAR, FECHABORRAR, BORRADO, DD_TGE_ID, DTYPE)
	VALUES(&master .S_DD_STA_SUBTIPO_TAREA_BASE.NEXTVAL, '1', 'OCULTO', 'OCULTO', 'OCULTO', null, '0', 'DD', sysdate, null, null, null, null, '0', '0', 'EXTSubtipoTarea');

/***************************************************/
/** INSERT_TAR_TAREAS_NOTIF(PRECONTENCIOSO) **/
/***************************************************/
INSERT INTO TAR_TAREAS_NOTIFICACIONES
	(TAR_ID, EXP_ID, ASU_ID, DD_EST_ID, DD_EIN_ID, DD_STA_ID, TAR_CODIGO, TAR_TAREA, TAR_DESCRIPCION, 
		TAR_FECHA_INI, TAR_EN_ESPERA, TAR_ALERTA, TAR_EMISOR, 
		VERSION, USUARIOCREAR, FECHACREAR, BORRADO, PRC_ID, DTYPE, NFA_TAR_REVISADA)
SELECT S_TAR_TAREAS_NOTIFICACIONES.NEXTVAL, EXP_ID, PRO.ASU_ID, '6', '5', DECODE(PCO.PRETURNADO, 1, DD_STA_ID, (SELECT DD_STA_ID FROM &master .DD_STA_SUBTIPO_TAREA_BASE WHERE DD_STA_CODIGO = 'OCULTO')), '1', TAP_CODIGO, TAP_DESCRIPCION, 
		SYSDATE, '0', '0', 'AUTOMATICA', '0', 
		'CARGA_PCO', SYSDATE, '0', PRC_ID, 'EXTTareaNotificacion', '0' 
	FROM CNV_AUX_ALTA_PRC PRC 
		LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		LEFT JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		LEFT JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID 
		LEFT JOIN TAP_TAREA_PROCEDIMIENTO TAP ON TAP.TAP_CODIGO=DECODE(PCO.PRETURNADO, 1, 'PCO_RegistrarAceptacion', 'PCO_PrepararExpediente')
	WHERE ASU.EXP_ID NOT IN (SELECT TAR.EXP_ID FROM TAR_TAREAS_NOTIFICACIONES TAR WHERE EXP_ID IS NOT NULL) 
		AND EXP_ID IS NOT NULL
		AND PCO.CODIGO_PROCEDIMIENTO_NUSE IS NOT NULL;

INSERT INTO TAR_TAREAS_NOTIFICACIONES
	(TAR_ID, EXP_ID, ASU_ID, DD_EST_ID, DD_EIN_ID, DD_STA_ID, TAR_CODIGO, TAR_TAREA, TAR_DESCRIPCION, 
		TAR_FECHA_INI, TAR_EN_ESPERA, TAR_ALERTA, TAR_EMISOR, 
		VERSION, USUARIOCREAR, FECHACREAR, BORRADO, PRC_ID, DTYPE, NFA_TAR_REVISADA)
SELECT S_TAR_TAREAS_NOTIFICACIONES.NEXTVAL, null, PRO.ASU_ID, '6', '5', DD_STA_ID, '1', TAP_CODIGO, TAP_DESCRIPCION, 
		SYSDATE, '0', '0', 'AUTOMATICA', '0', 
		'CARGA_PCO', SYSDATE, '0', PRC_ID, 'EXTTareaNotificacion', '0' 
	FROM CNV_AUX_ALTA_PRC PRC 
		LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		LEFT JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		LEFT JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID 
		LEFT JOIN TAP_TAREA_PROCEDIMIENTO TAP ON TAP.TAP_CODIGO=DECODE(PCO.PRETURNADO, 1, null, 'PCO_GenerarLiq');

INSERT INTO TAR_TAREAS_NOTIFICACIONES
	(TAR_ID, EXP_ID, ASU_ID, DD_EST_ID, DD_EIN_ID, DD_STA_ID, TAR_CODIGO, TAR_TAREA, TAR_DESCRIPCION, 
		TAR_FECHA_INI, TAR_EN_ESPERA, TAR_ALERTA, TAR_EMISOR, 
		VERSION, USUARIOCREAR, FECHACREAR, BORRADO, PRC_ID, DTYPE, NFA_TAR_REVISADA)
SELECT S_TAR_TAREAS_NOTIFICACIONES.NEXTVAL, null, PRO.ASU_ID, '6', '5', DD_STA_ID, '1', TAP_CODIGO, TAP_DESCRIPCION, 
		SYSDATE, '0', '0', 'AUTOMATICA', '0', 
		'CARGA_PCO', SYSDATE, '0', PRC_ID, 'EXTTareaNotificacion', '0' 
	FROM CNV_AUX_ALTA_PRC PRC 
		LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		LEFT JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		LEFT JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID 
		LEFT JOIN TAP_TAREA_PROCEDIMIENTO TAP ON TAP.TAP_CODIGO=DECODE(PCO.PRETURNADO, 1, null, 'PCO_SolicitarDoc');

/***************************************************/
/** INSERT_TEX_TAREA_EXTERNA **/
/***************************************************/
INSERT INTO TEX_TAREA_EXTERNA
	(TEX_ID, TAR_ID, TAP_ID, TEX_DETENIDA, VERSION, USUARIOCREAR, FECHACREAR, BORRADO, TEX_CANCELADA, TEX_NUM_AUTOP, DTYPE)
SELECT S_TEX_TAREA_EXTERNA.NEXTVAL, TAR_ID, TAP_ID, '0', '0', 'CARGA_PCO', SYSDATE, '0', '0', '0', 'EXTTareaExterna' 
	FROM TAR_TAREAS_NOTIFICACIONES TAR 
		LEFT JOIN TAP_TAREA_PROCEDIMIENTO TAP ON TAR.TAR_TAREA=TAP.TAP_CODIGO 
	WHERE TAR.USUARIOCREAR = 'CARGA_PCO' 
		AND TAR.TAR_ID NOT IN (SELECT TEX.TAR_ID FROM TEX_TAREA_EXTERNA TEX WHERE TAR_ID IS NOT NULL) 
		AND TAR.TAR_ID IS NOT NULL;

/***************************************************/
/** UPDATE ASU_ASUNTO DD_PAS_ID_SAREB **/
/***************************************************/
MERGE INTO ASU_ASUNTOS ASU USING
	(SELECT DISTINCT DD.DD_PAS_ID, ASU2.ASU_ID, ASU2.EXP_ID 
		FROM CNV_AUX_ALTA_PRC CNV 
			INNER JOIN ASU_ASUNTOS ASU2 ON ASU2.ASU_ID_EXTERNO=CNV.CODIGO_PROCEDIMIENTO_NUSE AND ASU2.DD_PAS_ID IS NULL 
			INNER JOIN CEX_CONTRATOS_EXPEDIENTE CEX ON CEX.EXP_ID=ASU2.EXP_ID 
			INNER JOIN EXT_IAC_INFO_ADD_CONTRATO EXT ON EXT.CNT_ID=CEX.CNT_ID AND EXT.IAC_VALUE='5074'
			INNER JOIN EXT_DD_IFC_INFO_CONTRATO EXT2 ON EXT2.DD_IFC_ID = EXT.DD_IFC_ID AND DD_IFC_CODIGO='char_extra1' 
			INNER JOIN DD_PAS_PROPIEDAD_ASUNTO DD ON DD.DD_PAS_CODIGO='SAREB') ORIGEN 
	ON (ASU.ASU_ID=ORIGEN.ASU_ID AND ASU.EXP_ID=ORIGEN.EXP_ID) 
	WHEN MATCHED THEN 
		UPDATE SET ASU.DD_PAS_ID = ORIGEN.DD_PAS_ID;

/***************************************************/
/** UPDATE ASU_ASUNTO DD_PAS_ID_SAREB (BANKIA) **/
/***************************************************/
MERGE INTO ASU_ASUNTOS ASU USING
	(SELECT DISTINCT DD.DD_PAS_ID, ASU2.ASU_ID, ASU2.EXP_ID 
		FROM CNV_AUX_ALTA_PRC CNV 
			INNER JOIN ASU_ASUNTOS ASU2 ON ASU2.ASU_ID_EXTERNO=CNV.CODIGO_PROCEDIMIENTO_NUSE AND ASU2.DD_PAS_ID IS NULL 
			INNER JOIN CEX_CONTRATOS_EXPEDIENTE CEX ON CEX.EXP_ID=ASU2.EXP_ID 
			INNER JOIN EXT_IAC_INFO_ADD_CONTRATO EXT ON EXT.CNT_ID=CEX.CNT_ID AND EXT.IAC_VALUE='2038'
			INNER JOIN EXT_DD_IFC_INFO_CONTRATO EXT2 ON EXT2.DD_IFC_ID = EXT.DD_IFC_ID AND DD_IFC_CODIGO='char_extra1' 
			INNER JOIN DD_PAS_PROPIEDAD_ASUNTO DD ON DD.DD_PAS_CODIGO='BANKIA') ORIGEN 
	ON (ASU.ASU_ID=ORIGEN.ASU_ID AND ASU.EXP_ID=ORIGEN.EXP_ID) 
	WHEN MATCHED THEN 
		UPDATE SET ASU.DD_PAS_ID = ORIGEN.DD_PAS_ID;

/***************************************************/
/** UPDATE_ASU_ASUNTO_DD_TAS_CONCURSO **/
/***************************************************/
MERGE INTO ASU_ASUNTOS ASU USING
	(SELECT DD.DD_TAS_ID, ASU2.ASU_ID 
		FROM CNV_AUX_ALTA_PRC CNV 
			INNER JOIN ASU_ASUNTOS ASU2 ON ASU2.ASU_ID_EXTERNO=CNV.CODIGO_PROCEDIMIENTO_NUSE AND CNV.TIPO_PROCEDIMIENTO='CONCURSO' AND ASU2.DD_TAS_ID IS NULL 
			INNER JOIN &master .DD_TAS_TIPOS_ASUNTO DD ON DD.DD_TAS_CODIGO='02') ORIGEN 
	ON (ASU.ASU_ID=ORIGEN.ASU_ID) 
	WHEN MATCHED THEN 
		UPDATE SET ASU.DD_TAS_ID = ORIGEN.DD_TAS_ID;

/***************************************************/
/** UPDATE_ASU_ASUNTO_DD_TAS_LITIGIO **/
/***************************************************/
MERGE INTO ASU_ASUNTOS ASU USING
	(SELECT DD.DD_TAS_ID, ASU2.ASU_ID 
		FROM CNV_AUX_ALTA_PRC CNV 
			INNER JOIN ASU_ASUNTOS ASU2 ON ASU2.ASU_ID_EXTERNO=CNV.CODIGO_PROCEDIMIENTO_NUSE AND CNV.TIPO_PROCEDIMIENTO!='CONCURSO' AND ASU2.DD_TAS_ID IS NULL 
			INNER JOIN &master .DD_TAS_TIPOS_ASUNTO DD ON DD.DD_TAS_CODIGO='01') ORIGEN 
	ON (ASU.ASU_ID=ORIGEN.ASU_ID) 
	WHEN MATCHED THEN 
		UPDATE SET ASU.DD_TAS_ID = ORIGEN.DD_TAS_ID;

/***************************************************/
/** UPDATE_ASU_ASUNTO_DD_GES_ID **/
/***************************************************/
MERGE INTO ASU_ASUNTOS ASU USING
	(SELECT DD.DD_GES_ID, ASU2.ASU_ID 
		FROM CNV_AUX_ALTA_PRC CNV 
			INNER JOIN ASU_ASUNTOS ASU2 ON ASU2.ASU_ID_EXTERNO=CNV.CODIGO_PROCEDIMIENTO_NUSE AND ASU2.DD_GES_ID IS NULL 
			INNER JOIN DD_GES_GESTION_ASUNTO DD ON DD.DD_GES_CODIGO='BANKIA') ORIGEN 
	ON (ASU.ASU_ID=ORIGEN.ASU_ID) 
	WHEN MATCHED THEN 
		UPDATE SET ASU.DD_GES_ID = ORIGEN.DD_GES_ID;

/***************************************************/
/** UPDATE_ASU_ASUNTO_DD_GES_ID 1.15 **/
/***************************************************/
UPDATE ASU_ASUNTOS ASU 
	SET DD_GES_ID = (SELECT DD_GES_ID FROM DD_GES_GESTION_ASUNTO WHERE DD_GES_CODIGO = 'HAYA') 
	WHERE DD_PAS_ID = (SELECT DD_PAS_ID FROM DD_PAS_PROPIEDAD_ASUNTO WHERE DD_PAS_CODIGO = 'SAREB') 
		AND DD_GES_ID = (SELECT DD_GES_ID FROM DD_GES_GESTION_ASUNTO WHERE DD_GES_CODIGO = 'BANKIA') 
		AND ASU.USUARIOCREAR = 'CARGA_PCO';

/***************************************************/
/** UPDATE_PRC_PROCEDIMIENTO_LITIGIO **/
/** MODIFICADO PARA QUE SOLO TOME LOS QUE NO TIENEN PRECONTENCIOSO ASIGNADO **/
/***************************************************/
MERGE INTO PRC_PROCEDIMIENTOS PRC USING
	(SELECT DD.DD_TPO_ID, PRO.PRC_ID 
		FROM CNV_AUX_ALTA_PRC PRC2 
			LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC2.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
			INNER JOIN ASU_ASUNTOS ASU ON PRC2.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
			INNER JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID AND PRO.DD_TPO_ID IS NULL 
			INNER JOIN DD_TPO_TIPO_PROCEDIMIENTO DD ON DD.DD_TPO_CODIGO='P420' 
		WHERE PRC2.TIPO_PROCEDIMIENTO!='CONCURSO' AND PCO.CODIGO_PROCEDIMIENTO_NUSE IS NULL) ORIGEN 
	ON (PRC.PRC_ID=ORIGEN.PRC_ID) 
	WHEN MATCHED THEN 
		UPDATE SET PRC.DD_TPO_ID = ORIGEN.DD_TPO_ID, PRC.TIPO_PROC_ORIGINAL=ORIGEN.DD_TPO_ID;

/***************************************************/
/** UPDATE_PRC_PROCEDIMIENTO_CONCURSO **/
/** MODIFICADO PARA QUE SOLO TOME LOS QUE NO TIENEN PRECONTENCIOSO ASIGNADO **/
/***************************************************/
MERGE INTO PRC_PROCEDIMIENTOS PRC USING
	(SELECT DD.DD_TPO_ID, PRO.PRC_ID 
		FROM CNV_AUX_ALTA_PRC PRC2 
			LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC2.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
			INNER JOIN ASU_ASUNTOS ASU ON PRC2.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
			INNER JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID AND PRO.DD_TPO_ID IS NULL 
			INNER JOIN DD_TPO_TIPO_PROCEDIMIENTO DD ON DD.DD_TPO_CODIGO='H009' 
		WHERE PRC2.TIPO_PROCEDIMIENTO='CONCURSO' AND PCO.CODIGO_PROCEDIMIENTO_NUSE IS NULL) ORIGEN 
	ON (PRC.PRC_ID=ORIGEN.PRC_ID) 
	WHEN MATCHED THEN 
		UPDATE SET PRC.DD_TPO_ID = ORIGEN.DD_TPO_ID, PRC.TIPO_PROC_ORIGINAL=ORIGEN.DD_TPO_ID;

/***************************************************/
/** UPDATE_PRC_PROCEDIMIENTO_PRECONTENCIOSO **/
/***************************************************/
MERGE INTO PRC_PROCEDIMIENTOS PRC USING
	(SELECT DD.DD_TPO_ID, PRO.PRC_ID 
		FROM CNV_AUX_ALTA_PRC PRC2 
			LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC2.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
			INNER JOIN ASU_ASUNTOS ASU ON PRC2.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
			INNER JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID AND PRO.DD_TPO_ID IS NULL 
			INNER JOIN DD_TPO_TIPO_PROCEDIMIENTO DD ON DD.DD_TPO_CODIGO='PCO' 
		WHERE PCO.CODIGO_PROCEDIMIENTO_NUSE IS NOT NULL) ORIGEN 
	ON (PRC.PRC_ID=ORIGEN.PRC_ID) 
	WHEN MATCHED THEN 
		UPDATE SET PRC.DD_TPO_ID = ORIGEN.DD_TPO_ID, PRC.TIPO_PROC_ORIGINAL=ORIGEN.DD_TPO_ID;

/***************************************************/
/** PEX_PASE_FAKE **/
/***************************************************/
--BEGIN 
	UPDATE PEX_PERSONAS_EXPEDIENTE SET PEX_PASE = 1 WHERE PEX_ID IN 
		(SELECT TMP.PEX_ID 
			FROM (SELECT PEX_ID, EXP_ID, RANK() OVER (PARTITION BY EXP_ID ORDER BY PEX_ID) RANGO 
				FROM PEX_PERSONAS_EXPEDIENTE WHERE USUARIOCREAR = 'CARGA_PCO' and PEX_PASE IS NULL ORDER BY EXP_ID) TMP 
			WHERE TMP.RANGO = 1); 
	UPDATE PEX_PERSONAS_EXPEDIENTE SET PEX_PASE = 0 WHERE USUARIOCREAR = 'CARGA_PCO' and PEX_PASE IS NULL; 
--	COMMIT; 
--END; 

/***************************************************/
/** CEX_PASE_FAKE **/
/***************************************************/
--BEGIN 
	UPDATE CEX_CONTRATOS_EXPEDIENTE SET CEX_PASE = 1 WHERE CEX_ID IN 
		(SELECT TMP.CEX_ID 
			FROM (SELECT CEX_ID, EXP_ID, RANK() OVER (PARTITION BY EXP_ID ORDER BY CEX_ID) RANGO 
				FROM CEX_CONTRATOS_EXPEDIENTE WHERE USUARIOCREAR = 'CARGA_PCO' and CEX_PASE IS NULL ORDER BY EXP_ID) TMP 
			WHERE TMP.RANGO = 1); 
	UPDATE CEX_CONTRATOS_EXPEDIENTE SET cex_pase = 0 WHERE USUARIOCREAR = 'CARGA_PCO' and cex_pase IS NULL; 
--	COMMIT; 
--END; 

/***************************************************/
/** ALTA_BPM_INSTANCES **/
/***************************************************/
DECLARE
BEGIN
	ALTA_BPM_INSTANCES();
END;
/

/***************************************************/
/** INSERT_TAR_TAREAS_NOTIF(LITIGIOS) **/
/***************************************************/
MERGE INTO TAR_TAREAS_NOTIFICACIONES TAR USING 
	(SELECT TAR.TAR_ID, TAR.TAR_TAREA, TAR_DESCRIPCION, TAP.TAP_DESCRIPCION 
		FROM TAR_TAREAS_NOTIFICACIONES TAR 
			JOIN TEX_TAREA_EXTERNA TEX ON TAR.TAR_ID = TEX.TAR_ID 
			JOIN TAP_TAREA_PROCEDIMIENTO TAP ON TEX.TAP_ID = TAP.TAP_ID 
		WHERE TAR_TAREA <> TAP_DESCRIPCION) TMP 
	ON (TAR.TAR_ID = TMP.TAR_ID) 
	WHEN MATCHED THEN 
		UPDATE SET TAR.TAR_TAREA = TMP.TAP_DESCRIPCION;

/***************************************************/
/** CARGA_PCO_CARTERIZACION **/
/***************************************************/
/** CARGA_PCO_CARTERIZACION(); --> PROCEDIMIENTO INEXISTENTE **/

/***************************************************/
/** UPDATEAMOS CLI_CLIENTES **/
/***************************************************/
UPDATE CLI_CLIENTES SET BORRADO=1;

/***************************************************/
/** GAA_LETRADO **/
/***************************************************/
INSERT INTO GAA_GESTOR_ADICIONAL_ASUNTO 
	(GAA_ID, ASU_ID, USD_ID, DD_TGE_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
SELECT S_GAA_GESTOR_ADICIONAL_ASUNTO.NEXTVAL, asu.ASU_ID ,USD_USUARIOS_DESPACHOS.USD_ID, 
		&master .dd_tge_tipo_gestor.DD_TGE_ID ,0, 'CARGA_PCO', SYSDATE, 0 
	FROM ASU_ASUNTOS asu 
		INNER JOIN CNV_AUX_ALTA_PRC ON asu.ASU_ID_EXTERNO=CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE 
		INNER JOIN &master .USU_USUARIOS ON USU_USUARIOS.USU_USERNAME=CNV_AUX_ALTA_PRC.COD_LETRADO 
		INNER JOIN USD_USUARIOS_DESPACHOS ON USU_USUARIOS.USU_ID=USD_USUARIOS_DESPACHOS.USU_ID 
		INNER JOIN &master .dd_tge_tipo_gestor ON dd_tge_codigo = 'LETR';
--	WHERE NOT EXISTS (SELECT 1 FROM GAA_GESTOR_ADICIONAL_ASUNTO gaa 
--						WHERE gaa.asu_id = asu.asu_id and gaa.dd_tge_id = 
--							(SELECT dd_tge_id FROM &master .dd_tge_tipo_gestor WHERE dd_tge_codigo = 'LET_PCO'));

/***************************************************/
/** GAA_LETRADO **/
/***************************************************/
INSERT INTO GAA_GESTOR_ADICIONAL_ASUNTO 
	(GAA_ID, ASU_ID, USD_ID, DD_TGE_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
SELECT S_GAA_GESTOR_ADICIONAL_ASUNTO.NEXTVAL, asu.ASU_ID ,USD_USUARIOS_DESPACHOS.USD_ID, 
		&master .dd_tge_tipo_gestor.DD_TGE_ID ,0, 'CARGA_PCO', SYSDATE, 0 
	FROM ASU_ASUNTOS asu 
		INNER JOIN CNV_AUX_ALTA_PRC ON asu.ASU_ID_EXTERNO=CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE 
		INNER JOIN &master .USU_USUARIOS ON USU_USUARIOS.USU_USERNAME=CNV_AUX_ALTA_PRC.COD_LETRADO 
		INNER JOIN USD_USUARIOS_DESPACHOS ON USU_USUARIOS.USU_ID=USD_USUARIOS_DESPACHOS.USU_ID 
		INNER JOIN &master .dd_tge_tipo_gestor ON dd_tge_codigo = 'GEXT'; 
--	WHERE NOT EXISTS (SELECT 1 FROM GAA_GESTOR_ADICIONAL_ASUNTO gaa 
--						WHERE gaa.asu_id = asu.asu_id and gaa.dd_tge_id = 
--							(SELECT dd_tge_id FROM &master .dd_tge_tipo_gestor WHERE dd_tge_codigo = 'GEXT'));


/***************************************************/
/** GAA_PROCURADOR **/
/***************************************************/
INSERT INTO GAA_GESTOR_ADICIONAL_ASUNTO 
	(GAA_ID, ASU_ID, USD_ID, DD_TGE_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
SELECT S_GAA_GESTOR_ADICIONAL_ASUNTO.NEXTVAL, asu.ASU_ID ,USD_USUARIOS_DESPACHOS.USD_ID, 
		&master .dd_tge_tipo_gestor.DD_TGE_ID ,0, 'CARGA_PCO', SYSDATE, 0 
	FROM ASU_ASUNTOS asu 
		INNER JOIN CNV_AUX_ALTA_PRC ON asu.ASU_ID_EXTERNO=CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE 
		INNER JOIN &master .USU_USUARIOS ON USU_USUARIOS.USU_USERNAME=CNV_AUX_ALTA_PRC.COD_PROCURADOR 
		INNER JOIN USD_USUARIOS_DESPACHOS ON USU_USUARIOS.USU_ID=USD_USUARIOS_DESPACHOS.USU_ID 
		INNER JOIN &master .dd_tge_tipo_gestor ON dd_tge_codigo = 'PROC' 
	WHERE NOT EXISTS (SELECT 1 FROM GAA_GESTOR_ADICIONAL_ASUNTO gaa 
						WHERE gaa.asu_id = asu.asu_id and gaa.dd_tge_id = 
							(SELECT dd_tge_id FROM &master .dd_tge_tipo_gestor WHERE dd_tge_codigo = 'PROC'));

/***************************************************/
/** GAA_PREDOC **/
/***************************************************/
INSERT INTO GAA_GESTOR_ADICIONAL_ASUNTO 
	(GAA_ID, ASU_ID, USD_ID, DD_TGE_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
SELECT S_GAA_GESTOR_ADICIONAL_ASUNTO.NEXTVAL, asu.ASU_ID ,USD_USUARIOS_DESPACHOS.USD_ID, 
		&master .dd_tge_tipo_gestor.DD_TGE_ID ,0, 'CARGA_PCO', SYSDATE, 0 
	FROM ASU_ASUNTOS asu 
		INNER JOIN CNV_AUX_ALTA_PCO cnv ON asu.ASU_ID_EXTERNO=cnv.CODIGO_PROCEDIMIENTO_NUSE 
		INNER JOIN &master .USU_USUARIOS ON USU_USUARIOS.USU_USERNAME=cnv.COD_PREPARADORDOC 
		INNER JOIN USD_USUARIOS_DESPACHOS ON USU_USUARIOS.USU_ID=USD_USUARIOS_DESPACHOS.USU_ID 
		INNER JOIN &master .dd_tge_tipo_gestor ON dd_tge_codigo = 'PREDOC' 
	WHERE NOT EXISTS (SELECT 1 FROM GAA_GESTOR_ADICIONAL_ASUNTO gaa 
						WHERE gaa.asu_id = asu.asu_id and gaa.dd_tge_id = 
							(SELECT dd_tge_id FROM &master .dd_tge_tipo_gestor WHERE dd_tge_codigo = 'PREDOC'));

/***************************************************/
/** GAA_SUP_PCO **/
/***************************************************/
INSERT INTO GAA_GESTOR_ADICIONAL_ASUNTO 
	(GAA_ID, ASU_ID, USD_ID, DD_TGE_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
SELECT S_GAA_GESTOR_ADICIONAL_ASUNTO.NEXTVAL, asu.ASU_ID ,USD_USUARIOS_DESPACHOS.USD_ID, 
		&master .dd_tge_tipo_gestor.DD_TGE_ID ,0, 'CARGA_PCO', SYSDATE, 0 
	FROM ASU_ASUNTOS asu 
		INNER JOIN CNV_AUX_ALTA_PCO cnv ON asu.ASU_ID_EXTERNO=cnv.CODIGO_PROCEDIMIENTO_NUSE 
		INNER JOIN &master .USU_USUARIOS ON USU_USUARIOS.USU_USERNAME='SUP_PCO'
		INNER JOIN USD_USUARIOS_DESPACHOS ON USU_USUARIOS.USU_ID=USD_USUARIOS_DESPACHOS.USU_ID 
		INNER JOIN &master .dd_tge_tipo_gestor ON dd_tge_codigo = 'SUP_PCO' 
	WHERE NOT EXISTS (SELECT 1 FROM GAA_GESTOR_ADICIONAL_ASUNTO gaa 
						WHERE gaa.asu_id = asu.asu_id and gaa.dd_tge_id = 
							(SELECT dd_tge_id FROM &master .dd_tge_tipo_gestor WHERE dd_tge_codigo = 'SUP_PCO'));

/***************************************************/
/** GAH_LETRADO **/
/***************************************************/
INSERT INTO GAH_GESTOR_ADICIONAL_HISTORICO gah 
	(gah.GAH_ID, gah.GAH_ASU_ID, gah.GAH_GESTOR_ID, gah.GAH_FECHA_DESDE, gah.GAH_TIPO_GESTOR_ID, usuariocrear, fechacrear)
SELECT s_GAH_GESTOR_ADIC_HISTORICO.NEXTVAL ,asu.ASU_ID ,USD_USUARIOS_DESPACHOS.USD_ID ,sysdate, &master .dd_tge_tipo_gestor.DD_TGE_ID ,'CARGA_PCO', SYSDATE 
	FROM ASU_ASUNTOS asu 
		INNER JOIN CNV_AUX_ALTA_PRC ON asu.ASU_ID_EXTERNO=CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE 
		INNER JOIN &master .USU_USUARIOS ON USU_USUARIOS.USU_USERNAME=CNV_AUX_ALTA_PRC.COD_LETRADO 
		INNER JOIN USD_USUARIOS_DESPACHOS ON USU_USUARIOS.USU_ID=USD_USUARIOS_DESPACHOS.USU_ID 
		INNER JOIN &master .dd_tge_tipo_gestor ON dd_tge_codigo = 'LETR' 
	WHERE NOT EXISTS (SELECT 1 FROM GAH_GESTOR_ADICIONAL_HISTORICO gaa 
						WHERE gaa.gah_asu_id = asu.asu_id and gaa.GAH_TIPO_GESTOR_ID = 
							(SELECT dd_tge_id FROM &master .dd_tge_tipo_gestor WHERE dd_tge_codigo = 'LETR'));

/***************************************************/
/** GAH_PROCURADOR **/
/***************************************************/
INSERT INTO GAH_GESTOR_ADICIONAL_HISTORICO gah 
	(gah.GAH_ID, gah.GAH_ASU_ID, gah.GAH_GESTOR_ID, gah.GAH_FECHA_DESDE, gah.GAH_TIPO_GESTOR_ID, usuariocrear, fechacrear)
SELECT s_GAH_GESTOR_ADIC_HISTORICO.NEXTVAL ,asu.ASU_ID ,USD_USUARIOS_DESPACHOS.USD_ID ,sysdate, &master .dd_tge_tipo_gestor.DD_TGE_ID ,'CARGA_PCO', SYSDATE 
	FROM ASU_ASUNTOS asu 
		INNER JOIN CNV_AUX_ALTA_PRC ON asu.ASU_ID_EXTERNO=CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE 
		INNER JOIN &master .USU_USUARIOS ON USU_USUARIOS.USU_USERNAME=CNV_AUX_ALTA_PRC.COD_PROCURADOR 
		INNER JOIN USD_USUARIOS_DESPACHOS ON USU_USUARIOS.USU_ID=USD_USUARIOS_DESPACHOS.USU_ID 
		INNER JOIN &master .dd_tge_tipo_gestor ON dd_tge_codigo = 'PROC' 
	WHERE NOT EXISTS (SELECT 1 FROM GAH_GESTOR_ADICIONAL_HISTORICO gaa 
						WHERE gaa.gah_asu_id = asu.asu_id and gaa.GAH_TIPO_GESTOR_ID = 
							(SELECT dd_tge_id FROM &master .dd_tge_tipo_gestor WHERE dd_tge_codigo = 'PROC'));

/***************************************************/
/** GAH_PREDOC **/
/***************************************************/
INSERT INTO GAH_GESTOR_ADICIONAL_HISTORICO gah 
	(gah.GAH_ID, gah.GAH_ASU_ID, gah.GAH_GESTOR_ID, gah.GAH_FECHA_DESDE, gah.GAH_TIPO_GESTOR_ID, usuariocrear, fechacrear)
SELECT s_GAH_GESTOR_ADIC_HISTORICO.NEXTVAL ,asu.ASU_ID ,USD_USUARIOS_DESPACHOS.USD_ID ,sysdate, &master .dd_tge_tipo_gestor.DD_TGE_ID ,'CARGA_PCO', SYSDATE 
	FROM ASU_ASUNTOS asu 
		INNER JOIN CNV_AUX_ALTA_PRC CNV ON asu.ASU_ID_EXTERNO=CNV.CODIGO_PROCEDIMIENTO_NUSE 
		INNER JOIN &master .USU_USUARIOS ON USU_USUARIOS.USU_USERNAME=CNV.COD_LETRADO 
		INNER JOIN USD_USUARIOS_DESPACHOS ON USU_USUARIOS.USU_ID=USD_USUARIOS_DESPACHOS.USU_ID  AND USD_GESTOR_DEFECTO=1
		INNER JOIN &master .dd_tge_tipo_gestor ON dd_tge_codigo = 'PREDOC' 
	WHERE NOT EXISTS (SELECT 1 FROM GAH_GESTOR_ADICIONAL_HISTORICO gaa 
						WHERE gaa.gah_asu_id = asu.asu_id and gaa.GAH_TIPO_GESTOR_ID = 
							(SELECT dd_tge_id FROM &master .dd_tge_tipo_gestor WHERE dd_tge_codigo = 'PREDOC'));

/***************************************************/
/** GAH_PREDOC **/
/***************************************************/
INSERT INTO GAH_GESTOR_ADICIONAL_HISTORICO gah 
	(gah.GAH_ID, gah.GAH_ASU_ID, gah.GAH_GESTOR_ID, gah.GAH_FECHA_DESDE, gah.GAH_TIPO_GESTOR_ID, usuariocrear, fechacrear)
SELECT s_GAH_GESTOR_ADIC_HISTORICO.NEXTVAL ,asu.ASU_ID ,USD_USUARIOS_DESPACHOS.USD_ID ,sysdate, &master .dd_tge_tipo_gestor.DD_TGE_ID ,'CARGA_PCO', SYSDATE 
	FROM ASU_ASUNTOS asu 
		INNER JOIN CNV_AUX_ALTA_PRC CNV ON asu.ASU_ID_EXTERNO=CNV.CODIGO_PROCEDIMIENTO_NUSE 
		INNER JOIN &master .USU_USUARIOS ON USU_USUARIOS.USU_USERNAME='SUP_PCO' 
		INNER JOIN USD_USUARIOS_DESPACHOS ON USU_USUARIOS.USU_ID=USD_USUARIOS_DESPACHOS.USU_ID  AND USD_GESTOR_DEFECTO=1
		INNER JOIN &master .dd_tge_tipo_gestor ON dd_tge_codigo = 'SUP_PCO' 
	WHERE NOT EXISTS (SELECT 1 FROM GAH_GESTOR_ADICIONAL_HISTORICO gaa 
						WHERE gaa.gah_asu_id = asu.asu_id and gaa.GAH_TIPO_GESTOR_ID = 
							(SELECT dd_tge_id FROM &master .dd_tge_tipo_gestor WHERE dd_tge_codigo = 'SUP_PCO'));

/***************************************************/
/** UPDATE TAR_TAREAS FECHA VENCIMIENTO **/
/***************************************************/
UPDATE TAR_TAREAS_NOTIFICACIONES TARI 
	SET TARI.TAR_FECHA_VENC = TARI.FECHACREAR + 3, TARI.TAR_FECHA_VENC_REAL = TARI.FECHACREAR + 3 
	WHERE TARI.TAR_ID IN 
		(SELECT TAR.TAR_ID FROM TAR_TAREAS_NOTIFICACIONES TAR
			WHERE TAR.TAR_FECHA_FIN IS NULL 
				AND TAR.TAR_FECHA_VENC IS NULL 
				AND TAR.PRC_ID IS NOT NULL 
				AND TAR.TAR_TAREA IN ('REGISTRAR PUBLICACIÓN EN EL BOE'));

/***************************************************/
/** UPDATE TAR_TAREAS FECHA VENCIMIENTO **/
/***************************************************/
UPDATE TAR_TAREAS_NOTIFICACIONES TARI 
	SET TARI.TAR_FECHA_VENC = TARI.FECHACREAR + 3, TARI.TAR_FECHA_VENC_REAL = TARI.FECHACREAR + 3 
	WHERE TARI.TAR_ID IN 
		(SELECT TAR.TAR_ID FROM TAR_TAREAS_NOTIFICACIONES TAR 
			WHERE TAR.TAR_FECHA_FIN IS NULL 
				AND TAR.TAR_FECHA_VENC IS NULL 
				AND TAR.PRC_ID IS NOT NULL 
				AND TAR.TAR_TAREA IN ('REGISTRAR ACEPTACIÓN DEL ASUNTO'));

/***************************************************/
/** UPDATE ASU_NOMBRE EN ASU_ASUNTOS **/
/***************************************************/
MERGE INTO asu_asuntos asu USING 
  (select tmp_asu.asu_id, tmp_asu.num_contrato || '-' || tmp_asu.nom_persona nuevo_nombre from
  (select distinct asu.asu_id, cnt_contrato num_contrato, tmp_per.nom_persona, TMP_DEUDA.cnt_id, TMP_DEUDA.deuda, 
    ROW_NUMBER () OVER (PARTITION BY asu.asu_id ORDER BY TMP_DEUDA.deuda DESC) num_fila
  from cnt_contratos cnt
  inner join cex_contratos_expediente cex on cex.cnt_id=cnt.cnt_id
  inner join prc_cex pc on pc.cex_id=cex.cex_id
  inner join prc_procedimientos prc on prc.prc_id=pc.prc_id
  inner join asu_asuntos asu on asu.asu_id=prc.asu_id
  inner join ( SELECT CNT_ID, 
                (MOV_POS_VIVA_NO_VENCIDA + MOV_POS_VIVA_VENCIDA + MOV_INT_REMUNERATORIOS + MOV_INT_MORATORIOS + MOV_GASTOS + MOV_COMISIONES + MOV_IMPUESTOS) DEUDA 
                  FROM (SELECT mov.CNT_ID ,ROW_NUMBER () OVER (PARTITION BY mov.cnt_id ORDER BY mov.mov_fecha_extraccion DESC) rn ,
                    MOV.MOV_POS_VIVA_NO_VENCIDA,MOV.MOV_POS_VIVA_VENCIDA ,MOV.MOV_INT_REMUNERATORIOS ,MOV.MOV_INT_MORATORIOS ,
                    MOV.MOV_GASTOS ,MOV.MOV_COMISIONES ,MOV.MOV_IMPUESTOS FROM MOV_MOVIMIENTOS mov) tmp_mov 
                  WHERE rn = 1) TMP_DEUDA on tmp_deuda.cnt_id=cnt.cnt_id
  inner join ( SELECT /*+ MATERIALIZE */ (PER_DOC_ID || ' ' || PER_NOMBRE || ' ' || PER_APELLIDO1 || ' ' || PER_APELLIDO2) NOM_PERSONA, 
                CNT_ID
          FROM 
            ( SELECT PER.PER_DOC_ID, PER.PER_NOMBRE, PER.PER_APELLIDO1, PER.PER_APELLIDO2, 
                ROW_NUMBER() OVER (PARTITION BY CPE.CNT_ID ORDER BY CPE.CPE_ORDEN ASC) RN_MIN_ORDEN, CPE.CNT_ID 
                    FROM CPE_CONTRATOS_PERSONAS CPE 
                    INNER JOIN DD_TIN_TIPO_INTERVENCION TIN ON CPE.DD_TIN_ID = TIN.DD_TIN_ID AND TIN.DD_TIN_TITULAR = 1 
                    INNER JOIN PER_PERSONAS PER ON CPE.PER_ID = PER.PER_ID) 
              WHERE RN_MIN_ORDEN = 1) tmp_per on tmp_per.cnt_id=cnt.cnt_id                
  where asu.usuariocrear='CARGA_PCO'
  ORDER BY asu.asu_id, TMP_DEUDA.cnt_id, TMP_DEUDA.deuda desc) tmp_asu
  where num_fila=1) tmp_asu2
ON (asu.asu_id=tmp_asu2.asu_id)
WHEN MATCHED THEN 
	UPDATE SET asu.asu_nombre = substr(asu.asu_id || '-' || tmp_asu2.nuevo_nombre,1,50);

/***************************************************/
/** UPDATE TAC_ID EN PRC_PROCEDIMIENTOS **/
/***************************************************/
UPDATE prc_procedimientos 
	SET dd_tac_id = (SELECT dd_tac_id FROM dd_tac_tipo_actuacion WHERE dd_tac_codigo = 'CO') 
	WHERE prc_id IN 
		(SELECT prc_id FROM prc_procedimientos 
			WHERE dd_tac_id IS NULL 
			and dd_tpo_id IN (SELECT DD_TPO_ID FROM DD_TPO_TIPO_PROCEDIMIENTO WHERE DD_TPO_CODIGO='H009'));

/***************************************************/
/** UPDATE TAC_ID EN PRC_PROCEDIMIENTOS 2 **/
/***************************************************/
UPDATE prc_procedimientos 
	SET dd_tac_id = (SELECT dd_tac_id FROM dd_tac_tipo_actuacion WHERE dd_tac_codigo = '03') 
	WHERE prc_id IN 
		(SELECT prc_id FROM prc_procedimientos 
				WHERE dd_tac_id IS NULL 
				and dd_tpo_id IN (SELECT DD_TPO_ID FROM DD_TPO_TIPO_PROCEDIMIENTO WHERE DD_TPO_CODIGO='P420'));

/***************************************************/
/** UPDATE TAC_ID EN PRC_PROCEDIMIENTOS PRECONTENCIOSO **/
/***************************************************/
UPDATE prc_procedimientos 
	SET dd_tac_id = (SELECT dd_tac_id FROM dd_tac_tipo_actuacion WHERE dd_tac_codigo = 'PCO') 
	WHERE prc_id IN 
		(SELECT prc_id FROM prc_procedimientos 
				WHERE dd_tac_id IS NULL 
				and dd_tpo_id IN (SELECT DD_TPO_ID FROM DD_TPO_TIPO_PROCEDIMIENTO WHERE DD_TPO_CODIGO='PCO'));


/**********************************************************************************************************************************/
/*** PARTICULAR DE PRECONTENCIOSO *************************************************************************************************/
/**********************************************************************************************************************************/

-----------------------------------------------------
-- DDL_058_ENTITY01_CREATE_TABLE_CNV_AUX_ALTA_PCO.sql
-----------------------------------------------------
-- NUEVA TABLA Y NUEVAS COLUMNAS NECESARIAS PARA CARGA DE PRECONTENCIOSO
------------------------------------------------------------------------
-- CNV_AUX_ALTA_PCO:
--  	CODIGO_PROCEDIMIENTO_NUSE
--  	COD_PREPARADORDOC
-- 		PRETURNADO
-- 		TIPO_PREPARACION
------------------------------------------------------------------------
 --  CREATE TABLE "HAYA01"."CNV_AUX_ALTA_PCO" 
 --   (	"CODIGO_PROCEDIMIENTO_NUSE" NUMBER(16,0) NOT NULL ENABLE, 
	-- "COD_PREPARADORDOC" VARCHAR2(15 CHAR), 
	-- "PRETURNADO" NUMBER(1,0) DEFAULT 1, 
	-- "TIPO_PREPARACION" VARCHAR2(2 CHAR) DEFAULT 'CO', 
	--  PRIMARY KEY ("CODIGO_PROCEDIMIENTO_NUSE")
 --  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
 --  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
 --  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
 --  TABLESPACE "HAYA01"  ENABLE
 --   ) SEGMENT CREATION IMMEDIATE 
 --  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
 --  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
 --  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
 --  TABLESPACE "HAYA01" ;


/***************************************************/
/** INSERT_PCO_PRC_PROCEDIMIENTOS **/
/***************************************************/

-- PCO_PRC_PROCEDIMIENTOS
-- 		"PCO_PRC_TIPO_PRC_PROP" (NUMBER(16,0) <-- CNV_AUX_ALTA_PRC.TIPO_PROCEDIMIENTO
-- 		"PCO_PRC_TIPO_PRC_INICIADO" (NUMBER(16,0)) <-- null
-- 		"PCO_PRC_PRETURNADO" <-- nuevo campo (POSIBLES VALORES: 0 - POSTTURNADO, 1 - PRETURNADO)
-- 		"PCO_PRC_NUM_EXP_EXT" VARCHAR2(50 CHAR), <-- CNV_AUX_ALTA_PRC.CODIGO_PROCEDIMIENTO_NUSE
-- 		"PCO_PRC_NOM_EXP_JUD" VARCHAR2(50 CHAR), <-- CNV_AUX_ALTA_PRC.NUMERO_EXP_NUSE
-- 		"PCO_PRC_CNT_PRINCIPAL" NUMBER(16,0), <-- calcular OBTENER CONTRATO PRINCIPAL DE CNV_AUX_ALTA_PRC_CNT (pendiente)
-- 		"PCO_PRC_NUM_EXP_INT" VARCHAR2(50 CHAR), <-- calculado (pendiente)
-- 		"DD_PCO_PTP_ID" NUMBER(16,0), DE DD_PCO_PRC_TIPO_PREPARACION.DD_PCO_PTP_CODIGO (POSIBLES VALORES: COMPLEJO -> CO, SENCILLO -> SE)
-- 		"USUARIOCREAR" VARCHAR2(10 CHAR) NOT NULL ENABLE, 
-- 		"FECHACREAR" TIMESTAMP (6) NOT NULL ENABLE, 

INSERT INTO PCO_PRC_PROCEDIMIENTOS
	(PCO_PRC_ID, PRC_ID, PCO_PRC_TIPO_PRC_PROP, PCO_PRC_TIPO_PRC_INICIADO, PCO_PRC_PRETURNADO, 
		PCO_PRC_NUM_EXP_EXT, PCO_PRC_NOM_EXP_JUD, PCO_PRC_CNT_PRINCIPAL, PCO_PRC_NUM_EXP_INT, DD_PCO_PTP_ID, 
		USUARIOCREAR, FECHACREAR)
SELECT S_PCO_PRC_PROCEDIMIENTOS.NEXTVAL, PRO.PRC_ID, TPO.DD_TPO_ID, null, PCO.PRETURNADO, 
		PRC.CODIGO_PROCEDIMIENTO_NUSE, PRC.NUMERO_EXP_NUSE, null, null, TPR.DD_PCO_PTP_ID,
		'CARGA_PCO', SYSDATE
	FROM CNV_AUX_ALTA_PRC PRC 
		LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		LEFT JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		LEFT JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID
		LEFT JOIN DD_TPO_TIPO_PROCEDIMIENTO TPO ON TPO.DD_TPO_CODIGO=DECODE(PRC.TIPO_PROCEDIMIENTO,'CONCURSO','H009','P420')
		LEFT JOIN DD_PCO_PRC_TIPO_PREPARACION TPR ON PCO.TIPO_PREPARACION=TPR.DD_PCO_PTP_CODIGO
	WHERE NOT EXISTS (SELECT 1 FROM PCO_PRC_PROCEDIMIENTOS P2 WHERE P2.PCO_PRC_NUM_EXP_EXT=PCO.CODIGO_PROCEDIMIENTO_NUSE)
		AND  PCO.CODIGO_PROCEDIMIENTO_NUSE IS NOT NULL;

/***************************************************/
/** INSERT_PCO_PRC_HEP_HISTOR_EST_PREP **/
/***************************************************/

-- PCO_PRC_HEP_HISTOR_EST_PREP
-- 	insertar en estado inicial
-- 		"PCO_PRC_HEP_ID" NUMBER(16,0), <-- ID secuencia
-- 		"PCO_PRC_ID" NUMBER(16,0) NOT NULL ENABLE, <-- id de PCO_PRC_PROCEDIMIENTOS
-- 		"DD_PCO_PEP_ID" NUMBER(16,0) NOT NULL ENABLE, (id diccionario DD_PCO_PRC_ESTADO_PREPARACION) <-- código estado inicial 'PT' (preturnado) o 'PR' (postturnado)
-- 		"PCO_PRC_HEP_FECHA_INCIO" TIMESTAMP (6), <-- sysdate
-- 		"USUARIOCREAR" VARCHAR2(10 CHAR) NOT NULL ENABLE, 
-- 		"FECHACREAR" TIMESTAMP (6) NOT NULL ENABLE, 

INSERT INTO PCO_PRC_HEP_HISTOR_EST_PREP
	(PCO_PRC_HEP_ID, PCO_PRC_ID, DD_PCO_PEP_ID, PCO_PRC_HEP_FECHA_INCIO, USUARIOCREAR, FECHACREAR)
SELECT S_PCO_PRC_HEP_HIST_EST_PREP.NEXTVAL, PRO.PCO_PRC_ID, PEP.DD_PCO_PEP_ID, SYSDATE,
		'CARGA_PCO', SYSDATE
	FROM CNV_AUX_ALTA_PRC PRC 
		LEFT JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		LEFT JOIN PCO_PRC_PROCEDIMIENTOS PRO ON PRO.PCO_PRC_NUM_EXP_EXT=PCO.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN DD_PCO_PRC_ESTADO_PREPARACION PEP ON PEP.DD_PCO_PEP_CODIGO = DECODE(PCO.PRETURNADO, 1, 'PT', 'PR')
	WHERE PRO.PCO_PRC_ID NOT IN (SELECT PCO_PRC_ID FROM PCO_PRC_HEP_HISTOR_EST_PREP)
		AND PRO.PCO_PRC_ID IS NOT NULL;

-----------------------------------------------------------------
-- DDL_059_ENTITY01_CREATE_TABLE_PCO_CDE_CONF_TFA_TIPOENTIDAD.sql
-----------------------------------------------------------------
 
--TABLA DE CONFIGURACIÓN --nueva creación
-- PCO_CDE_CONF_TFA_TIPOENTIDAD
-- 		"PCO_CDE_ID" NUMBER(16,0) NOT NULL ENABLE, <-- ID secuencia
-- 		"DD_PCO_DTD_ID" NUMBER(16,0) NOT NULL ENABLE, <-- FK a DD_PCO_DOC_UNIDADGESTION
-- 		"DD_TPO_ID" NUMBER(16,0) NOT NULL ENABLE, -- FK a DD_TPO_TIPO_PROCEDIMIENTO (obtener a partir de cnv_aux_alta_prc.tipo_procedimiento)
-- 		"DD_TFA_ID" NUMBER(16,0) NOT NULL ENABLE, -- FK a DD_TFA_FICHERO_ADJUNTO 

-- PCO_DOC_DOCUMENTOS
-- 	tabla de configuración por tipo de entidad
-- 		"PCO_DOC_PDD_ID" NUMBER(16,0) NOT NULL ENABLE, <-- ID secuencia
-- 		"PCO_PRC_ID" NUMBER(16,0) NOT NULL ENABLE, <-- id de PCO_PRC_PROCEDIMIENTOS
-- 		"DD_PCO_DED_ID" NUMBER(16,0) NOT NULL ENABLE, DD_PCO_DOC_ESTADO <-- código estado inicial 'PS' (pendiente solicitar)
-- 		"DD_PCO_DTD_ID" NUMBER(16,0) NOT NULL ENABLE, DD_PCO_DOC_UNIDADGESTION <-- según tipo de entidad: 'CO' (contrato), 'PE' (persona), 'BI' (bien)
-- 		"DD_TFA_ID" NUMBER(16,0) NOT NULL ENABLE, DD_TFA_FICHERO_ADJUNTO <-- id del código del tipo de adjunto que corresponda según configuración PCO_CDE_CONF_TFA_TIPOENTIDAD
-- 		"PCO_DOC_PDD_UG_ID" NUMBER(16,0) NOT NULL ENABLE, <-- id de la ENTIDAD (contrato, persona o bien)
-- 		"PCO_DOC_PDD_UG_DESC" VARCHAR2(50 CHAR), <-- nombre o descripción de la entidad (contrato, persona o bien)
-- 		"USUARIOCREAR" VARCHAR2(10 CHAR) NOT NULL ENABLE, 
-- 		"FECHACREAR" TIMESTAMP (6) NOT NULL ENABLE, 

/***************************************************/
/** INSERT_PCO_DOC_DOCUMENTOS (CONTRATOS) **********/
/***************************************************/
INSERT INTO PCO_DOC_DOCUMENTOS
	(PCO_DOC_PDD_ID, PCO_PRC_ID, DD_PCO_DED_ID, DD_PCO_DTD_ID, DD_TFA_ID, PCO_DOC_PDD_UG_ID, PCO_DOC_PDD_UG_DESC, USUARIOCREAR, FECHACREAR)
SELECT S_PCO_DOC_DOCUMENTOS.NEXTVAL, PPCO.PCO_PRC_ID, DED.DD_PCO_DED_ID, DTD.DD_PCO_DTD_ID, 
		CONF.DD_TFA_ID, CNT.CNT_ID, CNT.CNT_CONTRATO, 
		'CARGA_PCO', SYSDATE
	FROM CNV_AUX_ALTA_PRC PRC 
		INNER JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN DD_PCO_DOC_ESTADO DED ON DED.DD_PCO_DED_CODIGO = 'PS'
		INNER JOIN DD_PCO_DOC_UNIDADGESTION DTD ON DTD.DD_PCO_DTD_CODIGO = 'CO'
		INNER JOIN CNV_AUX_ALTA_PRC_CNT C ON C.CODIGO_PROCEDIMIENTO=PRC.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN CNV_TMP_CNT_ID TCNT ON C.NUMERO_CONTRATO=TCNT.NUMERO_CONTRATO
		INNER JOIN CNT_CONTRATOS CNT ON CNT.CNT_ID=TCNT.CNT_ID
		INNER JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		INNER JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID
		INNER JOIN PCO_PRC_PROCEDIMIENTOS PPCO ON PPCO.PRC_ID=PRO.PRC_ID
		INNER JOIN PCO_CDE_CONF_TFA_TIPOENTIDAD CONF ON CONF.DD_PCO_DTD_ID=DTD.DD_PCO_DTD_ID AND CONF.DD_TPO_ID=PPCO.PCO_PRC_TIPO_PRC_PROP
	WHERE PPCO.PCO_PRC_ID NOT IN (SELECT PCO_PRC_ID FROM PCO_DOC_DOCUMENTOS);

/***************************************************/
/** INSERT_PCO_DOC_DOCUMENTOS (PERSONAS) ***********/
/***************************************************/
INSERT INTO PCO_DOC_DOCUMENTOS
	(PCO_DOC_PDD_ID, PCO_PRC_ID, DD_PCO_DED_ID, DD_PCO_DTD_ID, DD_TFA_ID, PCO_DOC_PDD_UG_ID, PCO_DOC_PDD_UG_DESC, USUARIOCREAR, FECHACREAR)
SELECT S_PCO_DOC_DOCUMENTOS.NEXTVAL, PPCO.PCO_PRC_ID, DED.DD_PCO_DED_ID, DTD.DD_PCO_DTD_ID, 
		CONF.DD_TFA_ID, PER.PER_ID,  PER.PER_NOM50,
		'CARGA_PCO', SYSDATE
	FROM CNV_AUX_ALTA_PRC PRC 
		INNER JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN DD_PCO_DOC_ESTADO DED ON DED.DD_PCO_DED_CODIGO = 'PS'
		INNER JOIN DD_PCO_DOC_UNIDADGESTION DTD ON DTD.DD_PCO_DTD_CODIGO = 'PE'
		INNER JOIN CNV_AUX_ALTA_PRC_PER P ON P.CODIGO_PROCEDIMIENTO=PRC.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN CNV_TMP_PER_ID TPER ON P.CODIGO_PERSONA=TPER.CODIGO_PERSONA 
		INNER JOIN PER_PERSONAS PER ON PER.PER_ID=TPER.PER_ID
		INNER JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		INNER JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID
		INNER JOIN PCO_PRC_PROCEDIMIENTOS PPCO ON PPCO.PRC_ID=PRO.PRC_ID
		INNER JOIN PCO_CDE_CONF_TFA_TIPOENTIDAD CONF ON CONF.DD_PCO_DTD_ID=DTD.DD_PCO_DTD_ID AND CONF.DD_TPO_ID=PPCO.PCO_PRC_TIPO_PRC_PROP
	WHERE not exists (SELECT 1 FROM PCO_DOC_DOCUMENTOS PCO2 WHERE PCO2.PCO_PRC_ID=PPCO.PCO_PRC_ID AND PCO2.dd_pco_ded_id = 
    	(SELECT DD_PCO_DED_ID FROM DD_PCO_DOC_UNIDADGESTION WHERE DD_PCO_DED_CODIGO='PE'));

/***************************************************/
/** INSERT_PCO_DOC_DOCUMENTOS (BIENES) *************/
/***************************************************/
--no disponible (depende de otro proceso: carga de bienes)

/***************************************************/
/** PCO_LIQ_LIQUIDACIONES **************************/
/***************************************************/

-- PCO_LIQ_LIQUIDACIONES
-- 	una liquidación por CONTRATO
-- 		"PCO_LIQ_ID" NUMBER(16,0), <-- ID secuencia
-- 		"PCO_PRC_ID" NUMBER(16,0) NOT NULL ENABLE, <-- id de PCO_PRC_PROCEDIMIENTOS
-- 		"DD_PCO_LIQ_ID" NUMBER(16,0) NOT NULL ENABLE, DD_PCO_LIQ_ESTADO <-- código estado inicial: 'PEN' (pendiente)
-- 		"CNT_ID" NUMBER(16,0) NOT NULL ENABLE, <-- id de CONTRATO
-- 		"USUARIOCREAR" VARCHAR2(10 CHAR) NOT NULL ENABLE, 
-- 		"FECHACREAR" TIMESTAMP (6) NOT NULL ENABLE, 

INSERT INTO PCO_LIQ_LIQUIDACIONES
	(PCO_LIQ_ID, PCO_PRC_ID, DD_PCO_LIQ_ID, CNT_ID, USUARIOCREAR, FECHACREAR)
SELECT S_PCO_LIQ_LIQUIDACIONES.NEXTVAL, PPCO.PCO_PRC_ID, LE.DD_PCO_LIQ_ID, 
		CNT.CNT_ID, 'CARGA_PCO', SYSDATE
	FROM CNV_AUX_ALTA_PRC PRC 
		INNER JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN DD_PCO_LIQ_ESTADO LE ON LE.DD_PCO_LIQ_CODIGO = 'PEN'
		INNER JOIN CNV_AUX_ALTA_PRC_CNT C ON C.CODIGO_PROCEDIMIENTO=PRC.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN CNV_TMP_CNT_ID TCNT ON C.NUMERO_CONTRATO=TCNT.NUMERO_CONTRATO
		INNER JOIN CNT_CONTRATOS CNT ON CNT.CNT_ID=TCNT.CNT_ID
		INNER JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		INNER JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID
		INNER JOIN PCO_PRC_PROCEDIMIENTOS PPCO ON PPCO.PRC_ID=PRO.PRC_ID
	WHERE PPCO.PCO_PRC_ID NOT IN (SELECT PCO_PRC_ID FROM PCO_LIQ_LIQUIDACIONES);

/***************************************************/
/** PCO_BUR_BUROFAX ********************************/
/***************************************************/

-- PCO_BUR_BUROFAX
-- 	un buforax por contrato/persona
-- 		"PCO_BUR_BUROFAX_ID" NUMBER(16,0),  <-- ID secuencia
-- 		"PCO_PRC_ID" NUMBER(16,0) NOT NULL ENABLE, <-- id de PCO_PRC_PROCEDIMIENTOS
-- 		"PER_ID" NUMBER(16,0) NOT NULL ENABLE, <-- ID de persona
-- 		"DD_PCO_BFE_ID" NUMBER(16,0) NOT NULL ENABLE, DD_PCO_BFE_ESTADO <-- código estado inicial: 'KO' (no notificado)
-- 		"CNT_ID" NUMBER(16,0), <-- ID de contrato
-- 		"DD_TIN_ID" NUMBER(16,0), DD_TIN_TIPO_INTERVENCION <-- tipo de intervención que relaciona el contrato con la persona
-- 		"USUARIOCREAR" VARCHAR2(10 CHAR) NOT NULL ENABLE, 
-- 		"FECHACREAR" TIMESTAMP (6) NOT NULL ENABLE, 

INSERT INTO PCO_BUR_BUROFAX
	(PCO_BUR_BUROFAX_ID, PCO_PRC_ID, PER_ID, DD_PCO_BFE_ID, CNT_ID, DD_TIN_ID, USUARIOCREAR, FECHACREAR)
SELECT S_PCO_BUR_BUROFAX_ID.NEXTVAL, PPCO.PCO_PRC_ID, CPE.PER_ID, BFE.DD_PCO_BFE_ID, 
		CPE.CNT_ID, CPE.DD_TIN_ID, 'CARGA_PCO', SYSDATE
	FROM CNV_AUX_ALTA_PRC PRC 
		INNER JOIN CNV_AUX_ALTA_PCO PCO ON PRC.CODIGO_PROCEDIMIENTO_NUSE=PCO.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN CNV_AUX_ALTA_PRC_CNT C ON C.CODIGO_PROCEDIMIENTO=PRC.CODIGO_PROCEDIMIENTO_NUSE
		INNER JOIN CNV_TMP_CNT_ID TCNT ON C.NUMERO_CONTRATO=TCNT.NUMERO_CONTRATO
		INNER JOIN CPE_CONTRATOS_PERSONAS CPE ON CPE.CNT_ID=TCNT.CNT_ID
		INNER JOIN DD_PCO_BFE_ESTADO BFE ON BFE.DD_PCO_BFE_CODIGO='KO'
		INNER JOIN ASU_ASUNTOS ASU ON PRC.CODIGO_PROCEDIMIENTO_NUSE=ASU.ASU_ID_EXTERNO 
		INNER JOIN PRC_PROCEDIMIENTOS PRO ON PRO.ASU_ID=ASU.ASU_ID
		INNER JOIN PCO_PRC_PROCEDIMIENTOS PPCO ON PPCO.PRC_ID=PRO.PRC_ID
	WHERE PPCO.PCO_PRC_ID NOT IN (SELECT PCO_PRC_ID FROM PCO_BUR_BUROFAX);


/***************************************************/
/** MERGE_TEXT_TAREA_EXTERNA ***********************/
/***************************************************/

merge into tex_tarea_externa te
using (select tex.tex_id, pi.roottoken_ 
    from prc_procedimientos p
    inner join &master .jbpm_processinstance pi on pi.id_=p.prc_process_bpm
    inner join tar_tareas_notificaciones tar on tar.prc_id=p.prc_id
    inner join tex_tarea_externa tex on tex.tar_id=tar.tar_id
    where p.usuariocrear='CARGA_PCO') q
on (q.tex_id=te.tex_id)
when matched THEN
  update set te.tex_token_id_bpm=q.roottoken_;

COMMIT;

--set echo on
--REM corrigiendo número de contrato
--set echo off
--UPDATE CNT_CONTRATOS SET CNT_CONTRATO = '000001140300071' || TRIM(CNT_CONTRATO) || '000000000000000'
--where cnt_contrato LIKE '1000000%';

COMMIT;
