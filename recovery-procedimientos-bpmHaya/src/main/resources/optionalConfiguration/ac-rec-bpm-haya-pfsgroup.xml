<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
               http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
               http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
    default-autowire="byName">

	<!-- Beans,handlers,Managers ... --> 
	<bean id="faseLiquidacionLeaveActionHandler" class="es.pfsgroup.recovery.haya.procedimientos.PROFaseLiquidacionLeaveActionHandler" />
	<bean id="sarebEndActionHandler" class="es.pfsgroup.recovery.haya.procedimientos.SarebEndActionHandler"></bean>
	<bean id="adjudicacionHayaLeaveActionHandler" class="es.pfsgroup.procedimientos.adjudicacion.AdjudicacionHayaLeaveActionHandler"></bean>
	<bean id="ocupantesHayaEndActionHandler" class="es.pfsgroup.procedimientos.adjudicacion.OcupantesHayaEndActionHandler"></bean>
	<bean id="ocupantesHayaLeaveActionHandler" class="es.pfsgroup.procedimientos.adjudicacion.OcupantesHayaLeaveActionHandler"></bean>	
 	<bean id="subastaV4HayaLeaveActionHandler" class="es.pfsgroup.procedimientos.subasta.SubastaV4HayaLeaveActionHandler"></bean> 
 	<bean id="subastaV4HayaEnterActionHandler" class="es.pfsgroup.procedimientos.subasta.SubastaHayaEnterActionHandler"></bean>		
 	<bean id="subastaV4HayaConcursalEnterActionHandler" class="es.pfsgroup.procedimientos.subasta.SubastaV4HayaConcursalEnterActionHandler"></bean>
 	<bean id="subastaV4HayaConcursalLeaveActionHandler" class="es.pfsgroup.procedimientos.subasta.SubastaV4HayaConcursalLeaveActionHandler"></bean>
 	<bean id="subastaV4HayaEjecucionNotarialEnterActionHandler" class="es.pfsgroup.procedimientos.subasta.SubastaV4HayaEjecucionNotarialEnterActionHandler"></bean>
 	<bean id="subastaV4HayaEjecucionNotarialLeaveActionHandler" class="es.pfsgroup.procedimientos.subasta.SubastaV4HayaEjecucionNotarialLeaveActionHandler"></bean>
 	<bean id="hipotecarioHayaLeaveActionHandler" class="es.pfsgroup.procedimientos.hipotecario.HipotecarioHayaLeaveActionHandler"></bean>
 	<bean id="estamosADosMesesHandler" class="es.pfsgroup.procedimientos.moratoria.EstamosADosMesesHandler"></bean>
 	<bean id="subastaSolicitarNumActivoHandler" class="es.pfsgroup.procedimientos.subasta.SubastaSolicitarNumActivoHandler"></bean>
 	<bean id="subastaSolicitarTasacionHandler" class="es.pfsgroup.procedimientos.subasta.SubastaSolicitarTasacionHandler"></bean> 	

 	    
	<!-- BPM activos -->
	<!-- Cambios Rober -->
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/procedimientoHipotecario/haya_procedimientoHipotecario.xml" p:version="-1"/>	
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteAdjudicacion/haya_tramiteAdjudicacionV4.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteCesionRemate/haya_tramiteCesionRemateV4.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteCostas/haya_tramiteCostas.xml" p:version="-1"/>	
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteMoratoriaLanzamiento/haya_tramiteMoratoriaLanzamiento.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteOcupantes/haya_tramiteOcupantes.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteDePosesion/haya_tramiteDePosesionV4.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteDeGestionDeLlaves/haya_tramiteDeGestionDeLlaves.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteSubsanacionEmbargo/haya_tramiteSubsanacionEmbargo.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteSubastaSareb/haya_tramiteSubastaSareb.xml" p:version="-1"/>				
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteSubastaSarebConcursal/haya_tramiteSubastaConcursal.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteSubastaTerceros/haya_tramiteSubastaTerceros.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteEjecucionNotarial/haya_tramiteEjecucionNotarialV4.xml" p:version="-1"/>
	
	<!-- Cambios JoseVi --> 
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteSaneamientoCargas/tramiteSaneamientoCargas.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteElevacionSarebLitigios/tramiteElevacionPropSarebLitigios.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteElevacionSarebAdjudicados/tramiteElevacionPropSarebAdjudicados.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteFaseComunAbreviado/tramiteFaseComunAbreviadoV4.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/procedimientoSolicitudConcursal/haya_procedimientoSolicitudConcursal.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteHomologacionAcuerdo/haya_tramiteHomologacionAcuerdo.xml" p:version="-1"/>	
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteFaseLiquidacion/haya_tramiteFaseLiquidacion.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteDeposito/haya_tramiteDeposito.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteCertificacionCargasRevision/haya_tramiteCertificacionCargasRevision.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteInvestigacionJudicial/haya_tramiteInvestigacionJudicial.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteEmbargoSalarios/haya_tramiteEmbargoSalarios.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteReaperturaConcurso/haya_tramiteReaperturaConcurso.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/procedimientoMonitorio/haya_procedimientoMonitorio.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/procedimientoOrdinario/haya_procedimientoOrdinario.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/procedimientoVerbal/haya_procedimientoVerbal.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/procedimientoVerbalDesdeMonitorio/haya_procedimientoVerbalDesdeMonitorio.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteCostasVsEntidad/haya_tramiteCostasVsEntidad.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteTributacionBienesSareb/haya_tramiteTributacionBienesSareb.xml" p:version="-1"/>
		
	<!-- Cambios Gonzalo -->
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteCalificacion/haya_tramiteCalificacion.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteFaseConvenio/tramiteFaseConvenioV4.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteValoracionBienesInmuebles/tramiteValoracionBienesInmuebles.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteValoracionBienesMuebles/tramiteValoracionBienesMuebles.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteIntereses/tramiteIntereses.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramitePresentacionPropConvenio/tramitePresentacionPropConvenio.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteSeguimientoConvenio/tramiteSeguimientoConvenio.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramitePropuestaAnticipadaConvenio/tramitePropuestaAnticipadaConvenio.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/procedimientoEjecucionTituloJudicial/procedimientoEjecucionTituloJudicial.xml" p:version="-1"/>		
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/procedimientoEjecucionTituloNoJudicial/procedimientoEjecucionTituloNoJudicial.xml" p:version="-1"/>		

	<!-- Cambios Nacho --> 
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteSolicitudActuacionesPronunciamientos/haya_tramiteSolicitudActuacionesPronunciamientos.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramitePrecinto/haya_tramitePrecinto.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteDemandadoEnIncidente/haya_tramiteDemandadoEnIncidente.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteVigilanciaCaducidadEmbargos/haya_tramiteVigilanciaCaducidadEmbargos.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteMejoraEmbargo/haya_tramiteMejoraEmbargo.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteDemandaIncidental/haya_tramiteDemandaIncidental.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteConsignacion/haya_tramiteConsignacion.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteRegistrarResolucionInteres/haya_tramiteRegistrarResolucionInteres.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteConclusion/haya_tramiteConclusion.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/procedimientoCambiario/haya_procedimientoCambiario.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteSubsanacionEscritura/haya_tramiteSubsanacionEscritura.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/haya/tramiteInscripcionDelTitulo/haya_tramiteInscripcionDelTitulo.xml" p:version="-1"/>
	
	<!-- HRE-BCC -->
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/cajamar/procedimientoProvisionFondos/hcj_provisionFondos.xml" p:version="-1"/>
	<bean parent="bpm.processFactory" p:definitionLocation="classpath:process/pfsgroup/cajamar/procedimientoHipotecario/hcj_procedimientoHipotecario.xml" p:version="-1"/>	
	
	<!-- Groovy's -->
	<bean id="jbpmUtilHaya" class="es.pfsgroup.recovery.haya.utils.JBPMProcessHayaManager" >
  	<property name="contextScripts">
  		<list>
  			<value><![CDATA[ 	

	            def comprobarTipoCargaBienIns = {
	            	def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionHayaProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarTipoCargaBienIns(idProcedimiento);
	            }
	            
	            def obtenerTipoCargaBien = {
	            	def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionHayaProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.obtenerTipoCargaBien(idProcedimiento);
	            }
            
	            def existenConveniosDefinidos = {
	               def convenioManager = ctx.getBean("convenioManager");
	               def listaConvenios = convenioManager.listaConveniosPorProcedimiento(idProcedimiento);
	               return (listaConvenios.size() > 0);
	            }
	            
				def comprobarExisteDocumentoEOSC = { 
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EOSC");
				}

				def comprobarExisteDocumentoEJUZTBS = { 
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EJUZTBS");
				}
				
				def comprobarExisteDocumentoINFFIS = { 
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "INFFIS");
				}
				
	            def validarAdjSareb = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionHayaProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.validarAdjuntoSareb(idProcedimiento);
	            }
	            
				def comprobarExisteDocumentoRSFSCO = { 
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSFSCO");
				}
				
				def comprobarExisteDocumentoRSPRAL = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSPRAL");
				}
				
				def comprobarExisteDocumentoRSINFC = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSINFC");
				}
				
				def comprobarExisteDocumentoRSCOPR = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSCOPR");
				}
				
				def comprobarExisteDocumentoRSINPA = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSINPA");
				}

				def comprobarExisteDocumentoDJAC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "DJAC");
	            }
	            
				def comprobarExisteDocumentoINFTC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "INFTC");
	            }
	            
				def comprobarExisteDocumentoREV = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REV");
	            }
	            
				def comprobarExisteDocumentoADEV = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ADEV");
	            }
	            
				def comprobarExisteDocumentoEDV = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EDV");
	            }
	            
				def comprobarExisteDocumentoREO = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REO");
	            }
	            
				def comprobarExisteDocumentoEOO = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EOO");
	            }
	            
				def comprobarExisteDocumentoADEO = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ADEO");
	            }
	            
				def comprobarExisteDocumentoEDO = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EDO");
	            }
	            
				def comprobarExisteDocumentoEOM = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EOM");
	            }
	            
				def comprobarExisteDocumentoADEM = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ADEM");
	            }
	            
				def comprobarExisteDocumentoEDM = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EDM");
	            }
	            
				def comprobarExisteDocumentoEDH = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EDH");
	            }   		
	            
				def comprobarExisteDocumentoADEH = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ADEH");
	            }	 
	            
				def comprobarExisteDocumentoCCH = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "CCH");
	            }	 
	            
	            def comprobarExisteDocumentoEOH = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EOH");
	            }
	            
	            def comprobarExisteDocumentoMP = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "MP");
	            }	            

	            def comprobarExisteDocumentoRECGES = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RECGES");
	            }	 
	            
	            def comprobarExisteDocumentoCALHAC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "CALHAC");
	            }	  
	            
	            def comprobarExisteDocumentoTJC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "TJC");
	            }
	            
	            def comprobarExisteDocumentoEIC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EIC");
	            }
	            
	            def comprobarExisteDocumentoAAC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "AAC");
	            }	    
	            
	            def comprobarExisteDocumentoILCRLM = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ILCRLM");
	            }      	  
	            
				def comprobarExisteDocumentoECM = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ECM");
	            }
	            
				def comprobarExisteDocumentoREM = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REM");
	            }	  
	            
				def comprobarExisteDocumentoREOC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REOC");
	            }	
	            
				def comprobarExisteDocumentoDSSDA = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "DSSDA");
	            }	  
	            
				def comprobarExisteDocumentoNOSI = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "NOSI");
	            }	    
	            
				def comprobarExisteDocumentoPSFDUL = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "PSFDUL");
	            }	 	                                                                                                 

				def comprobarExisteDocumentoRECA = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RECA");
	            }	 
	            
				def comprobarExisteDocumentoINSL = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "INSL");
	            }	
	            
				def comprobarExisteDocumentoRSAR = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSAR");
	            }	
	            
				def comprobarExisteDocumentoRSIND = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSIND");
	            }	 
	            
				def comprobarExisteDocumentoRSARSI = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSARSI");
	            }	                                   	            	            

				def comprobarExisteDocumentoPCTER = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "PCTER");
	            }

				def comprobarExisteDocumentoINFVL = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "INFVL");
	            }

				def comprobarExisteDocumentoAUTORE = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "AUTORE");
	            }	    
	            
				def comprobarExisteDocumentoINRSI = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "INRSI");
	            }	    
	            
				def comprobarExisteDocumentoAVPR = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "AVPR");
	            }	    
	            
				def comprobarExisteDocumentoTVAPJ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "TVAPJ");
	            }	    
	            
				def comprobarExisteDocumentoELAA = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ELAA");
	            }
	            
	            def comprobarExisteDocumentoJUSPG = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "JUSPG");
	            }
	            
	            def comprobarExisteDocumentoESCPRJUZ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ESCPRJUZ");
	            }	
	            
	            def comprobarExisteDocumentoRAP = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RAP");
	            }
	            
	            def comprobarExisteDocumentoDREP = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "DREP");
	            }
	            
	            def comprobarExisteDocumentoDEINC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "DEINC");
	            }
	            
	            def comprobarExisteDocumentoINFLETRADO = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "INFLETRADO");
	            }
	            
	            def comprobarExisteDocumentoESCJUZ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ESCJUZ");
	            }
	            
	            def comprobarExisteDocumentoREDIT = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REDIT");
	            }      	    

				def comprobarExisteDocumentoHCI = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "HCI");
	            }	    

				def comprobarExisteDocumentoREI = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REI");
	            }	    

				def comprobarExisteDocumentoEII = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EII");
	            }	    
        	            
				def comprobarExisteDocumentoPREPCO = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "PREPCO");
	            }	    
        	            
				def comprobarExisteDocumentoINACPC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "INACPC");
	            }	    

				def comprobarExisteDocumentoCNAUAP = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "CNAUAP");
	            }	    

				def comprobarExisteDocumentoPRAC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "PRAC");
	            }	    

				def comprobarExisteDocumentoREAC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REAC");
	            }	    

				def comprobarExisteDocumentoIACPAC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "IACPAC");

	            }
	            	    
				def comprobarExisteDocumentoACUENTDP = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ACUENTDP");
	            }
	            
				def comprobarExisteDocumentoCCB = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "CCB");
	            }
	            
				def comprobarExisteDocumentoDRO = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "DRO");
	            }

				def comprobarExisteDocumentoADETJ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ADETJ");
	            }	    

				def comprobarExisteDocumentoARETJ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ARETJ");
	            }	    

				def comprobarExisteDocumentoADETNJ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ADETNJ");
	            }	    

				def comprobarExisteDocumentoEOETNJ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EOETNJ");
	            }	    

				def comprobarExisteDocumentoRETNJ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RETNJ");
	            }	
	            
	            def comprobarExisteDocumentoMEMB = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "MEMB");
	            }	
	            
	            def comprobarExisteDocumentoREREVC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REREVC");
	            }	
	            
	            def comprobarExisteDocumentoEPME = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EPME");
	            }	
	            
	            def comprobarExisteDocumentoREME = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REME");
	            }
	            
	            def comprobarExisteDocumentoEODI = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EODI");
	            }
	            
	            def comprobarExisteDocumentoAREDI = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "AREDI");
	            }
	            
	            def comprobarExisteDocumentoREFC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REFC");
	            }
	            
	            def comprobarExisteDocumentoREC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REC");
	            }
	            
	            def comprobarExisteDocumentoADEC = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ADEC");
	            }
	            
	            def comprobarExisteDocumentoEPSSE = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EPSSE");
	            }	
	            
	            def comprobarExisteDocumentoCRG = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "CRG");
	            }	 
	            
	            def comprobarExisteDocumentoASU = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ASU");
	            }	
	            
				def comprobarExisteDocumentoADS = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ADS");
	            }	 
	            
				def comprobarExisteDocumentoBOP = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "BOP");
	            }	
	                                   
				def comprobarExisteDocumentoTSU = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "TSU");
	            }	   
	            
				def comprobarExisteDocumentoPIN = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "PIN");
	            }	   
	            
				def comprobarExisteDocumentoPSUDUL = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "PSUDUL");
	            }	
	            
				def comprobarExisteDocumentoPSUSB = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "PSUSB");
	            }	
	            
				def comprobarExisteDocumentoRSARE = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSARE");
	            }	                                                                             
	            
	            def comprobarExisteDocumentoARPEP = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ARPEP");
	            }
	            
	            def comprobarExisteDocumentoMINUTA = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "MINUTA");
	            }	
	            
	            def comprobarExisteDocumentoRECIGEST = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RECIGEST");
	            }	
	            
	            def comprobarExisteDocumentoCOAPH = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "COAPH");
	            }
	            
	            def comprobarExisteDocumentoEOETJ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EOETJ");
	            }
	            
	            def comprobarExisteDocumentoEIETJ = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EIETJ");
	            }
	            
	            def comprobarExisteDocumentoINFLFL = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "INFLFL");
	            }
	            
	            def comprobarExisteDocumentoAACONV = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "AACONV");
	            }
	            
	            def comprobarExisteDocumentoESALEG = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ESALEG");
	            }
	            
	            def comprobarExisteDocumentoAACO = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "AACO");
	            }
	            
	            def comprobarExisteDocumentoADCO = {
	                def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ADCO");
	            }
	            
	            def comprobarBienSujetoIVA = {
            		def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
                	def tributacion = adjudicacionProcedimientoManager.comprobarBienSujetoIVA(idProcedimiento);
                	if(tributacion != null && tributacion != "ITP"){
                		return true;
               		}
                	return false;             	
            	}
            	
            	def comprobarBienesAsociadoPrc = {
	            	def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
	                return adjudicacionProcedimientoManager.comprobarBienesAsociadoPrc(idProcedimiento);
	            }
	            
	            def comprobarInformadoComboTributacion = {
            		def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
                	def tributacion = adjudicacionProcedimientoManager.comprobarBienSujetoIVA(idProcedimiento);
                	if(tributacion != null && tributacion != ""){
                		return true;
               		}
                	return false;
            	}
            	
	            def comprobarSubastaBienDueD = {
            		def subastaProcedimientoManager = ctx.getBean("subastaProcedimientoDelegateManager");
                	return subastaProcedimientoManager.comprobarDueDilligence(idProcedimiento);           	
            	}
            	
            	def comprobarSubastaBienFechaRecDue = {
            		def subastaProcedimientoManager = ctx.getBean("subastaProcedimientoDelegateManager");
                	return subastaProcedimientoManager.comprobarFechaRecepcionDue(idProcedimiento);            	
            	}         

				def comprobarExisteDocumentoINFAC = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "INFAC");
				}  	
				
				def comprobarExisteDocumentoREAFC = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REAFC");
				} 	 
				
				def comprobarExisteDocumentoP5BIS = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "P5BIS");
				}	
				
				def comprobarExisteDocumentoREACHA = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "REACHA");
				}		
				
        	    def comprobarExisteDocumentoENES = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ENES");
				}									    		                       							    		                       
				
				def comprobarExisteDocumentoEORC = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "EORC");
				}	
				
				def comprobarExisteDocumentoESSORE = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "ESSORE");
				}
				
				def comprobarExisteDocumentoMINEN = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "MINEN");
				}	
				
				def comprobarExisteDocumentoMPEN = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "MPEN");
				}	
				
				def comprobarExisteDocumentoRSIEN = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSIEN");
				}	
				
				def comprobarExisteDocumentoRSARINE = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "RSARINE");
				}
				
				def validarBienesCelebracionSubasta = {
					def subastaProcedimientoManager = ctx.getBean("subastaProcedimientoDelegateManager");
                	return subastaProcedimientoManager.comprobarAdjudicacionBienesCelebracionSubasta(idProcedimiento);
	            }
	            
	            def validarBienesDocCelebracionSubasta = {
					def subastaProcedimientoManager = ctx.getBean("subastaProcedimientoDelegateManager");
                	return subastaProcedimientoManager.comprobarAdjudicacionDocBienesCelebracionSubasta(idProcedimiento);
	            }		    		                       

			
				/* ------------- HRE- BCC -------------------- */ 

				def comprobarExisteDocumentoPRVFND = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "PRVFND");
				}

				def comprobarExisteDocumentoHCSDM = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "HCSDM");
				}
				
				def comprobarExisteDocumentoHEDIMP = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "HEDIMP");
				}
				
				def comprobarExisteDocumentoHRESOL = {
					def adjudicacionProcedimientoManager = ctx.getBean("adjudicacionProcedimientoManagerDelegated");
					return adjudicacionProcedimientoManager.comprobarAdjunto(idProcedimiento, "HRESOL");
				}
				
        	            
  			 ]]>
  			</value>
  		</list>
  	</property>
  </bean> 
  
  <!-- Diccionarios -->
  <bean parent="clasesDiccionarioAnotadas">
    <property name="sourceList">
    	<list merge="true">    
    		<value>es.pfsgroup.procedimientos.model.DDTipoPropuestaSareb</value>
    		<value>es.pfsgroup.procedimientos.model.DDIndebidaExcesiva</value>
    		<value>es.pfsgroup.procedimientos.model.DDAceptadoDenegado</value>
    		<value>es.pfsgroup.procedimientos.model.DDAceptadoRechazado</value>
    		<value>es.pfsgroup.procedimientos.model.DDTipoRespuestaElevacionSareb</value>
    		<value>es.pfsgroup.procedimientos.model.DDValidarInstrucciones</value>
    		<value>es.pfsgroup.procedimientos.model.DDAccionAutoOrdinario</value>
    	</list>
    </property>
   </bean>
</beans>
