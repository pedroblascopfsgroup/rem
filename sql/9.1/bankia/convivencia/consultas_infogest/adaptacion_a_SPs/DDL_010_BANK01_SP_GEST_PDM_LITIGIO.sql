--/*
--##########################################
--## AUTOR=David González
--## FECHA_CREACION=20151030
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.1
--## INCIDENCIA_LINK=BKREC-1335
--## PRODUCTO=NO
--## 
--## Finalidad: 
--## INSTRUCCIONES:  
--## VERSIONES:
--##        	0.1 Versión inicial
--##		
--##########################################
--*/

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
 
CREATE OR REPLACE PROCEDURE GEST_PDM_LITIGIO AUTHID CURRENT_USER AS

BEGIN
/* v0.1 */

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'INSERT EN MINIREC.RCV_GEST_PDM_LITIGIO', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

	DBMS_OUTPUT.PUT_LINE('[INFO] La tabla MINIREC.RCV_GEST_PDM_LITIGIO va a ser truncada.');

	#ESQUEMA_MINIREC#.OPERACION_DDL.DDL_TABLE('TRUNCATE','RCV_GEST_PDM_LITIGIO');

COMMIT;

DBMS_OUTPUT.PUT_LINE('[INFO] Tabla MINIREC.RCV_GEST_PDM_LITIGIO truncada.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se van a insertar registros en MINIREC.RCV_GEST_PDM_LITIGIO.');

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO
	WITH 
	ULT_PROC_PADRE AS (
		SELECT /*+ MATERIALIZE */ PRC_ID, ASU_ID, DD_TPO_CODIGO, DD_TPO_DESCRIPCION, PRC_SALDO_RECUPERACION, DD_JUZ_ID, DD_JUZ_CODIGO, PRC_COD_PROC_EN_JUZGADO
		FROM (
			SELECT /*+ MATERIALIZE */ PRC.PRC_ID, PRC.ASU_ID, PRC.FECHACREAR, DD_TPO.DD_TPO_CODIGO, DD_TPO.DD_TPO_DESCRIPCION, PRC.PRC_SALDO_RECUPERACION, PRC.DD_JUZ_ID, DD_JUZ.DD_JUZ_CODIGO, PRC.PRC_COD_PROC_EN_JUZGADO
			,ROW_NUMBER() OVER (PARTITION BY PRC.ASU_ID ORDER BY PRC.FECHACREAR DESC) PROC_NUM
			FROM #ESQUEMA#.PRC_PROCEDIMIENTOS 					PRC
				INNER JOIN #ESQUEMA#.DD_TPO_TIPO_PROCEDIMIENTO 	DD_TPO 
					ON PRC.DD_TPO_ID = DD_TPO.DD_TPO_ID
				LEFT JOIN #ESQUEMA#.DD_JUZ_JUZGADOS_PLAZA 		DD_JUZ 
					ON PRC.DD_JUZ_ID = DD_JUZ.DD_JUZ_ID
				WHERE (
					UPPER(DD_TPO.DD_TPO_DESCRIPCION) 		LIKE '%APELACION%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%CAMBIARIO%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%CONCURSO%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%EJECUTIVO%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%HIPOTECARIO%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%MONITORIO%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%ORDINARIO%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%PENAL%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%TERCERIA%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%VERBAL%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%NO JUDICIAL%'
					OR UPPER(DD_TPO.DD_TPO_DESCRIPCION) 	LIKE '%ABREVIADO%'
					OR DD_TPO.DD_TPO_DESCRIPCION = 'T. de aceptacion y decision litigios'
					OR DD_TPO.DD_TPO_DESCRIPCION = 'T. fase común'
					OR DD_TPO.DD_TPO_DESCRIPCION = 'T. fase convenio' 
				)
					AND PRC.BORRADO = 0
					AND PRC.PRC_PRC_ID IS NULL
				)
				WHERE PROC_NUM = 1
	),
	ULTIMO_PROC_ASUNTO AS (
		SELECT /*+ MATERIALIZE */ ASU_ID, PRC_ID
		FROM (
		  SELECT ASU.ASU_ID, PRC.PRC_ID, ROW_NUMBER () OVER (PARTITION BY ASU.ASU_ID ORDER BY PRC.PRC_ID DESC) RN
		  FROM #ESQUEMA#.ASU_ASUNTOS 				ASU
		  INNER JOIN #ESQUEMA#.PRC_PROCEDIMIENTOS 	PRC 
			ON PRC.ASU_ID = ASU.ASU_ID 
		) TMP_AP
		WHERE RN = 1
	),
	ULTIMO_TRAMITE_SUBASTA_ASUNTO AS (
		SELECT /*+ MATERIALIZE */ ASU_ID, PRC_ID
		FROM (
		  SELECT ASU.ASU_ID, PRC.PRC_ID, ROW_NUMBER () OVER (PARTITION BY ASU.ASU_ID ORDER BY PRC.PRC_ID DESC) RN
		  FROM #ESQUEMA#.ASU_ASUNTOS 						ASU
		  INNER JOIN #ESQUEMA#.PRC_PROCEDIMIENTOS 			PRC 
			ON PRC.ASU_ID = ASU.ASU_ID
		  INNER JOIN #ESQUEMA#.DD_TPO_TIPO_PROCEDIMIENTO 	TPO 
			ON TPO.DD_TPO_ID = PRC.DD_TPO_ID
			AND TPO.DD_TPO_CODIGO IN ('P401', 'P409') 
		) TMP_AP
		WHERE RN = 1
	),
	FECHA_FINALIZACION AS (
		SELECT /*+ MATERIALIZE */ MAX(DPR.FECHAMODIFICAR) FECHAMODIFICAR, PRC.PRC_ID
		FROM #ESQUEMA#.DPR_DECISIONES_PROCEDIMIENTOS 									DPR 
		LEFT JOIN #ESQUEMA#.PRC_PROCEDIMIENTOS 											PRC 
			ON DPR.PRC_ID = PRC.PRC_ID
		LEFT JOIN #ESQUEMA#.ASU_ASUNTOS 												ASU 
			ON PRC.ASU_ID = ASU.ASU_ID
		LEFT JOIN #ESQUEMA_MASTER#.DD_EAS_ESTADO_ASUNTOS DD_EAS 
			ON ASU.DD_EAS_ID = DD_EAS.DD_EAS_ID AND DD_EAS.DD_EAS_CODIGO IN ('05', '06')
		LEFT JOIN #ESQUEMA_MASTER#.DD_EDE_ESTADOS_DECISION 								DD_EDE 
			ON DPR.DD_EDE_ID = DD_EDE.DD_EDE_ID AND DD_EDE.DD_EDE_CODIGO = '02'
		WHERE DPR.DPR_FINALIZA = 1
		GROUP BY PRC.PRC_ID
	),
	DESPACHOS_PROCURADORES AS (
	  SELECT /*+ MATERIALIZE */ DISTINCT GAA.ASU_ID, DES.DES_ID, DES.DES_DESPACHO, DES_CODIGO
	  FROM #ESQUEMA#.GAA_GESTOR_ADICIONAL_ASUNTO 							GAA
		INNER JOIN #ESQUEMA_MASTER#.DD_TGE_TIPO_GESTOR 						TGE 
			ON GAA.DD_TGE_ID = TGE.DD_TGE_ID AND TGE.DD_TGE_CODIGO = 'PROC'
		INNER JOIN #ESQUEMA#.USD_USUARIOS_DESPACHOS 						USD 
			ON GAA.USD_ID = USD.USD_ID
		INNER JOIN #ESQUEMA#.DES_DESPACHO_EXTERNO 							DES 
			ON USD.DES_ID = DES.DES_ID
	  WHERE GAA.BORRADO = 0
	),
	DESPACHOS_LETRADO AS (
	  SELECT /*+ MATERIALIZE */ DISTINCT GAA.ASU_ID, DES.DES_ID, DES.DES_DESPACHO, DES.DES_CODIGO, USU.USU_USERNAME || ' - ' || USU.USU_NOMBRE || ' ' || USU.USU_APELLIDO1 || ' ' || USU.USU_APELLIDO2 NOMBRE_SUPERVISOR
	  FROM #ESQUEMA#.GAA_GESTOR_ADICIONAL_ASUNTO 							GAA
		INNER JOIN #ESQUEMA_MASTER#.DD_TGE_TIPO_GESTOR 						TGE 
			ON GAA.DD_TGE_ID = TGE.DD_TGE_ID AND TGE.DD_TGE_CODIGO = 'GEXT'
		INNER JOIN #ESQUEMA#.USD_USUARIOS_DESPACHOS 						USD 
			ON GAA.USD_ID = USD.USD_ID
		INNER JOIN #ESQUEMA#.DES_DESPACHO_EXTERNO 							DES 
			ON USD.DES_ID = DES.DES_ID
		INNER JOIN #ESQUEMA_MASTER#.USU_USUARIOS 							USU 
			ON USD.USU_ID = USU.USU_ID
	),
	DESPACHOS_LETRADO_SUPERVISOR AS (
	  SELECT /*+ MATERIALIZE */ DISTINCT GAA.ASU_ID, DES.DES_ID, DES.DES_DESPACHO, DES.DES_CODIGO, USU.USU_USERNAME || ' - ' || USU.USU_NOMBRE || ' ' || USU.USU_APELLIDO1 || ' ' || USU.USU_APELLIDO2 NOMBRE_SUPERVISOR
	  FROM #ESQUEMA#.GAA_GESTOR_ADICIONAL_ASUNTO 							GAA
		INNER JOIN #ESQUEMA_MASTER#.DD_TGE_TIPO_GESTOR 						TGE 
			ON GAA.DD_TGE_ID = TGE.DD_TGE_ID AND TGE.DD_TGE_CODIGO = 'SUP'
		INNER JOIN #ESQUEMA#.USD_USUARIOS_DESPACHOS 						USD 
			ON GAA.USD_ID = USD.USD_ID
		INNER JOIN #ESQUEMA#.DES_DESPACHO_EXTERNO 							DES 
			ON USD.DES_ID = DES.DES_ID
		INNER JOIN #ESQUEMA_MASTER#.USU_USUARIOS 							USU 
			ON USD.USU_ID = USU.USU_ID
	),
	VALORES_ASU AS (
	  SELECT PRC_ID, TAP_ID, TAP_CODIGO, TAP_DESCRIPCION, TEV_NOMBRE, TEV_VALOR, TFI_TIPO, TEV_MAS_RECIENTE
	  FROM (
		  SELECT /*+ MATERIALIZE */ TAR.PRC_ID PRC_ID, TAP.TAP_ID TAP_ID, TAP.TAP_CODIGO TAP_CODIGO, TAP.TAP_DESCRIPCION TAP_DESCRIPCION, TEV.TEV_NOMBRE TEV_NOMBRE, TEV.TEV_VALOR TEV_VALOR, TFI.TFI_TIPO,
									ROW_NUMBER() OVER (PARTITION BY TAR.PRC_ID, TAP.TAP_ID, TEV.TEV_NOMBRE ORDER BY TEV.FECHACREAR DESC) TEV_MAS_RECIENTE
		  FROM #ESQUEMA#.TAR_TAREAS_NOTIFICACIONES 			TAR
			INNER JOIN #ESQUEMA#.TEX_TAREA_EXTERNA 			TEX 
				ON TEX.TAR_ID = TAR.TAR_ID
			INNER JOIN #ESQUEMA#.TAP_TAREA_PROCEDIMIENTO 	TAP 
				ON TEX.TAP_ID = TAP.TAP_ID
			INNER JOIN #ESQUEMA#.TFI_TAREAS_FORM_ITEMS 		TFI 
				ON  TAP.TAP_ID = TFI.TAP_ID
			INNER JOIN #ESQUEMA#.TEV_TAREA_EXTERNA_VALOR 	TEV 
				ON TEV.TEX_ID = TEX.TEX_ID AND UPPER(TFI.TFI_NOMBRE) = UPPER(TEV.TEV_NOMBRE) 
		  WHERE NOT TEV.TEV_VALOR IS NULL
		  ) TMP
		  WHERE TEV_MAS_RECIENTE = 1
	),
	ULTIMO_TAR AS (
		SELECT /*+ MATERIALIZE */ TAR_ID, PRC_ID, ASU_ID, FECHACREAR, TAP_CODIGO, TAR_FECHA_FIN, TAP_DESCRIPCION, DD_TPO_CODIGO, DD_TPO_DESCRIPCION
		FROM (
			SELECT /*+ MATERIALIZE */ TAR.TAR_ID, TAR.PRC_ID, PRC.ASU_ID, TAR.FECHACREAR, TAR.TAR_FECHA_FIN, TAP.TAP_CODIGO, TAP.TAP_DESCRIPCION,
				TPO.DD_TPO_CODIGO, TPO.DD_TPO_DESCRIPCION, ROW_NUMBER() OVER (PARTITION BY PRC.ASU_ID ORDER BY TAR.TAR_ID DESC) FILA
			FROM #ESQUEMA#.PRC_PROCEDIMIENTOS 					PRC
				INNER JOIN #ESQUEMA#.TAR_TAREAS_NOTIFICACIONES 	TAR 
					ON TAR.PRC_ID = PRC.PRC_ID
				INNER JOIN #ESQUEMA#.TEX_TAREA_EXTERNA 			TEX 
					ON TAR.TAR_ID = TEX.TAR_ID
				INNER JOIN #ESQUEMA#.TAP_TAREA_PROCEDIMIENTO 	TAP 
					ON TAP.TAP_ID = TEX.TAP_ID
				INNER JOIN #ESQUEMA#.DD_TPO_TIPO_PROCEDIMIENTO 	TPO 
					ON TAP.DD_TPO_ID = TPO.DD_TPO_ID
				LEFT JOIN #ESQUEMA#.AUX_THR_TRADUC_HITOS_RECNAL THR 
					ON THR.TAP_CODIGO = TAP.TAP_CODIGO
			WHERE TAR.TAR_FECHA_FIN IS NOT NULL
		)
		WHERE FILA=1
	),
	PER_DEMANDADO_PRINCIPAL AS (
		SELECT /*+ MATERIALIZE */ PRC_ID, PER_ID, PER_COD_CLIENTE_ENTIDAD, DD_SCE_ID
		FROM (
		  SELECT PRC_PER.PRC_ID, PRC_PER.PER_ID, PER.PER_COD_CLIENTE_ENTIDAD, PER.DD_SCE_ID,  ROW_NUMBER() OVER (PARTITION BY PRC_PER.PRC_ID ORDER BY PER.PER_DEUDA_IRREGULAR DESC) NUM
		  FROM #ESQUEMA#.PRC_PER
			INNER JOIN #ESQUEMA#.PER_PERSONAS PER 
				ON PRC_PER.PER_ID = PER.PER_ID
		)
		WHERE NUM = 1
	),
	ULTIMO_RECURSO AS (
		SELECT /*+ MATERIALIZE */ PRC_ID, RCR_FECHA_RECURSO
		FROM (
			SELECT RCR.PRC_ID, RCR.RCR_FECHA_RECURSO, ROW_NUMBER() OVER (PARTITION BY RCR.PRC_ID ORDER BY RCR.RCR_FECHA_RECURSO DESC) NUM
			FROM #ESQUEMA#.RCR_RECURSOS_PROCEDIMIENTOS RCR
		)
		WHERE NUM = 1
	),
	--ULTIMO_PROC_ADJUDICACION AS (								## COMENTAMOS PORQUE POSTERIORMENTE NO SE USA EN EL SELECT .. FROM Y ESTO DA LUGAR A ERRORES ##
	--	SELECT /*+ MATERIALIZE */ PRC_ID, ASU_ID
	--	FROM (
	--		SELECT /*+ MATERIALIZE */ PRC.PRC_ID, PRC.ASU_ID, PRC.FECHACREAR, DD_TPO.DD_TPO_CODIGO
	--		  ,ROW_NUMBER() OVER (PARTITION BY PRC.ASU_ID ORDER BY PRC.FECHACREAR DESC) PROC_NUM
	--		FROM #ESQUEMA#.PRC_PROCEDIMIENTOS PRC
	--			INNER JOIN #ESQUEMA#.DD_TPO_TIPO_PROCEDIMIENTO DD_TPO 
	--				ON PRC.DD_TPO_ID = DD_TPO.DD_TPO_ID
	--		WHERE DD_TPO.DD_TPO_CODIGO = 'P413'
	--			AND PRC.BORRADO = 0
	--	)
	--	WHERE PROC_NUM = 1
	--),
	ULT_PROC AS (
		SELECT /*+ MATERIALIZE */ PRC_ID, ASU_ID, DD_TPO_CODIGO
		FROM (
			SELECT /*+ MATERIALIZE */ PRC.PRC_ID, PRC.ASU_ID, PRC.FECHACREAR, DD_TPO.DD_TPO_CODIGO
			  ,ROW_NUMBER() OVER (PARTITION BY PRC.ASU_ID ORDER BY PRC.PRC_ID DESC) PROC_NUM
			FROM #ESQUEMA#.PRC_PROCEDIMIENTOS PRC
				INNER JOIN #ESQUEMA#.DD_TPO_TIPO_PROCEDIMIENTO DD_TPO 
					ON PRC.DD_TPO_ID = DD_TPO.DD_TPO_ID
			WHERE PRC.BORRADO = 0
		)
		WHERE PROC_NUM = 1
	),
	ULT_MOVIMIENTO_CNT AS (
		SELECT CNT_ID, DEUDA, PRC_ID, EXP_ID, CD_EXPEDIENTE_NUSE, NUMERO_EXP_NUSE
		FROM (
			SELECT /*+ MATERIALIZE */ TMP_DEUDA.CNT_ID, TMP_DEUDA.DEUDA, PRCCEX.PRC_ID, EX.EXP_ID, EX.CD_EXPEDIENTE_NUSE, EX.NUMERO_EXP_NUSE, ROW_NUMBER() OVER (PARTITION BY PRCCEX.PRC_ID ORDER BY TMP_DEUDA.DEUDA DESC) CNT_MAYOR
			FROM (
				SELECT /*+ MATERIALIZE */ CNT_ID, (MOV_POS_VIVA_NO_VENCIDA + MOV_POS_VIVA_VENCIDA + MOV_INT_REMUNERATORIOS + MOV_GASTOS + MOV_COMISIONES + MOV_IMPUESTOS) DEUDA
				FROM (
				  SELECT mov.CNT_ID
					,ROW_NUMBER () OVER (PARTITION BY mov.cnt_id ORDER BY mov.mov_fecha_extraccion DESC) RN
					,MOV.MOV_POS_VIVA_NO_VENCIDA 
					,MOV.MOV_POS_VIVA_VENCIDA 
					,MOV.MOV_INT_REMUNERATORIOS 
					,MOV.MOV_INT_MORATORIOS 
					,MOV.MOV_GASTOS 
					,MOV.MOV_COMISIONES 
					,MOV.MOV_IMPUESTOS
					FROM #ESQUEMA#.MOV_MOVIMIENTOS MOV
				) TMP_MOV
			WHERE RN = 1
			) TMP_DEUDA
				INNER JOIN #ESQUEMA#.CEX_CONTRATOS_EXPEDIENTE CEX 
					ON CEX.CNT_ID = TMP_DEUDA.CNT_ID
				INNER JOIN #ESQUEMA#.EXP_EXPEDIENTES EX 
					ON EX.EXP_ID = CEX.EXP_ID
				INNER JOIN #ESQUEMA#.PRC_CEX PRCCEX 
					ON PRCCEX.CEX_ID = CEX.CEX_ID
		) TMP_CNT_MAYOR
		WHERE CNT_MAYOR = 1
	),
	PERSONA_TITULAR AS (
	SELECT /*+ MATERIALIZE */ DISTINCT PP.PRC_ID, PEX.PER_ID, PER.PER_COD_CLIENTE_ENTIDAD
	  FROM 	#ESQUEMA#.ASU_ASUNTOS 				ASU,
			#ESQUEMA#.PRC_PROCEDIMIENTOS 		PRC,
			#ESQUEMA#.PRC_PER 					PP,
			#ESQUEMA#.PEX_PERSONAS_EXPEDIENTE 	PEX,
			#ESQUEMA#.PER_PERSONAS 				PER
	  WHERE PRC.PRC_ID = PP.PRC_ID
		  AND PRC.PRC_PRC_ID IS NULL
		  AND PP.PER_ID = PER.PER_ID
		  AND PRC.ASU_ID = ASU.ASU_ID
		  AND ASU.EXP_ID = PEX.EXP_ID
		  AND PER.PER_ID = PEX.PER_ID
		  AND PEX.PEX_PASE = 1
		  AND PEX.USUARIOCREAR IN ('MIGRABNKF2','MIGRACANF2')
	),
	--PRC_BIE_ADJ AS (								## COMENTAMOS PORQUE POSTERIORMENTE NO SE USA EN EL SELECT .. FROM Y ESTO DA LUGAR A ERRORES ##
	--	SELECT /*+ MATERIALIZE */ PRB.PRC_ID, MAX(ADJ.BIE_ADJ_F_DECRETO_FIRME) BIE_ADJ_F_DECRETO_FIRME
	--	FROM #ESQUEMA#.PRB_PRC_BIE PRB
	--		JOIN #ESQUEMA#.BIE_ADJ_ADJUDICACION ADJ 
	--			ON PRB.BIE_ID = ADJ.BIE_ID
	--	GROUP BY PRB.PRC_ID
	--),
	EXPEDIENTE_ASUNTO AS (
		SELECT /*+ MATERIALIZE */ EXP.EXP_ID, ASU.ASU_ID, EXP.CD_EXPEDIENTE_NUSE, EXP.NUMERO_EXP_NUSE
		FROM #ESQUEMA#.EXP_EXPEDIENTES EXP 
			INNER JOIN #ESQUEMA#.ASU_ASUNTOS ASU 
				ON ASU.ASU_ID_EXTERNO = EXP.CD_PROCEDIMIENTO
	)
SELECT DISTINCT
   CASE WHEN ULT_MOVIMIENTO_CNT.CD_EXPEDIENTE_NUSE IS NOT NULL
	THEN substr(ULT_MOVIMIENTO_CNT.CD_EXPEDIENTE_NUSE,0,8) 
	ELSE substr(EXPEDIENTE_ASUNTO.CD_EXPEDIENTE_NUSE,0,8) 
	END ID_EXPEDIENTE
  ,CASE WHEN ULT_MOVIMIENTO_CNT.EXP_ID IS NOT NULL 
	THEN ULT_MOVIMIENTO_CNT.EXP_ID 
	ELSE EXPEDIENTE_ASUNTO.EXP_ID 
	END ID_EXPEDIENTE_RCV
  ,ASU.ASU_ID ID_ASUNTO_RCV
  ,CASE WHEN ULTPRC.PRC_ID IS NOT NULL 
	THEN ULTPRC.PRC_ID 
	ELSE ULTIMO_PROC_ASUNTO.PRC_ID 
	END ID_PROCEDI_RCV
  ,CNT.CNT_ID ID_CUENTA_RCV
  ,CASE WHEN ULT_MOVIMIENTO_CNT.NUMERO_EXP_NUSE IS NOT NULL 
	THEN substr(ULT_MOVIMIENTO_CNT.NUMERO_EXP_NUSE,0,20) 
	ELSE substr(EXPEDIENTE_ASUNTO.NUMERO_EXP_NUSE,0,20) 
	END NUMERO_EXP
  ,CASE DD_PAS.DD_PAS_CODIGO
	WHEN 'BANKIA' 
		THEN '00000'
    WHEN 'SAREB' 
		THEN '05074'
    ELSE NULL
	END ENTIDAD
  ,TO_NUMBER(ASU.ASU_ID_EXTERNO) ID_PROCEDI
  ,CASE
	WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%APELACION%' 
		THEN 'APELACION'
    WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%CAMBIARIO%' 
		THEN 'CAMBIARIO'
    WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%CONCURSO%' 
		THEN 'CONCURSO'
    WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%EJECUTIVO%' OR UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%NO JUDICIAL%' 
		THEN 'EJECUTIVO'
    WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%HIPOTECARIO%' 
		THEN 'HIPOTECARIO'
    WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%MONITORIO%' 
		THEN 'MONITORIO'
    WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%ORDINARIO%' 
		THEN 'ORDINARIO'
    WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%PENAL%' OR UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%ABREVIADO%' 
		THEN 'PENAL'
    WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%TERCERIA%' 
		THEN 'TERCERIA'
    WHEN UPPER(ULTPRC.DD_TPO_DESCRIPCION) LIKE '%VERBAL%' 
		THEN 'VERBAL'
	WHEN ULTPRC.DD_TPO_DESCRIPCION = 'T. de aceptacion y decision litigios' 
		THEN 'PRELITIGIO'
	WHEN ULTPRC.DD_TPO_DESCRIPCION = 'T. fase común' 
		THEN 'CONCURSO'
	WHEN ULTPRC.DD_TPO_DESCRIPCION = 'T. fase convenio'  
		THEN 'CONCURSO'
	END TIPO_PROCEDI
  ,SUBSTR(CNT_CONTRATO,6,5) CLASE_P_P
  ,SUBSTR(CNT.CNT_CONTRATO,11,17) NUM_CUENTA
  ,CONCAT('00',SUBSTR(CNT.CNT_CONTRATO,28,15)) NUMERO_ESPEC
  ,SUBSTR(ULTPRC.PRC_COD_PROC_EN_JUZGADO,1,15) NUMERO_AUTOS
  ,NULL CENTRO_RECUP
  ,NULL COD9DN
  ,NULL COD9ZO
  ,OFI.OFI_CODIGO_OFICINA OFICINA_PRODUCTO
  ,ULTPRC.DD_JUZ_CODIGO ID_JUZGADO
  ,SUBSTR(DESP_LET.DES_CODIGO,1,15) ANAGRAMA_ABO
  ,SUBSTR(DESP_PROC.DES_CODIGO,1,15) ANAGRAMA_PRO
  ,DESPACHOS_LETRADO_SUPERVISOR.NOMBRE_SUPERVISOR SUPERVISOR_RCV
  ,ASU.FECHACREAR FECHA_ALTA 
  , CASE WHEN (FECHA_FINALIZACION.FECHAMODIFICAR IS not NULL AND DD_EAS.DD_EAS_CODIGO IN ('05', '06')) THEN FECHA_FINALIZACION.FECHAMODIFICAR
 	ELSE NULL 
 	END FECHA_BAJA
  ,PERSONA_TITULAR.PER_ID ID_PERSONA_RCV
  ,TO_CHAR(PERSONA_TITULAR.PER_COD_CLIENTE_ENTIDAD) NUMERO_PERSONA 
  ,DECODE(UPPER(ESC.DD_ESC_DESCRIPCION), 'ACTIVO', ULT_MOVIMIENTO_CNT.DEUDA,0) IMP_DEUDA
  ,CASE WHEN TEV_DEMANDA.TEV_VALOR LIKE '__-__-____' 
	THEN TO_DATE(TEV_DEMANDA.TEV_VALOR, 'DD-MM-YYYY')
   WHEN TEV_DEMANDA.TEV_VALOR LIKE '____-__-__' 
	THEN TO_DATE(TEV_DEMANDA.TEV_VALOR, 'YYYY-MM-DD')
    ELSE NULL 
    END FECHA_DEMANDA
  ,ULTPRC.PRC_SALDO_RECUPERACION IMPORTE_PRINCIPAL
  ,TO_NUMBER(REPLACE(TEV_COSTAS.TEV_VALOR,'.',',')) INTERESES_COSTAS
  ,TO_NUMBER(REPLACE(TEVIMPDEMAN.TEV_VALOR,'.',',')) IMPORTE_DEMANDA
  ,CASE WHEN TEV_FECHDESP.TEV_VALOR LIKE '__-__-____' 
	THEN TO_DATE(TEV_FECHDESP.TEV_VALOR, 'DD-MM-YYYY')
   WHEN TEV_FECHDESP.TEV_VALOR LIKE '____-__-__' 
	THEN TO_DATE(TEV_FECHDESP.TEV_VALOR, 'YYYY-MM-DD')
	ELSE NULL     
    END FECHA_DESPACHO_EJECUCION
	,CASE WHEN VALOR_FECHA_AUTO.TEV_VALOR LIKE '__-__-____' 
		THEN TO_DATE(VALOR_FECHA_AUTO.TEV_VALOR, 'DD-MM-YYYY')
    WHEN VALOR_FECHA_AUTO.TEV_VALOR LIKE '____-__-__' 
		THEN TO_DATE(VALOR_FECHA_AUTO.TEV_VALOR, 'YYYY-MM-DD')
        ELSE NULL 
		END FECHA_AUTO
	,CASE WHEN AUX_THR.COD_HITO_NAL IS NOT NULL 
		THEN AUX_THR.COD_HITO_NAL 
		ELSE 'A0000' 
		END HITO_MAS_AVANZADO
    ,ULT_TAR.TAR_FECHA_FIN F_HITO_MAS_AVANZADO
	,ULT_TAR.TAP_CODIGO ID_ULT_TAR_REALIZADA_RCV
	,ULT_TAR.TAP_DESCRIPCION ULT_TAR_REALIZADA_RCV
	,ULT_TAR.TAR_FECHA_FIN F_ULT_TAR_REALIZADA_RCV
	,ULT_TAR.DD_TPO_CODIGO ID_TRAMITE_ACTUAL_RCV
	,ULT_TAR.DD_TPO_DESCRIPCION TRAMITE_ACTUAL_RCV
    ,NULL ID_PDM_PADRE
    ,CASE DD_EAS.DD_EAS_CODIGO WHEN '05' 
		THEN 'FINPDM'
	WHEN '06' 
		THEN 'FINPDM' 
		ELSE 'VIV' 
		END ESTADO
	,DD_EAS.DD_EAS_CODIGO ID_ESTADO_RCV
	,DD_EAS.DD_EAS_DESCRIPCION ESTADO_RCV
    ,DD_DFI.DD_DFI_DESCRIPCION MOTIVO_FINALIZ
    ,ULTRECUR.RCR_FECHA_RECURSO FEC_ADMISON_APEL
    ,TO_NUMBER(REPLACE(TEVIMPCOSTLET.TEV_VALOR,'.',',')) IMP_COSTAS_LTR
    ,TO_NUMBER(REPLACE(TEVIMPCOSTPROC.TEV_VALOR,'.',',')) IMP_COSTAS_PRO
    ,(TO_NUMBER(REPLACE(TEVIMPCOSTLET.TEV_VALOR,'.',',')) + TO_NUMBER(REPLACE(TEVIMPCOSTPROC.TEV_VALOR,'.',','))) IMP_COSTAS_TOT
    ,CASE WHEN GES.DD_GES_CODIGO = 'HAYA' 
		THEN 'S' 
		ELSE 'N' 
		END IND_PLATAFORMA
    ,SEGTO.DD_SCE_DESCRIPCION SEGMENTO
FROM #ESQUEMA#.ASU_ASUNTOS ASU 
  LEFT JOIN #ESQUEMA_MASTER#.DD_EAS_ESTADO_ASUNTOS DD_EAS 
	ON ASU.DD_EAS_ID = DD_EAS.DD_EAS_ID
  LEFT JOIN #ESQUEMA#.DD_PAS_PROPIEDAD_ASUNTO DD_PAS 
	ON ASU.DD_PAS_ID = DD_PAS.DD_PAS_ID
  LEFT JOIN DESPACHOS_LETRADO DESP_LET 
	ON DESP_LET.ASU_ID = ASU.ASU_ID
  LEFT JOIN DESPACHOS_LETRADO_SUPERVISOR 
	ON DESPACHOS_LETRADO_SUPERVISOR.ASU_ID = ASU.ASU_ID
  LEFT JOIN DESPACHOS_PROCURADORES DESP_PROC 
	ON DESP_PROC.ASU_ID = ASU.ASU_ID
  LEFT JOIN ULT_PROC_PADRE ULTPRC 
	ON ASU.ASU_ID = ULTPRC.ASU_ID
  INNER JOIN ULTIMO_PROC_ASUNTO 
	ON ULTIMO_PROC_ASUNTO.ASU_ID = ASU.ASU_ID
  LEFT JOIN EXPEDIENTE_ASUNTO 
	ON EXPEDIENTE_ASUNTO.ASU_ID = ULTIMO_PROC_ASUNTO.ASU_ID
  LEFT JOIN ULT_MOVIMIENTO_CNT 
	ON ULT_MOVIMIENTO_CNT.PRC_ID = ULTIMO_PROC_ASUNTO.PRC_ID
  LEFT JOIN #ESQUEMA#.CNT_CONTRATOS CNT 
	ON ULT_MOVIMIENTO_CNT.CNT_ID = CNT.CNT_ID 
		AND CNT.BORRADO = 0
  LEFT JOIN #ESQUEMA#.EXT_IAC_INFO_ADD_CONTRATO EXT 
	ON EXT.CNT_ID = CNT.CNT_ID
		AND EXT.DD_IFC_ID IN 
			(SELECT /*+ MATERIALIZE */ DD.DD_IFC_ID  
			FROM #ESQUEMA#.EXT_DD_IFC_INFO_CONTRATO DD 
			WHERE DD.DD_IFC_CODIGO = 'NUMERO_ESPEC')
  LEFT JOIN #ESQUEMA#.OFI_OFICINAS OFI 
	ON CNT.OFI_ID_ADMIN = OFI.OFI_ID
  LEFT JOIN VALORES_ASU TEV_DEMANDA 
	ON TEV_DEMANDA.PRC_ID = ULTPRC.PRC_ID 
		AND TEV_DEMANDA.TAP_CODIGO IN ('P01_DemandaCertificacionCargas',
										 'P17_InterposicionDemandaMasBienes',
										 'P04_InterposicionDemanda',
										 'P25_interposicionDemanda',
										 'P15_InterposicionDemandaMasBienes',
										 'P03_InterposicionDemanda',
										 'P02_InterposicionDemanda',
										 'P32_interposicionDemandaQuerella')
		AND UPPER(TEV_DEMANDA.TFI_TIPO) = 'DATE'
  LEFT JOIN VALORES_ASU TEV_COSTAS 
	ON TEV_COSTAS.PRC_ID = ULTPRC.PRC_ID  /*ultpadre*/
      AND TEV_COSTAS.TAP_CODIGO IN ('P401_SenyalamientoSubasta',
									'P409_SenyalamientoSubasta')
      AND UPPER(TEV_COSTAS.TEV_NOMBRE) = 'INTERESES'
  LEFT JOIN VALORES_ASU TEVIMPDEMAN 
	ON TEVIMPDEMAN.PRC_ID = ULTPRC.PRC_ID /*ultpadre*/
      AND TEVIMPDEMAN.TAP_CODIGO IN ('P01_DemandaCertificacionCargas',
									 'P17_InterposicionDemandaMasBienes',
									 'P04_InterposicionDemanda',
									 'P25_interposicionDemanda',
									 'P15_InterposicionDemandaMasBienes',
									 'P03_InterposicionDemanda',
									 'P02_InterposicionDemanda',
									 'P32_interposicionDemandaQuerella')
      AND UPPER(TEVIMPDEMAN.TEV_NOMBRE)='PRINCIPALDEMANDA'      
  LEFT JOIN VALORES_ASU TEV_FECHDESP 
	ON TEV_FECHDESP.PRC_ID = ULTPRC.PRC_ID /*ultpadre*/
      AND TEV_FECHDESP.TAP_CODIGO IN ('P01_AutoDespachandoEjecucion',
										'P15_AutoDespaEjecMasDecretoEmbargo_new1')
      AND UPPER(TEV_FECHDESP.TEV_NOMBRE)='FECHA'
  LEFT JOIN ULT_PROC 
	ON ULT_PROC.ASU_ID = ASU.ASU_ID
  LEFT JOIN ULTIMO_TAR ULT_TAR 
	ON ULT_TAR.ASU_ID = ASU.ASU_ID
  LEFT JOIN #ESQUEMA#.AUX_THR_TRADUC_HITOS_RECNAL AUX_THR 
	ON AUX_THR.TAP_CODIGO = ULT_TAR.TAP_CODIGO 
		AND ULT_TAR.DD_TPO_CODIGO = AUX_THR.DD_TPO_CODIGO 
  LEFT JOIN ULTIMO_TRAMITE_SUBASTA_ASUNTO 
	ON ULTIMO_TRAMITE_SUBASTA_ASUNTO.ASU_ID = ASU.ASU_ID
  LEFT JOIN VALORES_ASU TEVIMPCOSTLET 
	ON TEVIMPCOSTLET.PRC_ID = ULTIMO_TRAMITE_SUBASTA_ASUNTO.PRC_ID /*ultpadre*/
		AND TEVIMPCOSTLET.TAP_CODIGO IN ('P401_SenyalamientoSubasta',
										'P409_SenyalamientoSubasta')
		AND UPPER(TEVIMPCOSTLET.TEV_NOMBRE)='COSTASLETRADO'
  LEFT JOIN VALORES_ASU TEVIMPCOSTPROC 
	ON TEVIMPCOSTPROC.PRC_ID = ULTIMO_TRAMITE_SUBASTA_ASUNTO.PRC_ID /*ultpadre*/
		AND TEVIMPCOSTPROC.TAP_CODIGO IN ('P401_SenyalamientoSubasta',
											'P409_SenyalamientoSubasta')
		AND UPPER(TEVIMPCOSTPROC.TEV_NOMBRE)='COSTASPROCURADOR'
  LEFT JOIN FECHA_FINALIZACION 
	ON FECHA_FINALIZACION.PRC_ID = ULTIMO_PROC_ASUNTO.PRC_ID
  LEFT JOIN #ESQUEMA#.DPR_DECISIONES_PROCEDIMIENTOS DPR 
	ON DPR.PRC_ID = ULTIMO_PROC_ASUNTO.PRC_ID 
		AND DPR.TAR_ID = ULT_TAR.TAR_ID
  LEFT JOIN #ESQUEMA#.DD_DFI_DECISION_FINALIZAR DD_DFI 
	ON DD_DFI.DD_DFI_ID = DPR.DD_DFI_ID
  LEFT JOIN PER_DEMANDADO_PRINCIPAL PER 
	ON PER.PRC_ID = ULTIMO_PROC_ASUNTO.PRC_ID
  LEFT JOIN #ESQUEMA#.DD_SCE_SEGTO_CLI_ENTIDAD SEGTO 
	ON SEGTO.DD_SCE_ID = PER.DD_SCE_ID
  LEFT JOIN ULTIMO_RECURSO ULTRECUR 
	ON ULTRECUR.PRC_ID = ULTIMO_PROC_ASUNTO.PRC_ID
  LEFT JOIN #ESQUEMA#.DD_GES_GESTION_ASUNTO GES 
	ON GES.DD_GES_ID = ASU.DD_GES_ID
  LEFT JOIN VALORES_ASU VALOR_FECHA_AUTO 
	ON ULTPRC.PRC_ID = VALOR_FECHA_AUTO.PRC_ID 
		AND VALOR_FECHA_AUTO.TEV_NOMBRE = 'fechaAuto'
  LEFT JOIN PERSONA_TITULAR 
	ON PERSONA_TITULAR.PRC_ID = ULTPRC.PRC_ID
  LEFT JOIN #ESQUEMA_MASTER#.DD_ESC_ESTADO_CNT ESC 
	ON ESC.DD_ESC_ID = CNT.DD_ESC_ID
	WHERE ASU.BORRADO = 0;

COMMIT;

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'INSERT EN MINIREC.RCV_GEST_PDM_LITIGIO', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros insertados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se va a actualizar MINIREC.RCV_GEST_PDM_LITIGIO.MOTIVO_FINALIZ.');

---AÑADIMOS UN NUEVO MERGE PARA EL ITEM BKREC-

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.MOTIVO_FINALIZ', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

MERGE INTO #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO RCV
      USING (
     select * from (
      SELECT DPR.PRC_ID, DPR.DD_DFI_ID, DFI.DD_DFI_DESCRIPCION, trunc(DPR.FECHAMODIFICAR) fechamodificar, ROW_NUMBER () OVER (PARTITION BY dpr.PRC_ID ORDER BY DPR.FECHAMODIFICAR DESC) RN
      FROM #ESQUEMA#.DPR_DECISIONES_PROCEDIMIENTOS DPR
      INNER JOIN #ESQUEMA#.DD_DFI_DECISION_FINALIZAR DFI ON DFI.DD_DFI_ID=DPR.DD_DFI_ID
      /*group by DPR.PRC_ID, DPR.DD_DFI_ID, DFI.DD_DFI_DESCRIPCION, trunc(DPR.FECHAMODIFICAr)*/
      ) TMP
      	WHERE RN = 1) TMP
      ON ( trunc(RCV.FECHA_BAJA) = trunc(TMP.FECHAMODIFICAR) AND RCV.ID_PROCEDI_RCV=TMP.PRC_ID)
      WHEN MATCHED THEN UPDATE SET RCV.MOTIVO_FINALIZ=TMP.DD_DFI_DESCRIPCION
      WHERE RCV.ESTADO='FINPDM';

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.MOTIVO_FINALIZ', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros actualizados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se va a actualizar MINIREC.RCV_GEST_PDM_LITIGIO.FECHA_BAJA Y MINIREC.RCV_GEST_PDM_LITIGIO.ESTADO');

--- Modificamos MERGE para el item BKREC-1382

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.FECHA_BAJA,ESTADO,ID_ESTADO_RCV,ESTADO_RCV', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

MERGE INTO #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO RCV
USING (SELECT ID_PROCEDI, FECHA_ALTA, FECHA_BAJA, ESTADO, 
			(SELECT dd_eas_id 
			FROM #ESQUEMA_MASTER#.DD_EAS_ESTADO_ASUNTOS 
			WHERE dd_eas_codigo='06') ID_ESTADO_RCV, 
				(SELECT DD_EAS_DESCRIPCION 
				FROM #ESQUEMA_MASTER#.DD_EAS_ESTADO_ASUNTOS 
				WHERE dd_eas_codigo='06') ESTADO_RCV
		FROM #ESQUEMA#.TMP_RCV_GEST_PDM_LITIGIO 
		WHERE estadO='FINPDM') TMP
ON (RCV.ID_PROCEDI = TMP.ID_PROCEDI)                       
WHEN MATCHED THEN 
UPDATE SET 	 RCV.FECHA_BAJA = TMP.FECHA_BAJA
			,RCV.ESTADO = TMP.ESTADO
			,RCV.ID_ESTADO_RCV=TMP.ID_ESTADO_RCV
			,RCV.ESTADO_RCV=TMP.ESTADO_RCV
			WHERE RCV.ESTADO='FINPDM';

COMMIT;

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.FECHA_BAJA,ESTADO,ID_ESTADO_RCV,ESTADO_RCV', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros actualizados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se va a actualizar MINIREC.RCV_GEST_PDM_LITIGIO.F_HITO_MAS_AVANZADO.');

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.F_HITO_MAS_AVANZADO', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

MERGE INTO #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO RCV
	USING 
		(SELECT ID_PROCEDI, F_HITO_MAS_AVANZADO
		FROM #ESQUEMA#.TMP_RCV_GEST_PDM_LITIGIO_FHITO
		) TMP
	ON (RCV.ID_PROCEDI = TMP.ID_PROCEDI)                       
	WHEN MATCHED 
	THEN UPDATE 
	SET RCV.F_HITO_MAS_AVANZADO = TMP.F_HITO_MAS_AVANZADO;

COMMIT;

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.F_HITO_MAS_AVANZADO', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros actualizados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se va a actualizar MINIREC.RCV_GEST_PDM_LITIGIO.HITO_MAS_AVANZADO.');

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'UPDATE EN MINIREC.RCV_GEST_PDM_LITIGIO.HITO_MAS_AVANZADO', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

UPDATE #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO 
	SET HITO_MAS_AVANZADO = 'F9999' 
	WHERE ESTADO = 'FINPDM';
UPDATE #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO 
	SET HITO_MAS_AVANZADO = 'F9999' 
	WHERE ESTADO = 'FINACT'; 
	
COMMIT;

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'UPDATE EN MINIREC.RCV_GEST_PDM_LITIGIO.HITO_MAS_AVANZADO', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros actualizados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se va a actualizar MINIREC.RCV_GEST_PDM_LITIGIO.IMP_DEUDA.');

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.IMP_DEUDA', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

MERGE INTO #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO RCV
	USING 
	(SELECT PRC.PRC_ID, SUM(TMP_DEUDA.DEUDA) SUM_DEUDA
	FROM #ESQUEMA#.PRC_PROCEDIMIENTOS PRC
		INNER JOIN #ESQUEMA#.PRC_CEX PC 
			ON PRC.PRC_ID = PC.PRC_ID
		INNER JOIN #ESQUEMA#.CEX_CONTRATOS_EXPEDIENTE CEX 
			ON PC.CEX_ID = CEX.CEX_ID
		INNER JOIN #ESQUEMA#.CNT_CONTRATOS CNT 
			ON CNT.CNT_ID = CEX.CNT_ID
		INNER JOIN 
			(SELECT CNT_ID, (MOV_POS_VIVA_NO_VENCIDA + MOV_POS_VIVA_VENCIDA + MOV_INT_REMUNERATORIOS + MOV_GASTOS + MOV_COMISIONES + MOV_IMPUESTOS) DEUDA
			FROM 
				(SELECT mov.CNT_ID
						,ROW_NUMBER () OVER (PARTITION BY mov.cnt_id ORDER BY mov.mov_fecha_extraccion DESC) rn
						,MOV.MOV_POS_VIVA_NO_VENCIDA 
						,MOV.MOV_POS_VIVA_VENCIDA 
						,MOV.MOV_INT_REMUNERATORIOS 
						,MOV.MOV_INT_MORATORIOS 
						,MOV.MOV_GASTOS 
						,MOV.MOV_COMISIONES 
						,MOV.MOV_IMPUESTOS
						FROM #ESQUEMA#.MOV_MOVIMIENTOS mov					
				) TMP_MOV
				WHERE RN = 1
			) TMP_DEUDA 
				ON TMP_DEUDA.CNT_ID = CNT.CNT_ID
		INNER JOIN #ESQUEMA_MASTER#.DD_ESC_ESTADO_CNT ESC 
			ON ESC.DD_ESC_ID = CNT.DD_ESC_ID
		WHERE UPPER(ESC.DD_ESC_DESCRIPCION) = 'ACTIVO'
		AND EXISTS 
			(SELECT 1 
			FROM #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO RCV
			WHERE RCV.ID_PROCEDI_RCV = PRC.PRC_ID)
		GROUP BY PRC.PRC_ID
	) SRC
	ON (RCV.ID_PROCEDI_RCV = SRC.PRC_ID)
	WHEN MATCHED 
	THEN UPDATE 
	SET RCV.IMP_DEUDA = SRC.SUM_DEUDA;

COMMIT;

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.IMP_DEUDA', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros actualizados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se va a actualizar MINIREC.RCV_GEST_PDM_LITIGIO.IMPORTE_DEMANDA.');

---IMPORTE_DEMANDA de CONCURSOS:

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.IMPORTE_DEMANDA', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

MERGE INTO #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO RCV
	USING 
	(WITH IMP_DEMANDA_TAR AS  
		(SELECT SUM(TO_NUMBER(REPLACE(TEV.TEV_VALOR,'.',','))) TEV_VALOR,PRC.PRC_PRC_ID PRC_ID, PRC.USUARIOCREAR
		FROM #ESQUEMA#.TEV_TAREA_EXTERNA_VALOR   	TEV,
			#ESQUEMA#.TAP_TAREA_PROCEDIMIENTO   	TAP,
			#ESQUEMA#.TEX_TAREA_EXTERNA         	TEX,
			#ESQUEMA#.TAR_TAREAS_NOTIFICACIONES 	TAR,                                                    
			#ESQUEMA#.PRC_PROCEDIMIENTOS        	PRC
		WHERE TAR.PRC_ID = PRC.PRC_ID
			AND TAR.TAR_TAREA      = 'Presentar escrito de insinuación'
			AND TEX.TAR_ID         = TAR.TAR_ID   
			AND TAP.TAP_ID         = TEX.TAP_ID
			AND TAP.TAP_CODIGO     = 'P412_PresentarEscritoInsinuacion'       
			AND TEV.TEX_ID         = TEX.TEX_ID 
			AND TEV.TEV_NOMBRE IN ('tCredMasa','tCredPrivEsp','tCredOrd','tCredSub','tCredContigentes' )
		GROUP BY PRC.PRC_PRC_ID, PRC.USUARIOCREAR
		),
	IMP_DEMANDA_PRC AS
		(SELECT DISTINCT PRC_SALDO_RECUPERACION PRC_SALDO_REC,PRC.PRC_ID PRC_ID
		FROM #ESQUEMA#.PRC_PROCEDIMIENTOS PRC
		)
		SELECT CASE WHEN upper(NVL(usuariocrear,'MIGRA')) LIKE '%MIGRA%' 
		THEN IDP.PRC_SALDO_REC 
		ELSE IDT.TEV_VALOR 
		END IMPORTE_DEMANDA,
		NVL(IDT.PRC_ID,IDP.PRC_ID) PRC_ID
		FROM IMP_DEMANDA_PRC IDP 
			LEFT JOIN IMP_DEMANDA_TAR IDT 
				ON IDP.PRC_ID = IDT.PRC_ID
	) IDC
		ON (RCV.ID_PROCEDI_RCV = IDC.PRC_ID)
		WHEN MATCHED 
		THEN UPDATE 
			SET RCV.IMPORTE_DEMANDA = IDC.IMPORTE_DEMANDA
		WHERE RCV.TIPO_PROCEDI = 'CONCURSO' ;

COMMIT;

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.IMPORTE_DEMANDA', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros actualizados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se va a actualizar MINIREC.RCV_GEST_PDM_LITIGIO.FECHA_DEMANDA.');

-- FECHA DEMANDA CONCURSOS

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.FECHA_DEMANDA', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

MERGE INTO #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO RCV
USING 
	(SELECT distinct TO_DATE(TEV_VALOR, 'YYYY-MM-DD') TEV_VALOR, ASU.ASU_ID_EXTERNO
	FROM #ESQUEMA#.ASU_ASUNTOS 														ASU 
		INNER JOIN #ESQUEMA#.PRC_PROCEDIMIENTOS 									PRC 
			ON PRC.ASU_ID = ASU.ASU_ID 
				INNER JOIN #ESQUEMA#.TAR_TAREAS_NOTIFICACIONES 						TAR 
					ON TAR.PRC_ID = PRC.PRC_ID 
				INNER JOIN #ESQUEMA#.TEX_TAREA_EXTERNA 								TEX 
					ON TEX.TAR_ID = TAR.TAR_ID 
						AND TEX.TAP_ID = 
								(SELECT TAP_ID 
								FROM #ESQUEMA#.TAP_TAREA_PROCEDIMIENTO 
								WHERE TAP_CODIGO = 'P412_RegistrarPublicacionBOE') 
				INNER JOIN #ESQUEMA#.TEV_TAREA_EXTERNA_VALOR 						TEV 
					ON TEV.TEX_ID = TEX.TEX_ID 
						AND TEV.TEV_NOMBRE = 'fechaAuto'
	 ) SRC
ON (RCV.ID_PROCEDI = SRC.ASU_ID_EXTERNO)                       
WHEN MATCHED 
THEN UPDATE 
	SET RCV.FECHA_DEMANDA = SRC.TEV_VALOR
WHERE RCV.TIPO_PROCEDI = 'CONCURSO';

COMMIT;

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.FECHA_DEMANDA', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros actualizados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se va a actualizar MINIREC.RCV_GEST_PDM_LITIGIO.COD9Z0 Y MINIREC.RCV_GEST_PDM_LITIGIO.COD9DN.');

-- COD9DZ, COD9DN
-- SE HA CAMBIADO ALIAS POR RCV (ERA PDM), PARA CONTINUAR COMO ARRIBA

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.COD9ZO,COD9DN', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

MERGE INTO #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO RCV
USING 
	(SELECT DISTINCT 
		AUX.DZ,
		AUX.DT,
		AUX.CNT_ID
	FROM 
		(SELECT DISTINCT
			LPAD(DZ.OFI_CODIGO_OFICINA,4,'0') DZ,
			LPAD(DT.OFI_CODIGO_OFICINA,4,'0') DT,
			CNT.CNT_ID       
		FROM #ESQUEMA#.CNT_CONTRATOS 								CNT 
			INNER JOIN #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO 		RCV 
				ON CNT.CNT_ID = RCV.ID_CUENTA_RCV 
			LEFT JOIN #ESQUEMA#.OFI_OFICINAS 						OFI 
				ON OFI.OFI_ID = CNT.OFI_ID_ADMIN 
			LEFT JOIN #ESQUEMA#.ZON_ZONIFICACION 					ZONOFI 
				ON ZONOFI.OFI_ID = OFI.OFI_ID 
			LEFT JOIN #ESQUEMA#.ZON_ZONIFICACION 					ZONDZ 
				ON ZONDZ.ZON_ID = ZONOFI.ZON_PID 
			LEFT JOIN #ESQUEMA#.OFI_OFICINAS 						DZ 
				ON DZ.OFI_ID = ZONDZ.OFI_ID 
			LEFT JOIN #ESQUEMA#.ZON_ZONIFICACION 					ZONDT 
				ON ZONDT.ZON_ID = ZONDZ.ZON_PID 
			LEFT JOIN #ESQUEMA#.OFI_OFICINAS 						DT 
				ON DT.OFI_ID = ZONDT.OFI_ID 
			LEFT JOIN #ESQUEMA#.OFI_OFICINAS 						OFICENTRO 
				ON OFICENTRO.OFI_CODIGO = CNT.CNT_COD_CENTRO
        ) AUX
    ) SRC
ON (RCV.ID_CUENTA_RCV = SRC.CNT_ID)
WHEN MATCHED 
THEN UPDATE 
SET RCV.COD9ZO = SRC.DZ,
	RCV.COD9DN = SRC.DT ;

COMMIT;

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.COD9ZO,COD9DN', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros actualizados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se va a actualizar MINIREC.RCV_GEST_PDM_LITIGIO.CENTRO_RECUP.');
			
-- CENTRO RECUPERACION

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.CENTRO_RECUP', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

MERGE INTO #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO RCV
USING (WITH PERSONAS_OFI_GESTORA AS 
		(SELECT ICC.PER_ID, ICC.ICC_VALUE
		FROM #ESQUEMA#.EXT_ICC_INFO_EXTRA_CLI ICC
			INNER JOIN #ESQUEMA#.EXT_DD_IFX_INFO_EXTRA_CLI IFX
				ON IFX.DD_IFX_ID = ICC.DD_IFX_ID 
					AND DD_IFX_CODIGO = 'COD_OFICINA_GESTORA'
		)
		SELECT CENTRO_RECUPERACIONES, CNT_ID
		FROM 
			(SELECT DISTINCT  
				LPAD(OFICR.OFI_CODIGO_OFICINA,4,'0') CENTRO_RECUPERACIONES,
				CPE.CNT_ID,
				ROW_NUMBER () OVER (PARTITION BY CPE.CNT_ID ORDER BY CPE.CPE_ORDEN) RN
			FROM #ESQUEMA#.CPE_CONTRATOS_PERSONAS 					CPE  
				INNER JOIN #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO 	RCV 
					ON CPE.CNT_ID = RCV.ID_CUENTA_RCV 
				INNER JOIN #ESQUEMA#.DD_TIN_TIPO_INTERVENCION 		TIN 
					ON TIN.DD_TIN_ID = CPE.DD_TIN_ID 
						AND TIN.DD_TIN_TITULAR = 1 
				INNER JOIN PERSONAS_OFI_GESTORA 
					ON PERSONAS_OFI_GESTORA.PER_ID = CPE.PER_ID 
				INNER JOIN #ESQUEMA#.OFI_OFICINAS 					OFICR 
					ON TO_CHAR(OFICR.OFI_CODIGO_OFICINA) = PERSONAS_OFI_GESTORA.ICC_VALUE
			) ORDEN 
			WHERE RN = 1
		) SRC
ON (RCV.ID_CUENTA_RCV = SRC.CNT_ID)
WHEN MATCHED 
THEN UPDATE 
SET RCV.CENTRO_RECUP = SRC.CENTRO_RECUPERACIONES;

COMMIT;

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PDM_LITIGIO', 'MERGE EN MINIREC.RCV_GEST_PDM_LITIGIO.CENTRO_RECUP', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

DBMS_OUTPUT.PUT_LINE('[INFO] Registros actualizados en MINIREC.RCV_GEST_PDM_LITIGIO.');

DBMS_OUTPUT.PUT_LINE('[FIN]: Script ejecutado correctamente');



EXCEPTION
	
	WHEN OTHERS THEN
     
		DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion: '||TO_CHAR(SQLCODE));
		DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
		DBMS_OUTPUT.put_line(SQLERRM);

    ROLLBACK;
    RAISE;          

END GEST_PDM_LITIGIO;
/

EXIT;
