--/*
--##########################################
--## AUTOR=David González
--## FECHA_CREACION=20151030
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.1
--## INCIDENCIA_LINK=BKREC-1335
--## PRODUCTO=NO
--## 
--## Finalidad: 
--## INSTRUCCIONES:  
--## VERSIONES:
--##        	0.1 Versión inicial
--##		
--##########################################
--*/
 
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE GEST_CUENTA_PDM AUTHID CURRENT_USER AS

BEGIN
/* v0.1 */

	INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_CUENTA_PDM', 'INSERT EN MINIREC.RCV_GEST_CUENTA_PDM', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

	DBMS_OUTPUT.PUT_LINE('[INFO] La tabla MINIREC.RCV_GEST_CUENTA_PDM va a ser truncada.');

	#ESQUEMA_MINIREC#.OPERACION_DDL.DDL_TABLE('TRUNCATE','RCV_GEST_CUENTA_PDM');

COMMIT;

DBMS_OUTPUT.PUT_LINE('[INFO] Tabla MINIREC.RCV_GEST_CUENTA_PDM truncada.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se van a insertar registros en MINIREC.RCV_GEST_CUENTA_PDM.');

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_CUENTA_PDM
	WITH 
	ULT_PROC AS (
		SELECT /*+ MATERIALIZE */ PRC_ID, ASU_ID, DD_TPO_CODIGO
		FROM 
			(SELECT /*+ MATERIALIZE */ PRC.PRC_ID, PRC.ASU_ID, PRC.FECHACREAR, DD_TPO.DD_TPO_CODIGO
				,ROW_NUMBER() OVER (PARTITION BY PRC.ASU_ID ORDER BY PRC.PRC_ID DESC) PROC_NUM
			FROM #ESQUEMA#.PRC_PROCEDIMIENTOS PRC
				INNER JOIN #ESQUEMA#.DD_TPO_TIPO_PROCEDIMIENTO DD_TPO 
					ON PRC.DD_TPO_ID = DD_TPO.DD_TPO_ID
			WHERE PRC.BORRADO = 0
			)
		WHERE PROC_NUM = 1
	),
	ULT_MOVIMIENTO_CNT AS (
		SELECT /*+ MATERIALIZE */ CNT_ID, MOV_POS_VIVA_NO_VENCIDA, MOV_POS_VIVA_VENCIDA, MOV_INT_REMUNERATORIOS, MOV_INT_MORATORIOS, MOV_GASTOS, MOV_COMISIONES, MOV_IMPUESTOS 
		FROM 
			(SELECT MOV.CNT_ID
				,ROW_NUMBER () OVER (PARTITION BY MOV.CNT_ID ORDER BY MOV.MOV_FECHA_EXTRACCION DESC) RN
				,MOV.MOV_POS_VIVA_NO_VENCIDA 
				,MOV.MOV_POS_VIVA_VENCIDA 
				,MOV.MOV_INT_REMUNERATORIOS 
				,MOV.MOV_INT_MORATORIOS 
				,MOV.MOV_GASTOS 
				,MOV.MOV_COMISIONES 
				,MOV.MOV_IMPUESTOS
				FROM #ESQUEMA#.MOV_MOVIMIENTOS MOV
			) TMP_MOV
		WHERE RN = 1
	)
	SELECT DISTINCT TO_NUMBER(ASU.ASU_ID_EXTERNO) 	ID_PROCEDI
			,CEX.EXP_ID 								ID_EXPEDIENTE_RCV
			,ASU.ASU_ID 								ID_ASUNTO_RCV
			,PDM.ID_PROCEDI_RCV
			,CNT.CNT_ID 								ID_CUENTA_RCV
		,NULL RELACION_CTA
		,CASE DD_PAS.DD_PAS_CODIGO
			WHEN 'BANKIA' 
				THEN '00000'
			WHEN 'SAREB' 
				THEN '05074'
			ELSE NULL
			END ENTIDAD
		,SUBSTR(CNT_CONTRATO,6,5) 						CLASE_P_P
		,SUBSTR(CNT.CNT_CONTRATO,11,17) 				NUM_CUENTA 
		,CONCAT('00',SUBSTR(CNT.CNT_CONTRATO,28,15)) 	NUMERO_ESPEC
		,OFI.OFI_CODIGO_OFICINA 						OFICINA_PRODUCTO
		,DECODE(UPPER(ESC.DD_ESC_DESCRIPCION), 'ACTIVO', MOV.MOV_POS_VIVA_NO_VENCIDA,0) 	CAPITAL_PENDIENTE
		,DECODE(UPPER(ESC.DD_ESC_DESCRIPCION), 'ACTIVO', MOV.MOV_POS_VIVA_VENCIDA,0) 		CAPITAL_VENCIDO
		,DECODE(UPPER(ESC.DD_ESC_DESCRIPCION), 'ACTIVO', MOV.MOV_INT_REMUNERATORIOS,0) 		INTERESES_VENCIDOS
		,DECODE(UPPER(ESC.DD_ESC_DESCRIPCION), 'ACTIVO', MOV.MOV_INT_MORATORIOS,0) 			INTERESES_DEMORA
		,DECODE(UPPER(ESC.DD_ESC_DESCRIPCION), 'ACTIVO', MOV.MOV_GASTOS,0) 					GASTOS
		,DECODE(UPPER(ESC.DD_ESC_DESCRIPCION), 'ACTIVO', MOV.MOV_COMISIONES,0) 				COMISIONES_TOTALES
		,DECODE(UPPER(ESC.DD_ESC_DESCRIPCION), 'ACTIVO', MOV.MOV_IMPUESTOS,0) 				IMPUESTOS
		,GES.DD_GES_CODIGO 																	IND_GEST_HAYA
	FROM #ESQUEMA#.ASU_ASUNTOS ASU
		INNER JOIN #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO 						PDM 
			ON PDM.ID_ASUNTO_RCV = ASU.ASU_ID
		LEFT JOIN #ESQUEMA#.DD_PAS_PROPIEDAD_ASUNTO 							DD_PAS 
			ON ASU.DD_PAS_ID = DD_PAS.DD_PAS_ID
		LEFT JOIN #ESQUEMA_MASTER#.DD_EAS_ESTADO_ASUNTOS 						DD_EAS 
			ON ASU.DD_EAS_ID = DD_EAS.DD_EAS_ID
		INNER JOIN ULT_PROC 													ULTPRC 
			ON ASU.ASU_ID = ULTPRC.ASU_ID
		INNER JOIN #ESQUEMA#.PRC_CEX 											PRCCEX 
			ON ULTPRC.PRC_ID = PRCCEX.PRC_ID
		INNER JOIN #ESQUEMA#.CEX_CONTRATOS_EXPEDIENTE 							CEX 
			ON PRCCEX.CEX_ID = CEX.CEX_ID
		INNER JOIN #ESQUEMA#.CNT_CONTRATOS 										CNT 
			ON CEX.CNT_ID = CNT.CNT_ID 
				AND CNT.BORRADO = 0 
		LEFT JOIN #ESQUEMA_MASTER#.DD_ESC_ESTADO_CNT 							ESC 
			ON ESC.DD_ESC_ID = CNT.DD_ESC_ID
		LEFT JOIN #ESQUEMA#.EXT_IAC_INFO_ADD_CONTRATO 							EXT 
			ON EXT.CNT_ID = CNT.CNT_ID
				AND EXT.DD_IFC_ID IN (SELECT /*+ MATERIALIZE */ DD.DD_IFC_ID 
									FROM #ESQUEMA#.EXT_DD_IFC_INFO_CONTRATO DD 
									WHERE DD.DD_IFC_CODIGO = 'NUMERO_ESPEC')
		INNER JOIN ULT_MOVIMIENTO_CNT 											MOV 
			ON CNT.CNT_ID = MOV.CNT_ID 
		LEFT JOIN #ESQUEMA#.OFI_OFICINAS 										OFI 
			ON CNT.OFI_ID_ADMIN = OFI.OFI_ID
		LEFT JOIN #ESQUEMA#.DD_GES_GESTION_ASUNTO 								GES 
			ON ASU.DD_GES_ID = GES.DD_GES_ID
	WHERE ASU.BORRADO = 0;

COMMIT;

DBMS_OUTPUT.PUT_LINE('[INFO] Registros insertados en MINIREC.RCV_GEST_CUENTA_PDM.');

DBMS_OUTPUT.PUT_LINE('[FIN]: Script ejecutado correctamente');

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_CUENTA_PDM', 'INSERT EN MINIREC.RCV_GEST_CUENTA_PDM', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

EXCEPTION
	
	WHEN OTHERS 
	THEN
		 
		DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion: '||TO_CHAR(SQLCODE));
		DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
		DBMS_OUTPUT.put_line(SQLERRM);

	ROLLBACK;
	RAISE;          

END GEST_CUENTA_PDM;
/

EXIT;
