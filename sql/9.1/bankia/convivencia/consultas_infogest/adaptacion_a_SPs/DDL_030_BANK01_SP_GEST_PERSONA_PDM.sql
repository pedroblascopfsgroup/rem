--/*
--##########################################
--## AUTOR=David González
--## FECHA_CREACION=20151030
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.1
--## INCIDENCIA_LINK=BKREC-1335
--## PRODUCTO=NO
--## 
--## Finalidad: 
--## INSTRUCCIONES:  
--## VERSIONES:
--##        	0.1 Versión inicial
--##		
--##########################################
--*/

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE GEST_PERSONA_PDM AUTHID CURRENT_USER AS

BEGIN
/* v0.1 */

	INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PERSONA_PDM', 'INSERT EN MINIREC.RCV_GEST_PERSONA_PDM', 'INICIO', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

	DBMS_OUTPUT.PUT_LINE('[INFO] La tabla MINIREC.RCV_GEST_PERSONA_PDM va a ser truncada.');

	#ESQUEMA_MINIREC#.OPERACION_DDL.DDL_TABLE('TRUNCATE','RCV_GEST_PERSONA_PDM');

COMMIT;

DBMS_OUTPUT.PUT_LINE('[INFO] Tabla MINIREC.RCV_GEST_PERSONA_PDM truncada.');

DBMS_OUTPUT.PUT_LINE('[INFO] Se van a insertar registros en MINIREC.RCV_GEST_PERSONA_PDM.');

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_PERSONA_PDM
	WITH 
	ULTIMO_TAREA_PRP AS 
		(SELECT /*+ MATERIALIZE */ PRC_ID, DD_TPO_ID, TAP_CODIGO, TAP_DESCRIPCION, TAR_FECHA_FIN, COD_HITO_NAL
			   , ROW_NUMBER() OVER (PARTITION BY ASU_ID ORDER BY TAR_ID DESC
		) ORDEN
		 FROM 
			(SELECT DISTINCT PRC.PRC_ID, PRC.DD_TPO_ID , TAR.ASU_ID , TAR.TAR_ID
					 , tap.tap_codigo, tap.tap_descripcion, tar.tar_fecha_fin
					 , trd.cod_hito_nal
			FROM #ESQUEMA#.PRC_PROCEDIMIENTOS          	PRC
				,#ESQUEMA#.TAR_TAREAS_NOTIFICACIONES   	TAR
				,#ESQUEMA#.TEX_TAREA_EXTERNA           	TEX
				,#ESQUEMA#.TAP_TAREA_PROCEDIMIENTO     	TAP
				,#ESQUEMA#.AUX_THR_TRADUC_HITOS_RECNAL 	TRD
				,#ESQUEMA#.DD_TPO_TIPO_PROCEDIMIENTO 	TPO
			WHERE PRC.ASU_ID = TAR.ASU_ID
				AND PRC.DD_TPO_ID = TAP.DD_TPO_ID
				AND TAP.DD_TPO_ID = TPO.DD_TPO_ID
				AND TAP.TAP_CODIGO = TRD.TAP_CODIGO
				AND TRD.DD_TPO_CODIGO = TPO.DD_TPO_CODIGO
				AND SUBSTR(TRD.COD_HITO_NAL,1,1) = 'A'
				AND TAR.TAR_ID = TEX.TAR_ID
				AND TEX.TAP_ID = TAP.TAP_ID
				AND TAR.BORRADO <> 0
			UNION
				SELECT DISTINCT PRC.PRC_ID, PRC.DD_TPO_ID , TAR.ASU_ID , TAR.TAR_ID
					 , TAP.TAP_CODIGO, TAP.TAP_DESCRIPCION, TAR.TAR_FECHA_FIN
					 , TRD.COD_HITO_NAL
				FROM #ESQUEMA#.PRC_PROCEDIMIENTOS          		PRC
					 , #ESQUEMA#.TAR_TAREAS_NOTIFICACIONES   	TAR
					 , #ESQUEMA#.TEX_TAREA_EXTERNA           	TEX
					 , #ESQUEMA#.TAP_TAREA_PROCEDIMIENTO     	TAP
					 , #ESQUEMA#.AUX_THR_TRADUC_HITOS_RECNAL 	TRD
					 , #ESQUEMA#.DD_TPO_TIPO_PROCEDIMIENTO 		TPO
				WHERE PRC.ASU_ID = TAR.ASU_ID
				   AND PRC.DD_TPO_ID = TAP.DD_TPO_ID
				   AND TAP.DD_TPO_ID = TPO.DD_TPO_ID
				   AND TAP.TAP_CODIGO = TRD.TAP_CODIGO
				   AND TRD.DD_TPO_CODIGO = TPO.DD_TPO_CODIGO
				   AND TRD.COD_HITO_NAL = 'A0000'
				   AND TAR.TAR_ID = TEX.TAR_ID
				   AND TEX.TAP_ID = TAP.TAP_ID
				   AND (TAR.BORRADO=0 AND TAR.TAR_TAREA_FINALIZADA=0)
			)
		),
	FECHAS AS(
		SELECT B.PRC_ID
			 , MAX(CASE WHEN E.TAP_CODIGO = 'P22_AutoDeclarandoConcurso'
				AND D.TEV_NOMBRE = 'fecha'
				THEN TO_DATE(D.TEV_VALOR,'YYYY-MM-DD') 
				ELSE NULL 
				END) AS FECHA_AUTO_DECLARACION
			 , MAX(CASE WHEN E.TAP_CODIGO = 'P17_RegistrarResolucion'
				AND D.TEV_NOMBRE = 'fechaResolucion'
				THEN TO_DATE(D.TEV_VALOR,'YYYY-MM-DD') 
				ELSE NULL 
				END) AS FECHA_RESOLUCION
		FROM #ESQUEMA#.PRC_PROCEDIMIENTOS 			A
			,#ESQUEMA#.TAR_TAREAS_NOTIFICACIONES 	B
			,#ESQUEMA#.TEX_TAREA_EXTERNA 			C
			,#ESQUEMA#.TEV_TAREA_EXTERNA_VALOR 		D
			,#ESQUEMA#.TAP_TAREA_PROCEDIMIENTO 		E
		WHERE A.PRC_ID = B.PRC_ID
			AND B.TAR_ID = C.TAR_ID
			AND C.TEX_ID = D.TEX_ID
			AND C.TAP_ID = E.TAP_ID
			AND E.DD_TPO_ID = A.DD_TPO_ID
			AND E.TAP_CODIGO(+) IN ('P22_AutoDeclarandoConcurso','P17_RegistrarResolucion')
			AND D.TEV_NOMBRE(+) IN ('fechaResolucion','fecha')
		GROUP BY B.PRC_ID
	),
	PERSONAS_TITULARES AS (
		SELECT PER_ID, CPE_ORDEN, RELACION_PDM
		FROM (
			SELECT PER.PER_ID, CPE.CPE_ORDEN, 'TIT' RELACION_PDM,
				ROW_NUMBER () OVER(PARTITION BY PER.PER_ID ORDER BY CPE.CPE_ORDEN ASC) RN_ORDEN
			FROM #ESQUEMA#.PER_PERSONAS 							PER
				INNER JOIN #ESQUEMA#.CPE_CONTRATOS_PERSONAS 		CPE 
					ON PER.PER_ID = cpe.PER_ID
				INNER JOIN #ESQUEMA#.DD_TIN_TIPO_INTERVENCION 		TIN 
					ON TIN.DD_TIN_ID = CPE.DD_TIN_ID
			WHERE TIN.DD_TIN_TITULAR = 1)
		WHERE RN_ORDEN = 1
	),
	PERSONAS_AVALISTAS AS (
		SELECT PER_ID, CPE_ORDEN, RELACION_PDM
		FROM (
			SELECT PER.PER_ID, CPE.CPE_ORDEN, 'FIA' RELACION_PDM,
				ROW_NUMBER () OVER(PARTITION BY PER.PER_ID ORDER BY CPE.CPE_ORDEN ASC) RN_ORDEN
			FROM #ESQUEMA#.PER_PERSONAS 						PER
				INNER JOIN #ESQUEMA#.CPE_CONTRATOS_PERSONAS 	CPE 
					on PER.PER_ID = CPE.PER_ID
				INNER JOIN #ESQUEMA#.DD_TIN_TIPO_INTERVENCION 	TIN 
					on TIN.DD_TIN_ID = CPE.DD_TIN_ID
			WHERE TIN.DD_TIN_AVALISTA = 1 AND TIN.DD_TIN_TITULAR = 0)
		WHERE RN_ORDEN = 1
	),
	PERSONAS_OTROS AS (
		SELECT PER_ID, CPE_ORDEN, RELACION_PDM
		FROM (
			SELECT per.PER_ID, cpe.CPE_ORDEN, 'OTR' RELACION_PDM,
				ROW_NUMBER () OVER(PARTITION BY PER.PER_ID ORDER BY CPE.CPE_ORDEN ASC) RN_ORDEN
			FROM #ESQUEMA#.PER_PERSONAS 						PER
				INNER JOIN #ESQUEMA#.CPE_CONTRATOS_PERSONAS 	CPE 
					ON PER.PER_ID = CPE.PER_ID
				INNER JOIN #ESQUEMA#.DD_TIN_TIPO_INTERVENCION 	TIN 
					ON TIN.DD_TIN_ID = CPE.DD_TIN_ID
			WHERE TIN.DD_TIN_AVALISTA = 0 AND TIN.DD_TIN_TITULAR = 0)
		WHERE RN_ORDEN = 1
	)
	SELECT DISTINCT
		   GUI.ID_PROCEDI                        AS ID_PROCEDI
		 , GUI.ID_PROCEDI_RCV
		 , PER.PER_ID                            AS ID_PERSONA_RCV
		 , TO_CHAR(PER.PER_COD_CLIENTE_ENTIDAD)  AS NUMERO_PERSONA
		 , COALESCE(PERSONAS_TITULARES.CPE_ORDEN,PERSONAS_AVALISTAS.CPE_ORDEN,PERSONAS_OTROS.CPE_ORDEN) AS ORDEN_PER_PDM
		 , COALESCE(PERSONAS_TITULARES.RELACION_PDM,PERSONAS_AVALISTAS.RELACION_PDM,PERSONAS_OTROS.RELACION_PDM) AS REL_PER_PDM
		 , ULT.COD_HITO_NAL                      AS HITO_MAS_AVANZADO
		 , ULT.TAR_FECHA_FIN                     AS F_HITO_MAS_AVANZADO
		 , ULT.TAP_CODIGO                        AS ID_ULT_TAR_REALIZADA_RCV
		 , ULT.TAP_DESCRIPCION                   AS ULT_TAR_REALIZADA_RCV
		 , FECHAS.FECHA_AUTO_DECLARACION
		 , FECHAS.FECHA_RESOLUCION
	 FROM #ESQUEMA_MINIREC#.RCV_GEST_PDM_LITIGIO       GUI 
		 , #ESQUEMA#.PRC_PROCEDIMIENTOS          		PRC
		 , #ESQUEMA#.PRC_PER                     		PRP
		 , #ESQUEMA#.PER_PERSONAS                		PER
		 , ULTIMO_TAREA_PRP                   			ULT
		 , FECHAS
		 , PERSONAS_TITULARES
		 , PERSONAS_AVALISTAS
		 , PERSONAS_OTROS
	 WHERE GUI.ID_ASUNTO_RCV = PRC.ASU_ID
		AND PRC.PRC_ID = ULT.PRC_ID AND ULT.ORDEN = 1
		AND PRC.DD_TPO_ID = ULT.DD_TPO_ID
		AND PRC.PRC_ID = PRP.PRC_ID (+)
		AND PRP.PER_ID = PER.PER_ID (+)
		AND PRC.PRC_ID = FECHAS.PRC_ID (+)
		AND PER.PER_ID = PERSONAS_TITULARES.PER_ID (+)
		AND PER.PER_ID = PERSONAS_AVALISTAS.PER_ID (+)
		AND PER.PER_ID = PERSONAS_OTROS.PER_ID (+);
   
COMMIT;

DBMS_OUTPUT.PUT_LINE('[INFO] Registros insertados en MINIREC.RCV_GEST_PERSONA_PDM.');

DBMS_OUTPUT.PUT_LINE('[FIN]: Script ejecutado correctamente');

INSERT INTO #ESQUEMA_MINIREC#.RCV_GEST_LOG VALUES (#ESQUEMA_MINIREC#.S_RCV_GEST_LOG.NEXTVAL, 'RCV_GEST_PERSONA_PDM', 'INSERT EN MINIREC.RCV_GEST_PERSONA_PDM', 'FIN', TO_CHAR(SYSTIMESTAMP, 'DD/MM/RR HH24:MI:SS'));

EXCEPTION
	
	WHEN OTHERS THEN
		 
		DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion: '||TO_CHAR(SQLCODE));
		DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
		DBMS_OUTPUT.put_line(SQLERRM);

	ROLLBACK;
	RAISE;          

END GEST_PERSONA_PDM;
/

EXIT;
