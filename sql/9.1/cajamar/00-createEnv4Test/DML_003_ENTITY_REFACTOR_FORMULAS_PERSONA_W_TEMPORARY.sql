WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

BEGIN

EXECUTE IMMEDIATE 'TRUNCATE TABLE CM01.PER_PERSONAS_FORMULAS';
COMMIT;
EXECUTE IMMEDIATE 'TRUNCATE TABLE CM01.TMP_PER_MOV';
COMMIT;

EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.PER_PERSONAS  COMPUTE STATISTICS';
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.CNT_CONTRATOS  COMPUTE STATISTICS';
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.MOV_MOVIMIENTOS  COMPUTE STATISTICS';
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.CPE_CONTRATOS_PERSONAS  COMPUTE STATISTICS';
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.CLI_CLIENTES COMPUTE STATISTICS';
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.EXP_EXPEDIENTES COMPUTE STATISTICS';
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.PEX_PERSONAS_EXPEDIENTE COMPUTE STATISTICS';
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.CEX_CONTRATOS_EXPEDIENTE COMPUTE STATISTICS';
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.CPE_CONTRATOS_PERSONAS COMPUTE STATISTICS';
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.EXT_DD_IFX_INFO_EXTRA_CLI COMPUTE STATISTICS';
COMMIT;


INSERT /*+ APPEND */ INTO  CM01.TMP_PER_EST_CICLO_VIDA
SELECT PER_ID, EST.DD_ECV_DESCRIPCION 
FROM CM01.PER_PERSONAS C
  INNER JOIN CM01.DD_ECV_ESTADO_CICLO_VIDA EST ON TRIM(C.PER_ECV) = TRIM(EST.DD_ECV_CODIGO)
WHERE  C.BORRADO = 0 ;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.TMP_PER_EST_CICLO_VIDA  COMPUTE STATISTICS';

INSERT /*+ APPEND */ INTO CM01.TMP_PER_MOV
SELECT CPE.PER_ID, MOV.MOV_ID, TIN.DD_TIN_TITULAR
FROM CM01.CPE_CONTRATOS_PERSONAS CPE
  JOIN CM01.DD_TIN_TIPO_INTERVENCION TIN ON CPE.DD_TIN_ID = TIN.DD_TIN_ID
  JOIN CM01.CNT_CONTRATOS CNT ON CPE.CNT_ID = CNT.CNT_ID
    JOIN CM01.MOV_MOVIMIENTOS MOV ON CNT.CNT_ID = MOV.CNT_ID AND CNT.CNT_FECHA_EXTRACCION = MOV.MOV_FECHA_EXTRACCION;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE CM01.TMP_PER_MOV  COMPUTE STATISTICS';  

--BEGIN  
  UTILES.ANALIZA_TABLA('cm01','TMP_PER_MOV');
--END;
--/

INSERT /*+ APPEND */ INTO CM01.TMP_PER_DVENC_RIES_DIREC          
SELECT CPE.PER_ID, FLOOR(SYSDATE-MIN(MOV.MOV_FECHA_POS_VENCIDA)) MIN_MOV_FECHA_POS_VENCIDA 
FROM CM01.CPE_CONTRATOS_PERSONAS CPE
  JOIN CM01.TMP_PER_MOV REL ON CPE.PER_ID = REL.PER_ID AND REL.DD_TIN_TITULAR = 1
  JOIN CM01.MOV_MOVIMIENTOS MOV ON MOV.MOV_ID = REL.MOV_ID
GROUP BY CPE.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_DVENC_RIES_DIREC COMPUTE STATISTICS';
          
INSERT /*+ APPEND  */ INTO CM01.TMP_PER_DVENC_RIES_INDIREC
SELECT CPE.PER_ID, FLOOR(SYSDATE-MIN(MOV.MOV_FECHA_POS_VENCIDA)) 
FROM CM01.CPE_CONTRATOS_PERSONAS CPE
  JOIN CM01.TMP_PER_MOV REL ON CPE.PER_ID = REL.PER_ID AND REL.DD_TIN_TITULAR = 0
  JOIN CM01.MOV_MOVIMIENTOS MOV ON MOV.MOV_ID = REL.MOV_ID
GROUP BY CPE.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_DVENC_RIES_INDIREC COMPUTE STATISTICS';
          
INSERT /*+ APPEND */ INTO CM01.TMP_PER_RIESGO_TOTAL
SELECT CPE.PER_ID, SUM(MOV.MOV_POS_VIVA_VENCIDA + MOV.MOV_POS_VIVA_NO_VENCIDA)
FROM CM01.CPE_CONTRATOS_PERSONAS CPE
  JOIN CM01.TMP_PER_MOV REL ON CPE.PER_ID = REL.PER_ID
  JOIN CM01.MOV_MOVIMIENTOS MOV ON MOV.MOV_ID = REL.MOV_ID
GROUP BY CPE.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_RIESGO_TOTAL COMPUTE STATISTICS';

INSERT /*+ APPEND */ INTO CM01.TMP_PER_RIESGO_TOTAL_DIRECTO
SELECT CPE.PER_ID, SUM(MOV.MOV_POS_VIVA_VENCIDA + MOV.MOV_POS_VIVA_NO_VENCIDA)
FROM CM01.CPE_CONTRATOS_PERSONAS CPE
  JOIN CM01.TMP_PER_MOV REL ON CPE.PER_ID = REL.PER_ID AND REL.DD_TIN_TITULAR = 1
  JOIN CM01.MOV_MOVIMIENTOS MOV ON MOV.MOV_ID = REL.MOV_ID
GROUP BY CPE.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_RIESGO_TOTAL_DIRECTO COMPUTE STATISTICS';

INSERT /*+ APPEND */ INTO CM01.TMP_PER_RIESGO_TOTAL_INDIRECTO
SELECT CPE.PER_ID, SUM(MOV.MOV_POS_VIVA_VENCIDA + MOV.MOV_POS_VIVA_NO_VENCIDA)
FROM CM01.CPE_CONTRATOS_PERSONAS CPE
  JOIN CM01.TMP_PER_MOV REL ON CPE.PER_ID = REL.PER_ID AND REL.DD_TIN_TITULAR = 0
  JOIN CM01.MOV_MOVIMIENTOS MOV ON MOV.MOV_ID = REL.MOV_ID
GROUP BY CPE.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_RIESGO_TOTAL_INDIRECTO COMPUTE STATISTICS';

INSERT /*+ APPEND  */ INTO CM01.TMP_PER_SITUACION_CLIENTE
SELECT  C.PER_ID, EST.DD_EST_DESCRIPCION 
FROM CM01.CLI_CLIENTES C
  JOIN CMMASTER.DD_EST_ESTADOS_ITINERARIOS EST ON C.DD_EST_ID = EST.DD_EST_ID
WHERE C.BORRADO = 0;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_SITUACION_CLIENTE COMPUTE STATISTICS';

INSERT INTO /*+ APPEND */ CM01.TMP_PER_DIAS_VENCIDO
SELECT CPE.PER_ID, FLOOR(SYSDATE-MIN(MOV.MOV_FECHA_POS_VENCIDA)) 
FROM CM01.CPE_CONTRATOS_PERSONAS CPE
  JOIN CM01.TMP_PER_MOV REL ON CPE.PER_ID = REL.PER_ID
  JOIN CM01.MOV_MOVIMIENTOS MOV ON MOV.MOV_ID = REL.MOV_ID
GROUP BY CPE.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_DIAS_VENCIDO COMPUTE STATISTICS';

INSERT /*+ APPEND */ INTO CM01.TMP_PER_NUM_EXP_ACTIVOS
SELECT PEX.PER_ID, COUNT(DISTINCT EXP.EXP_ID) 
FROM CM01.EXP_EXPEDIENTES EXP 
   JOIN CM01.PEX_PERSONAS_EXPEDIENTE PEX ON PEX.EXP_ID = EXP.EXP_ID 
  JOIN CMMASTER.DD_EEX_ESTADO_EXPEDIENTE DD_EEX ON EXP.DD_EEX_ID = DD_EEX.DD_EEX_ID 
WHERE PEX.BORRADO = 0 AND EXP.BORRADO = 0 AND DD_EEX.DD_EEX_CODIGO IN ('1','4','2')
GROUP  BY PEX.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_NUM_EXP_ACTIVOS COMPUTE STATISTICS';

INSERT /*+ APPEND */ INTO CM01.TMP_PER_NUM_ASU_ACTIVOS
SELECT CPE.PER_ID , COUNT (DISTINCT ASU.ASU_ID) FROM CM01.ASU_ASUNTOS ASU JOIN CM01.PRC_PROCEDIMIENTOS PRC ON PRC.ASU_ID = ASU.ASU_ID
            JOIN CM01.PRC_CEX PC ON PC.PRC_ID = PRC.PRC_ID JOIN CM01.CEX_CONTRATOS_EXPEDIENTE CEX ON PC.CEX_ID = CEX.CEX_ID
            JOIN CM01.CNT_CONTRATOS CNT ON CEX.CNT_ID = CNT.CNT_ID JOIN CM01.CPE_CONTRATOS_PERSONAS CPE ON CPE.CNT_ID = CNT.CNT_ID
            JOIN CMMASTER.DD_EAS_ESTADO_ASUNTOS DD_EAS ON ASU.DD_EAS_ID = DD_EAS.DD_EAS_ID
            WHERE ASU.BORRADO = 0 AND PRC.BORRADO = 0 AND DD_EAS.DD_EAS_CODIGO IN ('03','01','02')
GROUP BY CPE.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_NUM_ASU_ACTIVOS COMPUTE STATISTICS';

INSERT /*+ APPEND  */ INTO CM01.TMP_PER_NUM_ASU_ACT_POR_PRC
SELECT PRCPER.PER_ID, COUNT (DISTINCT ASU.ASU_ID) 
FROM CM01.ASU_ASUNTOS ASU JOIN CM01.PRC_PROCEDIMIENTOS PRC ON PRC.ASU_ID = ASU.ASU_ID
  JOIN CM01.PRC_PER PRCPER ON PRC.PRC_ID = PRCPER.PRC_ID
WHERE ASU.BORRADO = 0 AND PRC.BORRADO = 0
GROUP BY PRCPER.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_NUM_ASU_ACT_POR_PRC COMPUTE STATISTICS';

INSERT /*+ APPEND  */ INTO CM01.TMP_PER_SITUACION
SELECT PER_ID, VALUE FROM (
  SELECT  CPE.PER_ID, COALESCE ((SELECT CASE WHEN COUNT (DISTINCT ASU.ASU_ID) > 0
            THEN 'En Asunto' ELSE NULL END FROM CM01.ASU_ASUNTOS ASU JOIN CM01.PRC_PROCEDIMIENTOS PRC ON PRC.ASU_ID = ASU.ASU_ID
            JOIN CM01.PRC_CEX PC ON PC.PRC_ID = PRC.PRC_ID JOIN CM01.CEX_CONTRATOS_EXPEDIENTE CEX ON PC.CEX_ID = CEX.CEX_ID
            JOIN CM01.CNT_CONTRATOS CNT ON CEX.CNT_ID = CNT.CNT_ID JOIN CM01.CPE_CONTRATOS_PERSONAS CPE ON CPE.CNT_ID = CNT.CNT_ID
            JOIN CMMASTER.DD_EAS_ESTADO_ASUNTOS DD_EAS ON ASU.DD_EAS_ID = DD_EAS.DD_EAS_ID
            WHERE ASU.BORRADO = 0 AND PRC.BORRADO = 0 AND DD_EAS.DD_EAS_CODIGO IN ('01','02','03')),
            (SELECT CASE WHEN COUNT (EXP.EXP_ID) > 0 THEN 'Expediente interno' ELSE NULL END
            FROM CM01.EXP_EXPEDIENTES EXP
            JOIN CM01.PEX_PERSONAS_EXPEDIENTE PEX ON PEX.EXP_ID = EXP.EXP_ID
            JOIN CM01.DD_TPX_TIPO_EXPEDIENTE TPX ON TPX.DD_TPX_ID=EXP.DD_TPX_ID AND TPX.DD_TPX_CODIGO='INT'
            JOIN CMMASTER.DD_EEX_ESTADO_EXPEDIENTE DD_EEX ON EXP.DD_EEX_ID = DD_EEX.DD_EEX_ID
            WHERE PEX.BORRADO = 0 AND EXP.BORRADO = 0 
            AND DD_EEX.DD_EEX_CODIGO IN ('1','2','4')),
            (SELECT CASE WHEN COUNT (EXP.EXP_ID) > 0 
            THEN 'Expediente de recobro' ELSE NULL END 
            FROM CM01.EXP_EXPEDIENTES EXP 
            JOIN CM01.PEX_PERSONAS_EXPEDIENTE PEX ON PEX.EXP_ID = EXP.EXP_ID 
            JOIN CM01.DD_TPX_TIPO_EXPEDIENTE TPX ON TPX.DD_TPX_ID=EXP.DD_TPX_ID AND TPX.DD_TPX_CODIGO='REC'
            JOIN CMMASTER.DD_EEX_ESTADO_EXPEDIENTE DD_EEX ON EXP.DD_EEX_ID = DD_EEX.DD_EEX_ID 
            WHERE PEX.BORRADO = 0 AND EXP.BORRADO = 0 
            AND DD_EEX.DD_EEX_CODIGO IN ('1','2','4')), 
            (SELECT EST.DD_EST_DESCRIPCION 
            FROM CMMASTER.DD_EST_ESTADOS_ITINERARIOS EST 
            WHERE EST.DD_EST_ID = COALESCE (CLI.DD_EST_ID, NULL)), 'Normal') VALUE
            , ROW_NUMBER() OVER (PARTITION BY CPE.PER_ID ORDER BY CPE.PER_ID) ORD
            FROM CM01.CPE_CONTRATOS_PERSONAS CPE 
            LEFT JOIN CM01.CLI_CLIENTES CLI ON CPE.PER_ID = CLI.PER_ID AND CLI.BORRADO = 0
) WHERE ORD = 1;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_SITUACION COMPUTE STATISTICS';

-- COMENTADO POR CUESTIÃ“N DE RENDIMIENTO
--INSERT INTO TMP_PER_RELACION_EXP
--SELECT PER_ID, VALUE FROM (
--  SELECT PER.PER_ID , COALESCE(
--            (SELECT CASE
--            WHEN COUNT (1) > 0
--                THEN 'Titular CP'
--               ELSE NULL 
--            END 
--            FROM EXP_EXPEDIENTES exp, CEX_CONTRATOS_EXPEDIENTE cex, CPE_CONTRATOS_PERSONAS cpe, DD_TIN_TIPO_INTERVENCION tin, cmmaster.dd_eex_estado_expediente dd_eex
--            where exp.exp_id = cex.exp_id and cex.cnt_id = cpe.cnt_id and cpe.dd_tin_id = tin.dd_tin_id and exp.dd_eex_id = dd_eex.dd_eex_id  and cpe.per_id = per.per_id 
--            and cex.borrado = 0 and cpe.borrado = 0 and exp.borrado = 0  and dd_eex.dd_eex_codigo in ('1', '2', '4')  and cex.cex_pase = 1 and tin.dd_tin_titular = 1 
--            ), 
--            (SELECT CASE 
--            WHEN COUNT (1) > 0 
--               THEN 'Titular OC'
--             ELSE NULL 
--            END 
--            FROM EXP_EXPEDIENTES exp, CEX_CONTRATOS_EXPEDIENTE cex, CPE_CONTRATOS_PERSONAS cpe, DD_TIN_TIPO_INTERVENCION tin, cmmaster.dd_eex_estado_expediente dd_eex 
--            where exp.exp_id = cex.exp_id and cex.cnt_id = cpe.cnt_id and cpe.dd_tin_id = tin.dd_tin_id and exp.dd_eex_id = dd_eex.dd_eex_id  and cpe.per_id = per.per_id 
--              and cex.borrado = 0 and cpe.borrado = 0 and exp.borrado = 0  and dd_eex.dd_eex_codigo in ('1', '2', '4')  and cex.cex_pase = 0 and tin.dd_tin_titular = 1 
--            ), 
--            (SELECT CASE
--             WHEN COUNT (1) > 0 
--                THEN 'Avalista' 
--             ELSE NULL 
--            END 
--            FROM EXP_EXPEDIENTES exp, CEX_CONTRATOS_EXPEDIENTE cex, CPE_CONTRATOS_PERSONAS cpe, DD_TIN_TIPO_INTERVENCION tin, cmmaster.dd_eex_estado_expediente dd_eex 
--            where exp.exp_id = cex.exp_id and cex.cnt_id = cpe.cnt_id and cpe.dd_tin_id = tin.dd_tin_id and exp.dd_eex_id = dd_eex.dd_eex_id  and cpe.per_id = per.per_id 
--               and cex.borrado = 0 and cpe.borrado = 0 and exp.borrado = 0  and dd_eex.dd_eex_codigo in ('1', '2', '4') and tin.dd_tin_avalista = 1 
--            ), '') VALUE, ROW_NUMBER() OVER (PARTITION BY PER.PER_ID ORDER BY PER.PER_ID) ORD 
--            FROM PER_PERSONAS per
--) WHERE ORD = 1;

INSERT /*+ APPEND */ INTO CM01.TMP_PER_SERV_NOMINIA_PENSION
SELECT  ICC.PER_ID, ICC.ICC_VALUE FROM CM01.EXT_ICC_INFO_EXTRA_CLI ICC WHERE ICC.DD_IFX_ID = (
            SELECT IFX.DD_IFX_ID FROM CM01.EXT_DD_IFX_INFO_EXTRA_CLI IFX WHERE IFX.DD_IFX_CODIGO = 'SERV_NOMINA_PENSION'
            );
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_SERV_NOMINIA_PENSION COMPUTE STATISTICS';
            
INSERT /*+ APPEND */ INTO CM01.TMP_PER_ULTIMA_ACTUACION
SELECT ICC.PER_ID, ICC.ICC_VALUE FROM CM01.EXT_ICC_INFO_EXTRA_CLI ICC WHERE  ICC.DD_IFX_ID = (
            SELECT IFX.DD_IFX_ID FROM CM01.EXT_DD_IFX_INFO_EXTRA_CLI IFX WHERE IFX.DD_IFX_CODIGO = 'ULTIMA_ACTUACION'
            );
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_ULTIMA_ACTUACION COMPUTE STATISTICS';
            
INSERT /*+ APPEND */ INTO CM01.TMP_PER_DISPUESTO_NO_VENCIDO
SELECT ICC.PER_ID, ICC.ICC_VALUE FROM CM01.EXT_ICC_INFO_EXTRA_CLI ICC WHERE  ICC.DD_IFX_ID = (
            SELECT IFX.DD_IFX_ID FROM CM01.EXT_DD_IFX_INFO_EXTRA_CLI IFX WHERE IFX.DD_IFX_CODIGO = 'num_extra1'
            );
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_DISPUESTO_NO_VENCIDO COMPUTE STATISTICS';            
          
INSERT /*+ APPEND */ INTO CM01.TMP_PER_DISPUESTO_VENCIDO
SELECT ICC.PER_ID, ICC.ICC_VALUE FROM CM01.EXT_ICC_INFO_EXTRA_CLI ICC WHERE  ICC.DD_IFX_ID = (
            SELECT IFX.DD_IFX_ID FROM CM01.EXT_DD_IFX_INFO_EXTRA_CLI IFX WHERE IFX.DD_IFX_CODIGO = 'num_extra2'
            );
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_DISPUESTO_VENCIDO COMPUTE STATISTICS';
            
INSERT /*+ APPEND */ INTO CM01.TMP_PER_DESC_CNAE
SELECT ICC.PER_ID, TCN.DD_TCN_DESCRIPCION 
FROM CM01.EXT_ICC_INFO_EXTRA_CLI ICC
  JOIN CMMASTER.DD_TCN_TIPO_CNAE TCN ON ICC.ICC_VALUE = TCN.DD_TCN_CODIGO
WHERE  ICC.DD_IFX_ID = (
            SELECT IFX.DD_IFX_ID FROM CM01.EXT_DD_IFX_INFO_EXTRA_CLI IFX WHERE IFX.DD_IFX_CODIGO = 'char_extra1'
            );
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_DESC_CNAE COMPUTE STATISTICS';

INSERT /*+ APPEND */ INTO CM01.TMP_PER_DESC_F_SIT_CON
SELECT ICC.PER_ID, ICC.ICC_VALUE FROM CM01.EXT_ICC_INFO_EXTRA_CLI ICC WHERE  ICC.DD_IFX_ID = (
            SELECT IFX.DD_IFX_ID FROM CM01.EXT_DD_IFX_INFO_EXTRA_CLI IFX WHERE IFX.DD_IFX_CODIGO = 'date_extra1'
            );
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_DESC_F_SIT_CON COMPUTE STATISTICS';
            
INSERT/*+ APPEND */ INTO CM01.TMP_PER_DESC_CLI_REESTRUC
SELECT ICC.PER_ID, ICC.ICC_VALUE FROM CM01.EXT_ICC_INFO_EXTRA_CLI ICC WHERE  ICC.DD_IFX_ID = (
            SELECT IFX.DD_IFX_ID FROM CM01.EXT_DD_IFX_INFO_EXTRA_CLI IFX WHERE IFX.DD_IFX_CODIGO = 'flag_extra1'
            );
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_PER_DESC_CLI_REESTRUC COMPUTE STATISTICS';
            
INSERT /*+ APPEND */ INTO CM01.PER_PERSONAS_FORMULAS (PER_ID, EST_CICLO_VIDA, DIAS_VENC_RIESGO_DIRECTO, DIAS_VENC_RIESGO_INDIRECTO
        , RIESGO_TOTAL, RIESGO_TOTAL_DIRECTO, RIESGO_TOTAL_INDIRECTO, SITUACION_CLIENTE, DIAS_VENCIDO
        , NUM_EXP_ACTIVOS, NUM_ASU_ACTIVOS, NUM_ASU_ACTIVOS_POR_PRC, SITUACION, RELACION_EXP, SERV_NOMINIA_PENSION
        , ULTIMA_ACTUACION, DISPUESTO_NO_VENCIDO, DISPUESTO_VENCIDO, DESC_CNAE,DESC_FECHA_SIT_CONCURSAL,DESC_CLIENTE_REESTRUC)
SELECT PER.PER_ID
      , T1.EST_CICLO_VIDA
      , T2.MIN_MOV_FECHA_POS_VENCIDA
      , T3.DIAS_VENC_RIESGO_INDIRECTO
      , T4.RIESGO_TOTAL
      , T5.RIESGO_TOTAL_DIRECTO
      , T6.RIESGO_TOTAL_INDIRECTO
      , T7.SITUACION_CLIENTE
      , T8.DIAS_VENCIDO
      , T9.NUM_EXP_ACTIVOS
      , T10.NUM_ASU_ACTIVOS
      , T11.NUM_ASU_ACTIVOS_POR_PRC
      , T12.SITUACION
      , T13.RELACION_EXP
      , T14.SERV_NOMINIA_PENSION
      , T15.ULTIMA_ACTUACION
      , T16.DISPUESTO_NO_VENCIDO
      , T17.DISPUESTO_VENCIDO
      , T18.DESC_CNAE
      , T19.DESC_FECHA_SIT_CONCURSAL
      , T20.DESC_CLIENTE_REESTRUC
FROM CM01.PER_PERSONAS PER
  LEFT JOIN CM01.TMP_PER_EST_CICLO_VIDA T1 ON PER.PER_ID = T1.PER_ID
  LEFT JOIN CM01.TMP_PER_DVENC_RIES_DIREC T2 ON PER.PER_ID = T2.PER_ID
  LEFT JOIN CM01.TMP_PER_DVENC_RIES_INDIREC T3 ON PER.PER_ID = T3.PER_ID
  LEFT JOIN CM01.TMP_PER_RIESGO_TOTAL T4 ON PER.PER_ID = T4.PER_ID
  LEFT JOIN CM01.TMP_PER_RIESGO_TOTAL_DIRECTO T5 ON PER.PER_ID = T5.PER_ID
  LEFT JOIN CM01.TMP_PER_RIESGO_TOTAL_INDIRECTO T6 ON PER.PER_ID = T6.PER_ID
  LEFT JOIN CM01.TMP_PER_SITUACION_CLIENTE T7 ON PER.PER_ID = T7.PER_ID
  LEFT JOIN CM01.TMP_PER_DIAS_VENCIDO T8 ON PER.PER_ID = T8.PER_ID
  LEFT JOIN CM01.TMP_PER_NUM_EXP_ACTIVOS T9 ON PER.PER_ID = T9.PER_ID
  LEFT JOIN CM01.TMP_PER_NUM_ASU_ACTIVOS T10 ON PER.PER_ID = T10.PER_ID
  LEFT JOIN CM01.TMP_PER_NUM_ASU_ACT_POR_PRC T11 ON PER.PER_ID = T11.PER_ID
  LEFT JOIN CM01.TMP_PER_SITUACION T12 ON PER.PER_ID = T12.PER_ID
  LEFT JOIN CM01.TMP_PER_RELACION_EXP T13 ON PER.PER_ID = T13.PER_ID
  LEFT JOIN CM01.TMP_PER_SERV_NOMINIA_PENSION T14 ON PER.PER_ID = T14.PER_ID
  LEFT JOIN CM01.TMP_PER_ULTIMA_ACTUACION T15 ON PER.PER_ID = T15.PER_ID
  LEFT JOIN CM01.TMP_PER_DISPUESTO_NO_VENCIDO T16 ON PER.PER_ID = T16.PER_ID
  LEFT JOIN CM01.TMP_PER_DISPUESTO_VENCIDO T17 ON PER.PER_ID = T17.PER_ID
  LEFT JOIN CM01.TMP_PER_DESC_CNAE T18 ON PER.PER_ID = T18.PER_ID
  LEFT JOIN CM01.TMP_PER_DESC_F_SIT_CON T19 ON PER.PER_ID = T19.PER_ID
  LEFT JOIN CM01.TMP_PER_DESC_CLI_REESTRUC T20 ON PER.PER_ID = T20.PER_ID;
COMMIT;
EXECUTE IMMEDIATE 'ANALYZE TABLE   PER_PERSONAS_FORMULAS COMPUTE STATISTICS';

COMMIT;

EXCEPTION
  WHEN OTHERS THEN
    ERR_NUM := SQLCODE;
    ERR_MSG := SQLERRM;
    DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecuciÃ³n:'||TO_CHAR(ERR_NUM));
    DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
    DBMS_OUTPUT.put_line(ERR_MSG);
    ROLLBACK;
    RAISE;   
END;
/
EXIT;
