--/*
--##########################################
--## AUTOR=JAVIER RUIZ
--## FECHA_CREACION=25-11-2015
--## ARTEFACTO=web
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=PRODUCTO-340
--## PRODUCTO=SI
--## Finalidad: DDL Creación vista del listado de preproyectado agrupación por contratos quitando los que esten en expedientes de recobro
--##			Corrección: se extrae la zona del contrato a través de su oficina - arreglado fallo por el cual estaba enlazado por la oficina del expediente
--##			Corrección: cálculo días vencidos
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    V_TEXT1 VARCHAR2(2400 CHAR); -- Vble. auxiliar
    
    V_ESQUEMA_MIN VARCHAR2(25 CHAR):= '#ESQUEMA_MINI#'; -- Configuracion Esquema minirec
    V_ESQUEMA_DWH VARCHAR2(25 CHAR):= '#ESQUEMA_DWH#'; -- Configuracion Esquema recovery_bankia_dwh
    V_ESQUEMA_STG VARCHAR2(25 CHAR):= '#ESQUEMA_STG#'; -- Configuracion Esquema recovery_bankia_datastage
    
    V_NOMBRE_VISTA VARCHAR2(30 CHAR):= 'V_LIS_PREPROYECT_CNT';    
    
BEGIN
	
    -- Comprobamos si existe la vista   
    V_SQL := 'SELECT COUNT(1) FROM ALL_MVIEWS WHERE MVIEW_NAME = '''||V_NOMBRE_VISTA||''' and owner = '''||V_ESQUEMA||'''';
    EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
         
    if V_NUM_TABLAS > 0 
     
     then          
          DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_NOMBRE_VISTA||' Ya Existe');
          V_MSQL := 'DROP MATERIALIZED VIEW '||V_ESQUEMA||'.'||V_NOMBRE_VISTA;
          EXECUTE IMMEDIATE V_MSQL;
          DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_NOMBRE_VISTA||'... Vista borrada');
    END IF;
        
    EXECUTE IMMEDIATE '
		CREATE MATERIALIZED VIEW '||V_ESQUEMA||'.'||V_NOMBRE_VISTA|| ' AS
			WITH 
			NUM_TERMINOS_CNT AS (
			  SELECT /*+ MATERIALIZE */ CNT.CNT_ID, COUNT(1) TERMINOS
			  FROM '||V_ESQUEMA||'.CNT_CONTRATOS CNT
			    INNER JOIN '||V_ESQUEMA||'.TEA_CNT ON TEA_CNT.CNT_ID = CNT.CNT_ID AND TEA_CNT.BORRADO = 0
			      INNER JOIN '||V_ESQUEMA||'.TEA_TERMINOS_ACUERDO TEA ON TEA.TEA_ID = TEA_CNT.TEA_ID AND TEA.BORRADO = 0  
			  WHERE CNT.BORRADO = 0
			  GROUP BY CNT.CNT_ID
			)

			,REGULACION_CNT AS (
			  SELECT /*+ MATERIALIZE */ CNT.CNT_ID, MAX(ACU.ACU_FECHA_LIMITE) FECHA_REGU
			    FROM '||V_ESQUEMA||'.CNT_CONTRATOS CNT
			      INNER JOIN '||V_ESQUEMA||'.TEA_CNT ON TEA_CNT.CNT_ID = CNT.CNT_ID AND TEA_CNT.BORRADO = 0
			        INNER JOIN '||V_ESQUEMA||'.TEA_TERMINOS_ACUERDO TEA ON TEA.TEA_ID = TEA_CNT.TEA_ID AND TEA.BORRADO = 0
			          INNER JOIN '||V_ESQUEMA||'.ACU_ACUERDO_PROCEDIMIENTOS ACU ON ACU.ACU_ID = TEA.ACU_ID AND ACU.BORRADO = 0
			  WHERE CNT.BORRADO = 0
			  GROUP BY CNT.CNT_ID
			)
      
      ,ULTIMO_TEA_CNT AS (
        SELECT /*+ MATERIALIZE */ CNT_ID, TEA_ID FROM (
                SELECT /*+ MATERIALIZE */ TEAC.CNT_ID, TEAC.TEA_ID, 
                ROW_NUMBER() OVER (PARTITION BY CNT_ID ORDER BY TEA_CNT_ID DESC) NPROP
                FROM '||V_ESQUEMA||'.TEA_CNT TEAC
                WHERE TEAC.BORRADO = 0
        ) WHERE NPROP = 1
      )
			
			SELECT DISTINCT CNT.CNT_ID
			  ,CNT.CNT_CONTRATO
			  ,CEX.EXP_ID
			  ,MOV.MOV_RIESGO RIESGO_TOTAL
			  ,MOV.MOV_DEUDA_IRREGULAR DEUDA_IRREGULAR
			  ,DDTDVCNT.DD_TDV_DESCRIPCION TRAMO
			  ,TRUNC(SYSDATE-MOV.MOV_FECHA_POS_VENCIDA) DIAS_VENCIDOS
			  ,CASE WHEN TRUNC(SYSDATE-CNT.CNT_FECHA_VENC) < 0
			    THEN (SYSDATE+90)
			    ELSE (SYSDATE+90) - TRUNC(SYSDATE-CNT.CNT_FECHA_VENC)
			  END FECHA_PASE_A_MORA_CNT
			  ,TPA.DD_TPA_DESCRIPCION PROPUESTA
			  ,EGT.DD_EGT_DESCRIPCION ESTADO_GESTION
			  ,REGUCNT.FECHA_REGU FECHA_PREV_REGU_CNT  

			  ,EGT.DD_EGT_CODIGO ESTADO_GESTION_COD
			  ,DDTPE.DD_TPE_CODIGO TIPO_PERSONA_COD
			  ,DDTDVCNT.DD_TDV_CODIGO TRAMO_COD  
			  ,TPAF.DD_TPA_CODIGO TIPO_PROPUESTA_COD
			  ,CASE WHEN NTC.TERMINOS IS NULL THEN 0 ELSE NTC.TERMINOS END N_PROPUESTAS  
			  ,ZON.ZON_COD ZON_EXP
			  ,DDEST.DD_EST_CODIGO FASE_COD
			  ,ZONCNT.ZON_COD ZON_COD_CONTRATO
			FROM '||V_ESQUEMA||'.CNT_CONTRATOS CNT
			  INNER JOIN '||V_ESQUEMA||'.CEX_CONTRATOS_EXPEDIENTE CEX ON CEX.CNT_ID = CNT.CNT_ID AND CEX.BORRADO = 0
			    INNER JOIN '||V_ESQUEMA||'.EXP_EXPEDIENTES EXP ON EXP.EXP_ID = CEX.EXP_ID AND EXP.BORRADO = 0
				  INNER JOIN '||V_ESQUEMA||'.DD_TPX_TIPO_EXPEDIENTE TPX ON TPX.DD_TPX_ID = EXP.DD_TPX_ID AND DD_TPX_CODIGO <> ''REC''
			      LEFT JOIN '||V_ESQUEMA_M||'.DD_EST_ESTADOS_ITINERARIOS DDEST ON DDEST.DD_EST_ID = EXP.DD_EST_ID AND DDEST.BORRADO = 0    
			      LEFT JOIN '||V_ESQUEMA||'.OFI_OFICINAS OFI ON OFI.OFI_ID = EXP.OFI_ID AND OFI.BORRADO = 0
			        LEFT JOIN '||V_ESQUEMA||'.ZON_ZONIFICACION ZON ON ZON.OFI_ID = OFI.OFI_ID AND OFI.BORRADO = 0                  
			  LEFT JOIN '||V_ESQUEMA||'.MOV_MOVIMIENTOS MOV ON MOV.CNT_ID = CNT.CNT_ID AND MOV.MOV_FECHA_EXTRACCION = CNT.CNT_FECHA_EXTRACCION
			  LEFT JOIN '||V_ESQUEMA||'.DD_TDV_TRAMOS_DIAS_VENCIDOS DDTDVCNT ON TRUNC(SYSDATE-MOV.MOV_FECHA_POS_VENCIDA) BETWEEN DDTDVCNT.DD_TDV_DIA_INICIO AND DDTDVCNT.DD_TDV_DIA_FIN
			  LEFT JOIN REGULACION_CNT REGUCNT ON REGUCNT.CNT_ID = CNT.CNT_ID  
			  LEFT JOIN ULTIMO_TEA_CNT ULT_TEA ON ULT_TEA.CNT_ID = CNT.CNT_ID
			    LEFT JOIN '||V_ESQUEMA||'.TEA_TERMINOS_ACUERDO TEA ON TEA.TEA_ID = ULT_TEA.TEA_ID AND TEA.BORRADO = 0 
			      LEFT JOIN '||V_ESQUEMA||'.DD_TPA_TIPO_ACUERDO TPA ON TPA.DD_TPA_ID = TEA.DD_TPA_ID AND TPA.BORRADO = 0
			      LEFT JOIN '||V_ESQUEMA_M||'.DD_EGT_EST_GEST_TERMINO EGT ON EGT.DD_EGT_ID = TEA.DD_EGT_ID AND EGT.BORRADO = 0
			  LEFT JOIN '||V_ESQUEMA||'.TEA_CNT ON TEA_CNT.CNT_ID = CNT.CNT_ID AND TEA_CNT.BORRADO = 0
			    LEFT JOIN '||V_ESQUEMA||'.TEA_TERMINOS_ACUERDO TEAF ON TEAF.TEA_ID = TEA_CNT.TEA_ID AND TEAF.BORRADO = 0
            LEFT JOIN '||V_ESQUEMA||'.DD_TPA_TIPO_ACUERDO TPAF ON TPAF.DD_TPA_ID = TEAF.DD_TPA_ID AND TPAF.BORRADO = 0
			  LEFT JOIN NUM_TERMINOS_CNT NTC ON NTC.CNT_ID = CNT.CNT_ID
			  LEFT JOIN '||V_ESQUEMA||'.CPE_CONTRATOS_PERSONAS CPE ON CPE.CNT_ID = CNT.CNT_ID AND CPE.BORRADO = 0
			    LEFT JOIN '||V_ESQUEMA||'.PER_PERSONAS PER ON PER.PER_ID = CPE.PER_ID AND PER.BORRADO = 0
			      LEFT JOIN '||V_ESQUEMA_M||'.DD_TPE_TIPO_PERSONA DDTPE ON DDTPE.DD_TPE_ID = PER.DD_TPE_ID AND DDTPE.BORRADO = 0
        	  LEFT JOIN '||V_ESQUEMA||'.OFI_OFICINAS OFICNT ON OFICNT.OFI_ID = CNT.OFI_ID AND OFI.BORRADO = 0
          	    LEFT JOIN '||V_ESQUEMA||'.ZON_ZONIFICACION ZONCNT ON ZONCNT.OFI_ID = OFICNT.OFI_ID AND ZONCNT.BORRADO = 0
			WHERE CNT.BORRADO = 0
			ORDER BY CNT.CNT_CONTRATO';
			
	DBMS_OUTPUT.PUT_LINE('[INFO] '||V_NOMBRE_VISTA||' Creada');			    


EXCEPTION
  WHEN OTHERS THEN
    ERR_NUM := SQLCODE;
    ERR_MSG := SQLERRM;
    DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
    DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
    DBMS_OUTPUT.put_line(ERR_MSG);
    ROLLBACK;
    RAISE;   
END;
/
EXIT;			
