--/*
--##########################################
--## AUTOR=JAVIER RUIZ
--## FECHA_CREACION=20160111
--## ARTEFACTO=web
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=PRODUCTO-561
--## PRODUCTO=NO
--## Finalidad: Correcci贸n del calculo de la fecha pase a mora
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versi贸n inicial
--##########################################
--*/

--Para permitir la visualizaci贸n de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    V_TEXT1 VARCHAR2(2400 CHAR); -- Vble. auxiliar
    
    V_ESQUEMA_MIN VARCHAR2(25 CHAR):= '#ESQUEMA_MINI#'; -- Configuracion Esquema minirec
    V_ESQUEMA_DWH VARCHAR2(25 CHAR):= '#ESQUEMA_DWH#'; -- Configuracion Esquema recovery_bankia_dwh
    V_ESQUEMA_STG VARCHAR2(25 CHAR):= '#ESQUEMA_STG#'; -- Configuracion Esquema recovery_bankia_datastage
    
    V_NOMBRE_VISTA VARCHAR2(30 CHAR):= 'V_LIS_PREPROYECT_EXP';    
    
BEGIN
	
    -- Comprobamos si existe la vista materializada
    V_SQL := 'SELECT COUNT(1) FROM ALL_MVIEWS WHERE MVIEW_NAME = '''||V_NOMBRE_VISTA||''' and owner = '''||V_ESQUEMA||'''';
    EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
         
    if V_NUM_TABLAS > 0 then          
          DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_NOMBRE_VISTA||' Ya Existe');
          V_MSQL := 'DROP MATERIALIZED VIEW '||V_ESQUEMA||'.'||V_NOMBRE_VISTA;
          EXECUTE IMMEDIATE V_MSQL;
          DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_NOMBRE_VISTA||'... Vista materializada borrada');
    END IF;
    
    -- Comprobamos si existe la vista
    V_SQL := 'SELECT COUNT(1) FROM ALL_VIEWS WHERE VIEW_NAME = '''||V_NOMBRE_VISTA||''' and owner = '''||V_ESQUEMA||'''';
    EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
         
    if V_NUM_TABLAS > 0 then          
          DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_NOMBRE_VISTA||' Ya Existe');
          V_MSQL := 'DROP VIEW '||V_ESQUEMA||'.'||V_NOMBRE_VISTA;
          EXECUTE IMMEDIATE V_MSQL;
          DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_NOMBRE_VISTA||'... Vista borrada');
    END IF;    
        
    EXECUTE IMMEDIATE '
		CREATE VIEW '||V_ESQUEMA||'.'||V_NOMBRE_VISTA|| ' AS
		WITH
      CEX_CONTRATOS_EXPEDIENTE_M AS (
        SELECT CNT_ID, EXP_ID FROM '||V_ESQUEMA||'.CEX_CONTRATOS_EXPEDIENTE CEX
        WHERE CEX.BORRADO = 0
      )
      
      ,CNT_CONTRATOS_M AS (
        SELECT CNT_ID FROM '||V_ESQUEMA||'.CNT_CONTRATOS WHERE BORRADO = 0
      )

			,SUM_CONTRATOS AS (
			  SELECT EXP_ID, COUNT(1) NUMERO
			  FROM CEX_CONTRATOS_EXPEDIENTE_M CEX
			    INNER JOIN CNT_CONTRATOS_M CNT ON CNT.CNT_ID = CEX.CNT_ID
			  GROUP BY EXP_ID)

			,CNT_MAS_VENCIDO AS (
        SELECT EXP_ID, DIAS_VENCIDOS FROM (
			  SELECT EXP_ID
			    ,CASE WHEN TRUNC(SYSDATE-MOV.MOV_FECHA_POS_VENCIDA)  < 0 THEN 0 ELSE TRUNC(SYSDATE-MOV.MOV_FECHA_POS_VENCIDA) END DIAS_VENCIDOS
			    ,ROW_NUMBER() OVER (PARTITION BY EXP_ID ORDER BY (SYSDATE-MOV.MOV_FECHA_POS_VENCIDA) DESC) NUMERO
			  FROM CEX_CONTRATOS_EXPEDIENTE_M CEX
            INNER JOIN '||V_ESQUEMA||'.V_LIS_PREPROYECT_MOV MOV ON MOV.CNT_ID = CEX.CNT_ID AND MOV.MOV_DEUDA_IRREGULAR > 0)
        WHERE NUMERO = 1
			)      

			,RIESGO_EXP AS (
			  SELECT CEX.EXP_ID, NVL(SUM(MOV.MOV_RIESGO),0) RIESGO
			  FROM CEX_CONTRATOS_EXPEDIENTE_M CEX
            INNER JOIN '||V_ESQUEMA||'.V_LIS_PREPROYECT_MOV MOV ON MOV.CNT_ID = CEX.CNT_ID
			  GROUP BY CEX.EXP_ID
			)
      
			,NUM_TIPOS_PROPUESTAS_EXP AS (
			  SELECT EXP_ID, COUNT(1) TIPOS
			  FROM (
			      SELECT  DISTINCT CEX.EXP_ID, TEA.DD_TPA_ID
			      FROM '||V_ESQUEMA||'.CEX_CONTRATOS_EXPEDIENTE CEX
              INNER JOIN (SELECT CNT_ID FROM '||V_ESQUEMA||'.CNT_CONTRATOS WHERE BORRADO = 0) CNT ON CNT.CNT_ID = CEX.CNT_ID
                INNER JOIN (SELECT CNT_ID, TEA_ID FROM '||V_ESQUEMA||'.TEA_CNT WHERE BORRADO = 0) TEA_CNT ON TEA_CNT.CNT_ID = CNT.CNT_ID
                  INNER JOIN (SELECT TEA_ID, DD_TPA_ID FROM '||V_ESQUEMA||'.TEA_TERMINOS_ACUERDO WHERE BORRADO = 0) TEA ON TEA.TEA_ID = TEA_CNT.TEA_ID
			      WHERE CEX.BORRADO = 0
			    )
			  GROUP BY EXP_ID
			)

			,TIPOS_PROPUESTAS_EXP AS (
			  SELECT DISTINCT CEX.EXP_ID, NUM.TIPOS,
			  CASE WHEN NUM.TIPOS > 1 THEN ''Varios'' ELSE TPA.DD_TPA_DESCRIPCION END PROPUESTA
			  FROM '||V_ESQUEMA||'.CEX_CONTRATOS_EXPEDIENTE CEX
			      INNER JOIN (SELECT CNT_ID, TEA_ID FROM '||V_ESQUEMA||'.TEA_CNT WHERE BORRADO = 0) TEA_CNT ON TEA_CNT.CNT_ID = CEX.CNT_ID
			        INNER JOIN (SELECT TEA_ID, DD_TPA_ID FROM '||V_ESQUEMA||'.TEA_TERMINOS_ACUERDO WHERE BORRADO = 0) TEA ON TEA.TEA_ID = TEA_CNT.TEA_ID
			          INNER JOIN (SELECT DD_TPA_ID, DD_TPA_DESCRIPCION FROM '||V_ESQUEMA||'.DD_TPA_TIPO_ACUERDO WHERE BORRADO = 0) TPA ON TPA.DD_TPA_ID = TEA.DD_TPA_ID
			    INNER JOIN NUM_TIPOS_PROPUESTAS_EXP NUM ON NUM.EXP_ID = CEX.EXP_ID
			  WHERE CEX.BORRADO = 0
			)

			,REGULACION_EXP AS (
			  SELECT CEX.EXP_ID, MAX(ACU.ACU_FECHA_LIMITE) FECHA_REGU
			  FROM '||V_ESQUEMA||'.CEX_CONTRATOS_EXPEDIENTE CEX
			      INNER JOIN (SELECT CNT_ID, TEA_ID FROM '||V_ESQUEMA||'.TEA_CNT WHERE BORRADO = 0) TEA_CNT ON TEA_CNT.CNT_ID = CEX.CNT_ID
			        INNER JOIN (SELECT TEA_ID, ACU_ID FROM '||V_ESQUEMA||'.TEA_TERMINOS_ACUERDO WHERE BORRADO = 0) TEA ON TEA.TEA_ID = TEA_CNT.TEA_ID
			          INNER JOIN (SELECT ACU_ID, ACU_FECHA_LIMITE FROM '||V_ESQUEMA||'.ACU_ACUERDO_PROCEDIMIENTOS WHERE BORRADO = 0) ACU ON ACU.ACU_ID = TEA.ACU_ID
			  WHERE CEX.BORRADO = 0
			  GROUP BY CEX.EXP_ID
			)

			,IMPORTES_EXP AS (
			  SELECT CEX.EXP_ID
			    , NVL(SUM(VEN.VEN_IMPORTE_INICIAL),0)/100 IMPORTE_INICIAL
			    , NVL(SUM(VEN.VEN_IMPORTE_PTE_DIFER),0)/100 IMPORTE_PTE_DIFER
			    , NVL(SUM(VEN.VEN_CAPITAL_VIVO),0)/100 CAPITAL_VIVO
			  FROM '||V_ESQUEMA||'.CEX_CONTRATOS_EXPEDIENTE CEX
			    INNER JOIN (SELECT CNT_ID, VEN_IMPORTE_INICIAL, VEN_IMPORTE_PTE_DIFER, VEN_CAPITAL_VIVO FROM '||V_ESQUEMA||'.VEN_VENCIDOS) VEN ON VEN.CNT_ID = CEX.CNT_ID
			  WHERE CEX.BORRADO = 0
			  GROUP BY CEX.EXP_ID
			)

			SELECT DISTINCT EXP.EXP_ID
			  ,PER.PER_NOM50 TITULAR /* REVISAR: SE USA COMO TITULAR DEL EXPEDIENTE LA PERSONA DE PASE */
			  ,PER.PER_DOC_ID NIF_TITULAR
			  ,PER.PER_TELEFONO_1 TELF_1
			  ,DDEST.DD_EST_DESCRIPCION FASE
			  ,TAR.TAR_FECHA_VENC FECHA_VTO_TAREA
			  ,CASE WHEN SCNT.NUMERO IS NULL THEN 0 ELSE SCNT.NUMERO END NUM_CONTRATOS
			  ,NVL(RIESGO_EXP.RIESGO,0) VOL_RIESGO_EXP
			  ,IMPEXP.IMPORTE_INICIAL IMPORTE_INICIAL_EXP
			  ,(IMPEXP.IMPORTE_INICIAL - IMPEXP.CAPITAL_VIVO) REGULARIZADO_EXP
			  ,IMPEXP.CAPITAL_VIVO IMPORTE_ACTUAL
			  ,IMPEXP.IMPORTE_PTE_DIFER IMPORTE_PTE_DIFER
			  ,DDTDV.DD_TDV_DESCRIPCION TRAMO_EXP
			  ,VENC_CNT.DIAS_VENCIDOS DIAS_VENCIDOS_EXP
        	  ,CASE WHEN VENC_CNT.DIAS_VENCIDOS < 0
			   	THEN NULL
				ELSE TRUNC((SYSDATE+90) - VENC_CNT.DIAS_VENCIDOS)
			   END FECHA_PASE_A_MORA_EXP        
			  ,TPE.PROPUESTA
			  ,REGU.FECHA_REGU FECHA_PREV_REGU_EXP
			  ,EXP.EXP_DESCRIPCION
			FROM (SELECT EXP_ID, EXP_DESCRIPCION, DD_EST_ID FROM '||V_ESQUEMA||'.EXP_EXPEDIENTES WHERE BORRADO = 0) EXP
			  LEFT JOIN (SELECT EXP_ID, PER_ID  FROM '||V_ESQUEMA||'.PEX_PERSONAS_EXPEDIENTE WHERE PEX_PASE = 1 AND BORRADO = 0) PEX ON PEX.EXP_ID = EXP.EXP_ID
			    LEFT JOIN (SELECT PER_ID, PER_NOM50 , PER_DOC_ID, PER_TELEFONO_1  FROM '||V_ESQUEMA||'.PER_PERSONAS WHERE BORRADO = 0) PER ON PER.PER_ID = PEX.PER_ID
			  LEFT JOIN (SELECT DD_EST_ID, DD_EST_DESCRIPCION FROM '||V_ESQUEMA_M||'.DD_EST_ESTADOS_ITINERARIOS WHERE BORRADO = 0) DDEST ON DDEST.DD_EST_ID = EXP.DD_EST_ID
			  LEFT JOIN (SELECT EXP_ID, TAR_FECHA_VENC FROM '||V_ESQUEMA||'.TAR_TAREAS_NOTIFICACIONES WHERE TAR_TAREA_FINALIZADA IS NULL AND BORRADO = 0 ) TAR ON TAR.EXP_ID = EXP.EXP_ID
			  LEFT JOIN SUM_CONTRATOS SCNT ON SCNT.EXP_ID = EXP.EXP_ID
			  LEFT JOIN CNT_MAS_VENCIDO VENC_CNT ON VENC_CNT.EXP_ID = EXP.EXP_ID
			    LEFT JOIN (SELECT DD_TDV_DESCRIPCION, DD_TDV_DIA_INICIO, DD_TDV_DIA_FIN FROM '||V_ESQUEMA||'.DD_TDV_TRAMOS_DIAS_VENCIDOS) DDTDV ON VENC_CNT.DIAS_VENCIDOS BETWEEN DDTDV.DD_TDV_DIA_INICIO AND DDTDV.DD_TDV_DIA_FIN
			  LEFT JOIN TIPOS_PROPUESTAS_EXP TPE ON TPE.EXP_ID = EXP.EXP_ID
			  LEFT JOIN REGULACION_EXP REGU ON REGU.EXP_ID = EXP.EXP_ID
			  LEFT JOIN RIESGO_EXP ON RIESGO_EXP.EXP_ID = EXP.EXP_ID
			  LEFT JOIN IMPORTES_EXP IMPEXP ON IMPEXP.EXP_ID = EXP.EXP_ID';
			
	DBMS_OUTPUT.PUT_LINE('[INFO] '||V_NOMBRE_VISTA||' Creada');			    


EXCEPTION
  WHEN OTHERS THEN
    ERR_NUM := SQLCODE;
    ERR_MSG := SQLERRM;
    DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecuci贸n:'||TO_CHAR(ERR_NUM));
    DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
    DBMS_OUTPUT.put_line(ERR_MSG);
    ROLLBACK;
    RAISE;   
END;
/
EXIT;			
