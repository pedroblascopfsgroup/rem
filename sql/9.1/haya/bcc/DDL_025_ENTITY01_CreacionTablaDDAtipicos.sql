--/*
--##########################################
--## AUTOR=GUSTAVO MORA NAVARRO
--## FECHA_CREACION=20150804
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=CMREC-473
--## PRODUCTO=NO
--## 
--## Finalidad: Creación de tablas DD_TAT_TIPO_ATIPICO
--##                               DD_MAT_MOTIVO_ATIPICO
--##                               , esquema #ESQUEMA#.
--## INSTRUCCIONES:  Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/


WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;


DECLARE

 V_SCHEMA_MASTER VARCHAR(25) := '#ESQUEMA_MASTER#';
 V_SCHEMA VARCHAR(25) := '#ESQUEMA#'; 
 TABLA1 VARCHAR(30) :='DD_TAT_TIPO_ATIPICO'; 
 TABLA2 VARCHAR(30) :='DD_MAT_MOTIVO_ATIPICO';  
 ITABLE_SPACE VARCHAR(25) :='#TABLESPACE_INDEX#';
 err_num NUMBER;
 err_msg VARCHAR2(2048); 
 V_MSQL1 VARCHAR2(8500 CHAR);
 V_MSQL2 VARCHAR2(8500 CHAR);
 V_EXISTE NUMBER (1):=null;


BEGIN 

--Validamos si la tabla existe antes de crearla
  SELECT COUNT(*) INTO V_EXISTE
  FROM ALL_TABLES
  WHERE TABLE_NAME = ''||TABLA1||'';

 
  IF V_EXISTE = 1 THEN   
     EXECUTE IMMEDIATE ('DROP TABLE '||V_SCHEMA||'.'||TABLA1 );
     DBMS_OUTPUT.PUT_LINE(''||TABLA1||' BORRADA');
  END IF;   
          


  V_MSQL1 := 'CREATE TABLE '||V_SCHEMA||'.'||TABLA1||'  
  (	
        DD_TAT_ID NUMBER(16,0) NOT NULL ENABLE, 
	DD_TAT_CODIGO VARCHAR2(20 CHAR) NOT NULL ENABLE, 
	DD_TAT_DESCRIPCION VARCHAR2(50 CHAR), 
	DD_TAT_DESCRIPCION_LARGA VARCHAR2(250 CHAR), 
	VERSION NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE, 
	USUARIOCREAR VARCHAR2(10 CHAR) NOT NULL ENABLE, 
	FECHACREAR TIMESTAMP (6) NOT NULL ENABLE, 
	USUARIOMODIFICAR VARCHAR2(10 CHAR), 
	FECHAMODIFICAR TIMESTAMP (6), 
	USUARIOBORRAR VARCHAR2(10 CHAR), 
	FECHABORRAR TIMESTAMP (6), 
	BORRADO NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE, 
	 CONSTRAINT PK_DD_TAT_MOTIVO_ALTA_DUDOSO PRIMARY KEY (DD_TAT_ID)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE '||ITABLE_SPACE||'  ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING  
  ';
          

     EXECUTE IMMEDIATE V_MSQL1;
     DBMS_OUTPUT.PUT_LINE(''||TABLA1||' CREADA');

  SELECT COUNT(*) INTO V_EXISTE
  FROM ALL_TABLES
  WHERE TABLE_NAME = ''||TABLA2||'';
     
  IF V_EXISTE = 1 THEN   
     EXECUTE IMMEDIATE ('DROP TABLE '||V_SCHEMA||'.'||TABLA2 );
     DBMS_OUTPUT.PUT_LINE(''||TABLA2||' BORRADA');
  END IF;   
          
     
  
  V_MSQL2 := 'CREATE TABLE '||V_SCHEMA||'.'||TABLA2||'  
  (	
        DD_MAT_ID NUMBER(16,0) NOT NULL ENABLE, 
	DD_MAT_CODIGO VARCHAR2(20 CHAR) NOT NULL ENABLE, 
	DD_MAT_DESCRIPCION VARCHAR2(50 CHAR), 
	DD_MAT_DESCRIPCION_LARGA VARCHAR2(250 CHAR), 
	VERSION NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE, 
	USUARIOCREAR VARCHAR2(10 CHAR) NOT NULL ENABLE, 
	FECHACREAR TIMESTAMP (6) NOT NULL ENABLE, 
	USUARIOMODIFICAR VARCHAR2(10 CHAR), 
	FECHAMODIFICAR TIMESTAMP (6), 
	USUARIOBORRAR VARCHAR2(10 CHAR), 
	FECHABORRAR TIMESTAMP (6), 
	BORRADO NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE, 
	 CONSTRAINT PK_DD_MAT_MOTIVO_BAJA_DUDOSO PRIMARY KEY (DD_MAT_ID)
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE '||ITABLE_SPACE||'  ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING  
       ';
 
 
     EXECUTE IMMEDIATE V_MSQL2;
     DBMS_OUTPUT.PUT_LINE(''||TABLA2||' CREADA');



EXCEPTION
WHEN OTHERS THEN  
  err_num := SQLCODE;
  err_msg := SQLERRM;

  DBMS_OUTPUT.put_line('Error:'||TO_CHAR(err_num));
  DBMS_OUTPUT.put_line(err_msg);
  
  ROLLBACK;
  RAISE;
END;
/
EXIT;   

