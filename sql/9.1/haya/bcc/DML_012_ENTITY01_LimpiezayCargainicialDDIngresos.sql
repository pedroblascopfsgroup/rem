--/*
--##########################################
--## AUTOR=JAVIER DIAZ RAMOS
--## FECHA_CREACION=20150806
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=9.2
--## INCIDENCIA_LINK=CMREC-441
--## PRODUCTO=NO
--## 
--## Finalidad: Inserción de datos de Diccionarios INGRESOS Cajamar , esquema #ESQUEMA#.
--## INSTRUCCIONES:  Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
DECLARE

 
   TYPE T_TIPO_INGRESO IS TABLE OF VARCHAR2(150);
   TYPE T_ARRAY_INGRESO IS TABLE OF T_TIPO_INGRESO;

   TYPE T_TIPO_INGRESOTIG IS TABLE OF VARCHAR2(150);
   TYPE T_ARRAY_INGRESOTIG IS TABLE OF T_TIPO_INGRESOTIG;
   
   TYPE T_TIPO_INGRESO_PERIODICIDAD IS TABLE OF VARCHAR2(150);
   TYPE T_ARRAY_INGRESO_PERIODICIDAD IS TABLE OF T_TIPO_INGRESO_PERIODICIDAD;
   

   
   
	
  -- Configuracion Esquemas
   V_ESQUEMA VARCHAR(25) := '#ESQUEMA#';
   V_ESQUEMA_M VARCHAR(25) := '#ESQUEMA_MASTER#';
   V_TipoContrado VARCHAR(50) := 'BNKContrato';

   V_USUARIO_CREAR VARCHAR2(10) := 'INICIAL';
   
   -- Configuracion Entidad
   V_ENTIDAD VARCHAR2(255) := 'CAJAMAR-CDD';
   V_WORKING_CODE VARCHAR2(255) := '3058';

						   
	
	 V_TIPO_INGRESO T_ARRAY_INGRESO := T_ARRAY_INGRESO(									
												T_TIPO_INGRESO('1','RECIBO DE AUTONOMO','RECIBO DE AUTONOMO'),
												T_TIPO_INGRESO('2','RECIBO DE PREVISION SOCIAL','RECIBO DE PREVISION SOCIAL'),
												T_TIPO_INGRESO('A','PAC','PAC'),
												T_TIPO_INGRESO('C','CHEQUE-NOMINA','CHEQUE-NOMINA'),
												T_TIPO_INGRESO('D','PRESTACION POR DESEMPLEO','PRESTACION POR DESEMPLEO'),
												T_TIPO_INGRESO('E','EXCEPCION (ABONOS DECLARADOS EXCEPCIONALMENTE COMO HABERES)','EXCEPCION (ABONOS DECLARADOS EXCEPCIONALMENTE COMO HABERES)'),
												T_TIPO_INGRESO('F','ORDENES DE ABONO DEL SWIFT DE EXTRANJERO Y ORIGEN UN PARAISO FISCAL','ORDENES DE ABONO DEL SWIFT DE EXTRANJERO Y ORIGEN UN PARAISO FISCAL'),
												T_TIPO_INGRESO('I','TRASPASO-NOMINA POR BANCA ELECTRONICA','TRASPASO-NOMINA POR BANCA ELECTRONICA'),
												T_TIPO_INGRESO('N','NOMINA DOMICILIADA','NOMINA DOMICILIADA'),
												T_TIPO_INGRESO('P','PENSION','PENSION'),
												T_TIPO_INGRESO('R','NOMINAS POR TRANSFERENCIA','NOMINAS POR TRANSFERENCIA'),
												T_TIPO_INGRESO('S','TRASPASO','TRASPASO'),
												T_TIPO_INGRESO('T','TRANSFERENCIA','TRANSFERENCIA')
                                   );
								   
								 
  V_TIPO_INGRESO_PERIODICIDAD T_ARRAY_INGRESO_PERIODICIDAD := T_ARRAY_INGRESO_PERIODICIDAD(									
												T_TIPO_INGRESO_PERIODICIDAD('000','SIN VALORES','SIN VALORES')												
                                   );	

  
  V_TIPO_INGRESOTIG T_ARRAY_INGRESOTIG :=  T_ARRAY_INGRESOTIG(									
												T_TIPO_INGRESOTIG('1','RECIBO DE AUTONOMO','RECIBO DE AUTONOMO'),
												T_TIPO_INGRESOTIG('2','RECIBO DE PREVISION SOCIAL','RECIBO DE PREVISION SOCIAL'),
												T_TIPO_INGRESOTIG('A','PAC','PAC'),
												T_TIPO_INGRESOTIG('C','CHEQUE-NOMINA','CHEQUE-NOMINA'),
												T_TIPO_INGRESOTIG('D','PRESTACION POR DESEMPLEO','PRESTACION POR DESEMPLEO'),
												T_TIPO_INGRESOTIG('E','EXCEPCION (ABONOS DECLARADOS EXCEPCIONALMENTE COMO HABERES)','EXCEPCION (ABONOS DECLARADOS EXCEPCIONALMENTE COMO HABERES)'),
												T_TIPO_INGRESOTIG('F','ORDENES DE ABONO DEL SWIFT DE EXTRANJERO Y ORIGEN UN PARAISO FISCAL','ORDENES DE ABONO DEL SWIFT DE EXTRANJERO Y ORIGEN UN PARAISO FISCAL'),
												T_TIPO_INGRESOTIG('I','TRASPASO-NOMINA POR BANCA ELECTRONICA','TRASPASO-NOMINA POR BANCA ELECTRONICA'),
												T_TIPO_INGRESOTIG('N','NOMINA DOMICILIADA','NOMINA DOMICILIADA'),
												T_TIPO_INGRESOTIG('P','PENSION','PENSION'),
												T_TIPO_INGRESOTIG('R','NOMINAS POR TRANSFERENCIA','NOMINAS POR TRANSFERENCIA'),
												T_TIPO_INGRESOTIG('S','TRASPASO','TRASPASO'),
												T_TIPO_INGRESOTIG('T','TRANSFERENCIA','TRANSFERENCIA')
                                   );								   
								   
								   

--##########################################
--## FIN Configuraciones a rellenar
--##########################################
--*/  
   
   V_MSQL VARCHAR(5000);
   V_EXIST NUMBER(10);

   V_ENTIDAD_ID NUMBER(16);
   V_PEF_ID NUMBER;
  
   V_TMP_TIPO_INGRESO T_TIPO_INGRESO; 
   
   V_TMP_TIPO_INGRESO_PERIOD T_TIPO_INGRESO_PERIODICIDAD; 
   
   V_TMP_TIPO_INGRESOTIG T_TIPO_INGRESOTIG; 
   
   err_num NUMBER;
   err_msg VARCHAR2(255);
BEGIN





			DBMS_OUTPUT.PUT_LINE('Se borra DD_TIN_TIPO_INGRESO - TIPO INGRESO');
	    execute immediate('DELETE FROM ' || V_ESQUEMA || '.DD_TIN_TIPO_INGRESO');
		
			DBMS_OUTPUT.PUT_LINE('Se borra DD_TIP_INGRESO_PERIODICIDAD - TIPO INGRESO PERIODICIDAD');
	    execute immediate('DELETE FROM ' || V_ESQUEMA || '.DD_TIP_INGRESO_PERIODICIDAD');
		
			DBMS_OUTPUT.PUT_LINE('Se borra DD_TIG_TIPO_INGRESO - TIPO INGRESO (TIG)');
	    execute immediate('DELETE FROM ' || V_ESQUEMA || '.DD_TIG_TIPO_INGRESO');	
		
		
	
		
    
    SELECT count(*) INTO V_ENTIDAD_ID
    FROM all_sequences
    WHERE sequence_name = 'S_DD_TIN_TIPO_INGRESO' and sequence_owner=V_ESQUEMA;
    if V_ENTIDAD_ID is not null and V_ENTIDAD_ID = 1 then    
	    EXECUTE IMMEDIATE('DROP SEQUENCE '|| V_ESQUEMA || '.S_DD_TIN_TIPO_INGRESO');
	end if;
	
	 SELECT count(*) INTO V_ENTIDAD_ID
    FROM all_sequences
    WHERE sequence_name = 'S_DD_TIP_INGRESO_PERIODICIDAD' and sequence_owner=V_ESQUEMA;
    if V_ENTIDAD_ID is not null and V_ENTIDAD_ID = 1 then    
	    EXECUTE IMMEDIATE('DROP SEQUENCE '|| V_ESQUEMA || '.S_DD_TIP_INGRESO_PERIODICIDAD');
	end if;

    SELECT count(*) INTO V_ENTIDAD_ID
    FROM all_sequences
    WHERE sequence_name = 'S_DD_TIG_TIPO_INGRESO' and sequence_owner=V_ESQUEMA;
    if V_ENTIDAD_ID is not null and V_ENTIDAD_ID = 1 then    
	    EXECUTE IMMEDIATE('DROP SEQUENCE '|| V_ESQUEMA || '.S_DD_TIG_TIPO_INGRESO');
	end if;
	
	EXECUTE IMMEDIATE('CREATE SEQUENCE '|| V_ESQUEMA || '.S_DD_TIN_TIPO_INGRESO
      START WITH 1
      MAXVALUE 999999999999999999999999999
      MINVALUE 1
      NOCYCLE
      CACHE 20
      NOORDER');
	  
	    EXECUTE IMMEDIATE('CREATE SEQUENCE '|| V_ESQUEMA || '.S_DD_TIP_INGRESO_PERIODICIDAD
      START WITH 1
      MAXVALUE 999999999999999999999999999
      MINVALUE 1
      NOCYCLE
      CACHE 20
      NOORDER');
	  
	EXECUTE IMMEDIATE('CREATE SEQUENCE '|| V_ESQUEMA || '.S_DD_TIG_TIPO_INGRESO
      START WITH 1
      MAXVALUE 999999999999999999999999999
      MINVALUE 1
      NOCYCLE
      CACHE 20
      NOORDER');
	
	 
   DBMS_OUTPUT.PUT_LINE('Creando DD_TIN_TIPO_INGRESO......');
   FOR I IN V_TIPO_INGRESO.FIRST .. V_TIPO_INGRESO.LAST
   LOOP
      V_MSQL := 'SELECT '||V_ESQUEMA||'.S_DD_TIN_TIPO_INGRESO.NEXTVAL FROM DUAL';
      EXECUTE IMMEDIATE V_MSQL INTO V_ENTIDAD_ID;
      V_TMP_TIPO_INGRESO := V_TIPO_INGRESO(I);
      DBMS_OUTPUT.PUT_LINE('Creando Tipo TIPO INGRESO: '||V_TMP_TIPO_INGRESO(1));   

      V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.DD_TIN_TIPO_INGRESO (DD_TIN_ID, DD_TIN_CODIGO, DD_TIN_DESCRIPCION,' ||
        'DD_TIN_DESCRIPCION_LARGA, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) ' ||
                 ' VALUES ('||  V_ENTIDAD_ID || ','''||V_TMP_TIPO_INGRESO(1)||''','''||SUBSTR(V_TMP_TIPO_INGRESO(2),1,50)||''','''
         ||RTRIM(V_TMP_TIPO_INGRESO(3))||''','
         || '0,'''||V_USUARIO_CREAR||''',SYSDATE,0)';
      --DBMS_OUTPUT.PUT_LINE(V_MSQL);
      EXECUTE IMMEDIATE V_MSQL;
   END LOOP;
    COMMIT;
   V_TMP_TIPO_INGRESO:= NULL;
   V_TIPO_INGRESO:= NULL;
  
     DBMS_OUTPUT.PUT_LINE('Creando DD_TIP_INGRESO_PERIODICIDAD......');
   FOR I IN V_TIPO_INGRESO_PERIODICIDAD.FIRST .. V_TIPO_INGRESO_PERIODICIDAD.LAST
   LOOP
      V_MSQL := 'SELECT '||V_ESQUEMA||'.S_DD_TIP_INGRESO_PERIODICIDAD.NEXTVAL FROM DUAL';
      EXECUTE IMMEDIATE V_MSQL INTO V_ENTIDAD_ID;
      V_TMP_TIPO_INGRESO_PERIOD := V_TIPO_INGRESO_PERIODICIDAD(I);
      DBMS_OUTPUT.PUT_LINE('Creando TIPO INGRESO PERIODICIDAD: '||V_TMP_TIPO_INGRESO_PERIOD(1));   

      V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.DD_TIP_INGRESO_PERIODICIDAD (DD_TIP_ID, DD_TIP_CODIGO, DD_TIP_DESCRIPCION,' ||
        'DD_TIP_DESCRIPCION_LARGA, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) ' ||
                 ' VALUES ('||  V_ENTIDAD_ID || ','''||V_TMP_TIPO_INGRESO_PERIOD(1)||''','''||V_TMP_TIPO_INGRESO_PERIOD(2)||''','''
         ||V_TMP_TIPO_INGRESO_PERIOD(3)||''','
         || '0,'''||V_USUARIO_CREAR||''',SYSDATE,0)';
      --DBMS_OUTPUT.PUT_LINE(V_MSQL);
      EXECUTE IMMEDIATE V_MSQL;
   END LOOP; 
    COMMIT;
   V_TMP_TIPO_INGRESO_PERIOD:= NULL;
   V_TIPO_INGRESO_PERIODICIDAD:= NULL;
    

   DBMS_OUTPUT.PUT_LINE('Creando DD_TIG_TIPO_INGRESO......');
   FOR I IN V_TIPO_INGRESOTIG.FIRST .. V_TIPO_INGRESOTIG.LAST
   LOOP
      V_MSQL := 'SELECT '||V_ESQUEMA||'.S_DD_TIG_TIPO_INGRESO.NEXTVAL FROM DUAL';
      EXECUTE IMMEDIATE V_MSQL INTO V_ENTIDAD_ID;
      V_TMP_TIPO_INGRESOTIG := V_TIPO_INGRESOTIG(I);
      DBMS_OUTPUT.PUT_LINE('Creando Tipo TIPO INGRESO (TIG): '||V_TMP_TIPO_INGRESOTIG(1));   

      V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.DD_TIG_TIPO_INGRESO (DD_TIG_ID, DD_TIG_CODIGO, DD_TIG_DESCRIPCION,' ||
        'DD_TIG_DESCRIPCION_LARGA, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) ' ||
                 ' VALUES ('||  V_ENTIDAD_ID || ','''||V_TMP_TIPO_INGRESOTIG(1)||''','''||SUBSTR(V_TMP_TIPO_INGRESOTIG(2),1,50)||''','''
         ||RTRIM(V_TMP_TIPO_INGRESOTIG(3))||''','
         || '0,'''||V_USUARIO_CREAR||''',SYSDATE,0)';
      --DBMS_OUTPUT.PUT_LINE(V_MSQL);
      EXECUTE IMMEDIATE V_MSQL;
   END LOOP;
    COMMIT;
   V_TMP_TIPO_INGRESOTIG:= NULL;
   V_TIPO_INGRESOTIG:= NULL;   

   DBMS_OUTPUT.PUT_LINE('Script ejecutado correctamente'); 

EXCEPTION

WHEN OTHERS THEN  
  err_num := SQLCODE;
  err_msg := SQLERRM;

  DBMS_OUTPUT.put_line('Error:'||TO_CHAR(err_num));
  DBMS_OUTPUT.put_line(err_msg);
  
  ROLLBACK;
  RAISE;
END;
/
EXIT;

