--/*
--##########################################
--## AUTOR=Joaquín Sánchez Valverde
--## FECHA_CREACION=20160211
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=HR-1942
--## PRODUCTO=NO
--## Finalidad: DML ......
--##           
--## INSTRUCCIONES: Cierra procedimientos erroneos por peticion usuario HR-1856 y HR-1911
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE
    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
  	V_USUARIO_EJECUTA VARCHAR2(25 CHAR):= 'HR-1942'; -- Usuario que EJECUTA el paquete.
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
		
BEGIN

	DBMS_OUTPUT.PUT_LINE('[INICIO-PROCEDIMIENTO] -----------' || V_USUARIO_EJECUTA || '---------- - PROCEDIMIENTO');  
		-- Creamos el fichero adjunto si no existe
		V_MSQL := 'SELECT COUNT(1) FROM '||V_ESQUEMA||'.DPR_DECISIONES_PROCEDIMIENTOS WHERE USUARIOCREAR= ''' || V_USUARIO_EJECUTA || ''' ';
		DBMS_OUTPUT.PUT_LINE(V_MSQL);
		EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;
		IF V_NUM_TABLAS < 1 THEN
      DBMS_OUTPUT.PUT_LINE('--cerramos la decision que este abierta de los procedimientos ');
      V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.DPR_DECISIONES_PROCEDIMIENTOS (DPR_ID,PRC_ID,TAR_ID,DPR_FINALIZA,DPR_PARALIZA,DD_CDE_ID,DD_EDE_ID,DPR_PROCESS_BPM,DPR_FECHA_PARA,DPR_COMENTARIOS,USUARIOCREAR,FECHACREAR,DD_DFI_ID,DD_DPA_ID,DPR_ENTIDAD)'
				|| ' SELECT ' ||  V_ESQUEMA ||'.S_DPR_DEC_PROCEDIMIENTOS.nextval, temp, NULL ,1,0, NULL,dd_ede_id,NULL, NULL,''Error al crear la actuación'',''' || V_USUARIO_EJECUTA || ''', sysdate ,dd_df_id,dd_dpa_id,NULL '
				|| ' FROM ( Select distinct prc.prc_id temp, '
        || ' (SELECT ede.DD_EDE_ID FROM '||V_ESQUEMA_M||'.DD_EDE_ESTADOS_DECISION ede WHERE ede.DD_EDE_CODIGO = ''03'' ) dd_ede_id, '
        || ' (SELECT DD_DFI_ID FROM '||V_ESQUEMA||'.DD_DFI_DECISION_FINALIZAR WHERE DD_DFI_CODIGO = ''ERROR'' ) dd_df_id,null dd_dpa_id '
        || ' FROM '||V_ESQUEMA||'.ASU_ASUNTOS aux INNER join  '||V_ESQUEMA||'.prc_procedimientos prc on prc.asu_id = aux.asu_id '
        || ' INNER join  '||V_ESQUEMA||'.tar_tareas_notificaciones tar on tar.prc_id = prc.prc_id '
        || ' WHERE tar.TAR_FECHA_FIN is null and prc.prc_id in ( '
        || ' 1000000000022787,1000000000006872,1000000000003066 '
		|| ',1000000000000799,1000000000001805,1000000000001819,1000000000002597,1000000000002099,1000000000002170,'
		|| '1000000000003066,1000000000003884,1000000000003707,1000000000003670,1000000000007296,1000000000007099,'
		|| '1000000000007395,1000000000007396,1000000000006964,1000000000006872,1000000000006878,1000000000006619,'
		|| '1000000000033533,1000000000013969,1000000000016289,1000000000022787,1000000000025009,1000000000030595,'
		|| '1000000000022638,1000000000033756,1000000000030502,1000000000014815,1000000000008463'
        || '))'
      ;
      DBMS_OUTPUT.PUT_LINE(V_MSQL);	
      EXECUTE IMMEDIATE V_MSQL;
			
      DBMS_OUTPUT.PUT_LINE('[FIN] cerramos la decision que este abierta de los procedimientos ');
            
      DBMS_OUTPUT.PUT_LINE('--Cerramos Tareas.');
      V_MSQL := 'update ' ||  V_ESQUEMA || '.tex_tarea_externa tex set tex.BORRADO = 1, tex.FECHABORRAR = sysdate, tex.USUARIOBORRAR = ''' || V_USUARIO_EJECUTA || ''' where tex.TAR_ID in ('
        || ' SELECT tar.TAR_ID FROM ' ||  V_ESQUEMA || '.ASU_ASUNTOS asu INNER join  ' ||  V_ESQUEMA || '.prc_procedimientos prc on prc.asu_id = asu.asu_id '        
        || 'INNER join  ' ||  V_ESQUEMA || '.tar_tareas_notificaciones tar on tar.prc_id = prc.prc_id '
        || 'WHERE tar.TAR_FECHA_FIN is null and prc.prc_id in ('
        || ' 1000000000022787,1000000000006872,1000000000003066 '
		|| ',1000000000000799,1000000000001805,1000000000001819,1000000000002597,1000000000002099,1000000000002170,'
		|| '1000000000003066,1000000000003884,1000000000003707,1000000000003670,1000000000007296,1000000000007099,'
		|| '1000000000007395,1000000000007396,1000000000006964,1000000000006872,1000000000006878,1000000000006619,'
		|| '1000000000033533,1000000000013969,1000000000016289,1000000000022787,1000000000025009,1000000000030595,'
		|| '1000000000022638,1000000000033756,1000000000030502,1000000000014815,1000000000008463'		
        || '))'
      ;
      DBMS_OUTPUT.PUT_LINE(V_MSQL);	
      EXECUTE IMMEDIATE V_MSQL;  

      V_MSQL := 'update ' ||  V_ESQUEMA || '.tar_tareas_notificaciones tar set tar.TAR_FECHA_FIN = sysdate, tar.TAR_TAREA_FINALIZADA = 1 ,tar.USUARIOMODIFICAR =  ''' || V_USUARIO_EJECUTA || ''',tar.FECHAMODIFICAR = sysdate'
        || ' where tar.tar_id in ( SELECT tar.TAR_ID FROM ' ||  V_ESQUEMA || '.ASU_ASUNTOS asu'
       	|| ' INNER join  ' ||  V_ESQUEMA || '.prc_procedimientos prc on prc.asu_id = asu.asu_id '
        || ' INNER join  ' ||  V_ESQUEMA || '.tar_tareas_notificaciones tar on tar.prc_id = prc.prc_id '
        || ' WHERE tar.TAR_FECHA_FIN is null and prc.prc_id in ('
        || ' 1000000000022787,1000000000006872,1000000000003066 '
		|| ',1000000000000799,1000000000001805,1000000000001819,1000000000002597,1000000000002099,1000000000002170,'
		|| '1000000000003066,1000000000003884,1000000000003707,1000000000003670,1000000000007296,1000000000007099,'
		|| '1000000000007395,1000000000007396,1000000000006964,1000000000006872,1000000000006878,1000000000006619,'
		|| '1000000000033533,1000000000013969,1000000000016289,1000000000022787,1000000000025009,1000000000030595,'
		|| '1000000000022638,1000000000033756,1000000000030502,1000000000014815,1000000000008463'	
        || '))'
      ;
      DBMS_OUTPUT.PUT_LINE(V_MSQL);	
      EXECUTE IMMEDIATE V_MSQL;  

      DBMS_OUTPUT.PUT_LINE('[FIN] Cerramos Tareas.');
      DBMS_OUTPUT.PUT_LINE('--Cerramos Procedimientos');
      V_MSQL := 'UPDATE  ' ||  V_ESQUEMA || '.PRC_PROCEDIMIENTOS prc SET prc.DD_EPR_ID = (select epr.dd_epr_id from ' ||  V_ESQUEMA_M || '.DD_EPR_ESTADO_PROCEDIMIENTO epr where epr.DD_EPR_CODIGO = ''05''),'
        || 'prc.USUARIOMODIFICAR = ''' || V_USUARIO_EJECUTA || ''',prc.FECHAMODIFICAR = sysdate'
        || ' WHERE prc.prc_id In ('
        || ' 1000000000022787,1000000000006872,1000000000003066 '
		|| ',1000000000000799,1000000000001805,1000000000001819,1000000000002597,1000000000002099,1000000000002170,'
		|| '1000000000003066,1000000000003884,1000000000003707,1000000000003670,1000000000007296,1000000000007099,'
		|| '1000000000007395,1000000000007396,1000000000006964,1000000000006872,1000000000006878,1000000000006619,'
		|| '1000000000033533,1000000000013969,1000000000016289,1000000000022787,1000000000025009,1000000000030595,'
		|| '1000000000022638,1000000000033756,1000000000030502,1000000000014815,1000000000008463'	
        || ')'
      ;
      DBMS_OUTPUT.PUT_LINE(V_MSQL);	
      EXECUTE IMMEDIATE V_MSQL;      
      
      DBMS_OUTPUT.PUT_LINE('[FIN] Cerramos Procedimientos');
     
		ELSE --fichero adjunto ya existe
			DBMS_OUTPUT.PUT_LINE('El  Procedimiento ' || V_USUARIO_EJECUTA || ' ya se ejecuto, NO se ejecutara de nuevo otra vez.');				
		END IF;	 --fin Si no existe el fichero adjunto lo damos de alta
 
	COMMIT;
	DBMS_OUTPUT.PUT_LINE('[FIN PROCEDIMIENTO]********' || V_USUARIO_EJECUTA || '********'); 
EXCEPTION
  WHEN OTHERS THEN
    ERR_NUM := SQLCODE;
    ERR_MSG := SQLERRM;
	DBMS_OUTPUT.put_line('[ERROR PROCEDIMIENTO]-----------' || V_USUARIO_EJECUTA || '-----------');
    DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
    DBMS_OUTPUT.put_line('[FIN PROCEDIMIENTO]-------------' || V_USUARIO_EJECUTA || '-----------'); 
    DBMS_OUTPUT.put_line(ERR_MSG);
    ROLLBACK;
    RAISE;   
    
END;
/

EXIT;
