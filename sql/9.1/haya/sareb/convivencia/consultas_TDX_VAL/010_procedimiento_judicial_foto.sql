--Truncado de tablas TDX
TRUNCATE TABLE MINIREC.VAL_PROC_JUDICIAL_FOTO;

--Generacion de las tablas TDX
INSERT INTO MINIREC.VAL_PROC_JUDICIAL_FOTO
  (
  ASU_ID,
  ASU_NOMBRE,
  ID_PROCEDIMIENTO,
  ID_PROCEDIMIENTO_PADRE,
  ENTI,
  ENTIDAD,
  SERVICER,
  TIPO_PROCEDIMIENTO,
  FECHA_ALTA,
  MOTIVO_CIERRE,
  AUTO,
  IMPORTE_DEMANDA_TOTAL
  )
SELECT DISTINCT
  ASU.ASU_ID,
  ASU.ASU_NOMBRE,
  PRC.PRC_ID,
  PRC.PRC_PRC_ID,
  '2038',
  'BANKIA',
  'HAYA',
  CASE UPPER(TAS.DD_TAS_DESCRIPCION) 
          WHEN 'CONCURSAL' THEN 'CONCURSO'
          ELSE 
          CASE UPPER(TPO.DD_TPO_DESCRIPCION)
            WHEN 'P. HIPOTECARIO - HAYA' THEN 'HIPOTECARIO'
            WHEN 'P. EJ. DE TÍTULO JUDICIAL - HAYA' THEN 'EJECUCION NO HIP'
            WHEN 'P. EJ. DE TÍTULO NO JUDICIAL - HAYA' THEN 'EJECUCION NO HIP'
            WHEN 'P. ORDINARIO - HAYA' THEN 'VERBAL/ORDINARIO'
            WHEN 'P. VERBAL - HAYA' THEN 'VERBAL/ORDINARIO'
            WHEN 'P. VERBAL DESDE MONITORIO - HAYA' THEN 'VERBAL/ORDINARIO'
            WHEN 'P. MONITORIO - HAYA' THEN 'MONITORIO'
            ELSE 'OTROS'
          END
        END  AS TPO,
  PRC.FECHACREAR,
  CASE WHEN EPR.DD_EPR_CODIGO = 4 THEN EPR.DD_EPR_DESCRIPCION
       WHEN EPR.DD_EPR_CODIGO = 5 THEN EPR.DD_EPR_DESCRIPCION
  END AS MOTIVO_CIERRE,
  PRC.PRC_COD_PROC_EN_JUZGADO,
    CASE WHEN TAS.DD_TAS_CODIGO LIKE '02' THEN NULL
    ELSE PRC_SALDO_RECUPERACION
    END AS PRC_SALDO_RECUPERACION
FROM HAYA01.PRC_PROCEDIMIENTOS PRC
  LEFT JOIN HAYA01.ASU_ASUNTOS ASU ON PRC.ASU_ID = ASU.ASU_ID
  LEFT JOIN HAYA01.DD_TPO_TIPO_PROCEDIMIENTO TPO ON PRC.DD_TPO_ID=TPO.DD_TPO_ID
  LEFT JOIN HAYAMASTER.DD_EPR_ESTADO_PROCEDIMIENTO EPR ON EPR.DD_EPR_ID=PRC.DD_EPR_ID 
    LEFT JOIN HAYAMASTER.DD_TAS_TIPOS_ASUNTO TAS ON TAS.DD_TAS_ID=ASU.DD_TAS_ID
WHERE PRC.PRC_PRC_ID IS NULL
AND PRC.PRC_ID NOT IN(
  SELECT PRC2.PRC_ID FROM HAYA01.PRC_PROCEDIMIENTOS PRC2
  WHERE PRC2.DD_TAC_ID=(SELECT DD_TAC_ID FROM HAYA01.DD_TAC_TIPO_ACTUACION WHERE DD_TAC_CODIGO LIKE 'PCO')
  AND NOT EXISTS(
    SELECT 1 FROM HAYA01.PRC_PROCEDIMIENTOS PRC3
    WHERE PRC3.ASU_ID=PRC2.ASU_ID
    AND PRC3.PRC_ID <>PRC2.PRC_ID
  )
)
AND ASU.BORRADO = 0
AND PRC.BORRADO = 0
;

commit;

--MERGE 1(TAREAS)
MERGE INTO MINIREC.VAL_PROC_JUDICIAL_FOTO PJF
USING 
(
  SELECT TMP.ASU_ID,TMP.PRC_ID,TMP.TAR_FECHA_INI, TMP.TAP_CODIGO, TMP.TAP_DESCRIPCION,TMP.FECHACREAR 
  FROM(
        SELECT TAR.ASU_ID,TAR.PRC_ID, TAR.TAR_FECHA_INI,TAR.TAR_ID ,TAP.TAP_CODIGO, TAP.TAP_DESCRIPCION , TEX.FECHACREAR,  ROW_NUMBER () OVER (PARTITION BY PRC.ASU_ID ORDER BY TAR.TAR_ID DESC) N
        FROM HAYA01.PRC_PROCEDIMIENTOS PRC 
          INNER JOIN HAYA01.TAR_TAREAS_NOTIFICACIONES TAR  ON TAR.PRC_ID = PRC.PRC_ID
          INNER JOIN HAYA01.TEX_TAREA_EXTERNA TEX ON TEX.TAR_ID=TAR.TAR_ID
          INNER JOIN HAYA01.TAP_TAREA_PROCEDIMIENTO TAP ON TEX.TAP_ID=TAP.TAP_ID
	WHERE TAR.BORRADO = 0
      ) TMP
  WHERE TMP.N=1
) A
ON (PJF.ASU_ID = A.ASU_ID)
WHEN MATCHED THEN
UPDATE SET 
    PJF.FECHA_DEMANDA = A.FECHACREAR,
    PJF.HITO_CODIGO = A.TAP_CODIGO,
    PJF.HITO_DESCR = A.TAP_DESCRIPCION,
    PJF.FECHA_HITO = A.TAR_FECHA_INI
;

commit;

--MERGE 2(FECHA_CIERRE)
MERGE INTO MINIREC.VAL_PROC_JUDICIAL_FOTO PJF
USING 
(
 SELECT 
TAR.PRC_ID,
MAX(TAR.FECHAMODIFICAR) AS FECHA 
FROM HAYA01.TAR_TAREAS_NOTIFICACIONES TAR
INNER JOIN HAYA01.PRC_PROCEDIMIENTOS PRC ON TAR.PRC_ID = PRC.PRC_ID
WHERE PRC.DD_EPR_ID IN (SELECT DD_EPR_ID FROM HAYAMASTER.DD_EPR_ESTADO_PROCEDIMIENTO WHERE DD_EPR_CODIGO LIKE '04' OR  DD_EPR_CODIGO LIKE '05' )

GROUP BY TAR.PRC_ID
) A
ON (PJF.ID_PROCEDIMIENTO = A.PRC_ID)
WHEN MATCHED THEN
UPDATE SET 
    PJF.FECHA_CIERRE = A.FECHA
;

commit;

--MERGE 3(SUBASTA)
MERGE INTO MINIREC.VAL_PROC_JUDICIAL_FOTO PJF
USING 
(
 SELECT DISTINCT PRC.PRC_ID,S.SUB_FECHA_SENYALAMIENTO AS FECHA
    FROM HAYA01.SUB_SUBASTA S 
    INNER JOIN HAYA01.PRC_PROCEDIMIENTOS PRC ON PRC.ASU_ID=S.ASU_ID
    WHERE SUB_FECHA_SENYALAMIENTO IS NOT NULL 
    AND SUB_FECHA_SENYALAMIENTO = ( SELECT MAX(SUB_FECHA_SENYALAMIENTO) FROM HAYA01.SUB_SUBASTA S2 WHERE S.ASU_ID=S2.ASU_ID)
    AND PRC.PRC_PRC_ID IS NULL
) A
ON (PJF.ID_PROCEDIMIENTO = A.PRC_ID)
WHEN MATCHED THEN
UPDATE SET 
    PJF.FECHA_SUBASTA = A.FECHA
;

commit;

--MERGE 4(JUZGADO)
MERGE INTO MINIREC.VAL_PROC_JUDICIAL_FOTO PJF
USING 
(
  SELECT PRC.PRC_ID,JUZ.DD_JUZ_DESCRIPCION,PLA.DD_PLA_DESCRIPCION FROM HAYA01.PRC_PROCEDIMIENTOS PRC 
  LEFT JOIN HAYA01.DD_JUZ_JUZGADOS_PLAZA JUZ ON JUZ.DD_JUZ_ID=PRC.DD_JUZ_ID
  LEFT JOIN HAYA01.DD_PLA_PLAZAS PLA ON PLA.DD_PLA_ID = JUZ.DD_PLA_ID
  WHERE PRC.PRC_PRC_ID IS NULL
 
) A
ON (PJF.ID_PROCEDIMIENTO = A.PRC_ID)
WHEN MATCHED THEN
UPDATE SET 
    PJF.JUZGADO = A.DD_JUZ_DESCRIPCION,
    PJF.PARTIDO_JUDICIAL = A.DD_PLA_DESCRIPCION
;

commit;

--MERGE 5 (IMPORTES)
MERGE INTO MINIREC.VAL_PROC_JUDICIAL_FOTO PJF
USING 
(
SELECT
      PRC.PRC_ID,
      SUM(CRE2.CRE_PRINCIPAL_EXT) AS COMUNICADO,
      SUM(CRE.CRE_PRINCIPAL_FINAL) AS RECONOCIDO
      FROM HAYA01.ASU_ASUNTOS ASU
      INNER JOIN HAYA01.PRC_PROCEDIMIENTOS PRC ON PRC.ASU_ID = ASU.ASU_ID
      INNER JOIN HAYA01.CRE_PRC_CEX CRE ON  CRE.CRE_PRC_CEX_PRCID=PRC.PRC_ID
      INNER JOIN HAYA01.CRE_PRC_CEX CRE2 ON  CRE2.CRE_PRC_CEX_PRCID=PRC.PRC_ID
      INNER JOIN HAYAMASTER.DD_STD_CREDITO STD ON STD.STD_CRE_ID = CRE.STD_CRE_ID
      WHERE STD.STD_CRE_CODIGO IN ('2','7','8','10')
      GROUP BY PRC.PRC_ID
) A
ON (PJF.ID_PROCEDIMIENTO = A.PRC_ID)
WHEN MATCHED THEN
UPDATE SET 
    PJF.IMPORTE_COMUNICADO = A.COMUNICADO,
    PJF.IMPORTE_RECONOCIDO = A.RECONOCIDO
;

commit;

--MERGE 6 (ABOGADO)
MERGE INTO MINIREC.VAL_PROC_JUDICIAL_FOTO PJF
USING 
(
    SELECT   
    PRC.PRC_ID,
    DES.DES_DESPACHO
    FROM HAYA01.PRC_PROCEDIMIENTOS PRC
    INNER JOIN HAYA01.GAA_GESTOR_ADICIONAL_ASUNTO GAA ON GAA.ASU_ID=PRC.ASU_ID AND DD_TGE_ID=261
    INNER JOIN HAYA01.USD_USUARIOS_DESPACHOS USD ON USD.USD_ID=GAA.USD_ID
    INNER JOIN HAYA01.DES_DESPACHO_EXTERNO DES ON USD.DES_ID = DES.DES_ID
) A
ON (PJF.ID_PROCEDIMIENTO = A.PRC_ID)
WHEN MATCHED THEN
UPDATE SET 
    PJF.ABOGADO = A.DES_DESPACHO
;

commit;

--MERGE 7(PROCURADOR)
MERGE INTO MINIREC.VAL_PROC_JUDICIAL_FOTO PJF
USING 
(

    SELECT   
    PRC.PRC_ID,
    DES.DES_DESPACHO
    FROM HAYA01.PRC_PROCEDIMIENTOS PRC
    INNER JOIN HAYA01.GAA_GESTOR_ADICIONAL_ASUNTO GAA ON GAA.ASU_ID=PRC.ASU_ID AND DD_TGE_ID=4
    INNER JOIN HAYA01.USD_USUARIOS_DESPACHOS USD ON USD.USD_ID=GAA.USD_ID
    INNER JOIN HAYA01.DES_DESPACHO_EXTERNO DES ON USD.DES_ID = DES.DES_ID
) A
ON (PJF.ID_PROCEDIMIENTO = A.PRC_ID)
WHEN MATCHED THEN
UPDATE SET 
    PJF.PROCURADOR = A.DES_DESPACHO
;

commit;

--MERGE 8 (PROVINCIA)
MERGE INTO MINIREC.VAL_PROC_JUDICIAL_FOTO PJF
USING 
(
    SELECT DISTINCT 
    PRC.PRC_ID,
    LOC.DD_LOC_ID,
    LOC.DD_LOC_DESCRIPCION,
    PRV.DD_PRV_DESCRIPCION
    FROM HAYA01.PRC_PROCEDIMIENTOS PRC
      INNER JOIN  HAYA01.DD_JUZ_JUZGADOS_PLAZA JUZ  ON JUZ.DD_JUZ_ID=PRC.DD_JUZ_ID
      INNER JOIN HAYA01.DD_PLA_PLAZAS PLA ON PLA.DD_PLA_ID = JUZ.DD_PLA_ID
      INNER JOIN  HAYAMASTER.DD_LOC_LOCALIDAD LOC ON TRANSLATE(UPPER(DD_PLA_DESCRIPCION), 'ÁÉÍÓÚÀÈÌÒÙÄËÏÖÜÂÊÎÔÛ', 'AEIOUAEIOUAEIOUAEIOU')=TRANSLATE(UPPER(LOC.DD_LOC_DESCRIPCION), 'ÁÉÍÓÚÀÈÌÒÙÄËÏÖÜÂÊÎÔÛ', 'AEIOUAEIOUAEIOUAEIOU')		
      INNER JOIN  HAYAMASTER.DD_PRV_PROVINCIA PRV ON PRV.DD_PRV_ID=LOC.DD_PRV_ID
    WHERE PRC.PRC_PRC_ID IS NULL
) PRV
ON (PJF.ID_PROCEDIMIENTO = PRV.PRC_ID)
WHEN MATCHED THEN
 UPDATE SET 
    PJF.PROVINCIA = PRV.DD_PRV_DESCRIPCION
;

commit;
