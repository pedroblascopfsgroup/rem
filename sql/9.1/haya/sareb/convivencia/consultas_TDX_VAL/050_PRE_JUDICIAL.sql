--Truncado de tablas TDX
TRUNCATE TABLE MINIREC.VAL_PRE_JUDICIAL;

--Generacion de las tablas TDX
INSERT INTO  MINIREC.VAL_PRE_JUDICIAL
(
ASU_ID,
ID_PROCEDIMIENTO,
DOCUMENTO,
NUM_CUENTA,
ENTI,
ENTIDAD,
SERVICER
)
SELECT DISTINCT
  TMP.ASU_ID,
  TMP.PRC_ID,
  SUBSTR(TMP.PER_DOC_ID,0,20) ,
  SUBSTR(TMP.CNT_CONTRATO,11,17),
  '2038' ENTI,
  'BANKIA' ENTIDAD,
  'HAYA' SERVICED
FROM(
    SELECT
      ASU_ID,
      PRC_ID,
      PER_DOC_ID,
      PER_NOM50 ,
      tin TIN,  
      ROW_NUMBER () OVER (PARTITION BY PRC_ID,CNT_CONTRATO ORDER BY TIN ASC) N,  
      CNT_CONTRATO
    FROM(
        SELECT DISTINCT
          PRC.ASU_ID,
            PER.PER_ID,
            PRC.PRC_ID,
            PER_DOC_ID,
            PER_NOM50 ,
            CASE WHEN CPE.DD_TIN_ID=1 THEN 'TITULAR' ELSE 'AVALISTA' END AS TIN 
            ,CNT.CNT_CONTRATO
        FROM HAYA01.PRC_PROCEDIMIENTOS PRC
            INNER JOIN HAYA01.PRC_PER PRCPER ON PRC.PRC_ID=PRCPER.PRC_ID
            INNER JOIN HAYA01.PER_PERSONAS PER ON PRCPER.PER_ID=PER.PER_ID
            INNER JOIN HAYA01.PRC_CEX PRCCEX ON PRCCEX.PRC_ID=PRC.PRC_ID
            INNER JOIN HAYA01.CEX_CONTRATOS_EXPEDIENTE CEX ON CEX.CEX_ID=PRCCEX.CEX_ID
            INNER JOIN HAYA01.CNT_CONTRATOS  CNT ON CNT.CNT_ID=CEX.CNT_ID
            INNER JOIN HAYA01.CPE_CONTRATOS_PERSONAS CPE ON CNT.CNT_ID=CPE.CNT_ID AND CPE.PER_ID=PER.PER_ID
            INNER JOIN HAYA01.DD_TIN_TIPO_INTERVENCION TIN ON TIN.DD_TIN_ID=CPE.DD_TIN_ID
        WHERE PRC.PRC_PRC_ID IS NULL
        AND PRC.DD_TAC_ID=(SELECT DD_TAC_ID FROM HAYA01.DD_TAC_TIPO_ACTUACION WHERE DD_TAC_CODIGO LIKE 'PCO')
        AND NOT EXISTS(
            SELECT 1 FROM HAYA01.PRC_PROCEDIMIENTOS PRC2
            WHERE PRC2.ASU_ID=PRC.ASU_ID
            AND PRC2.PRC_ID <>PRC.PRC_ID
        )
    )
) TMP
WHERE TMP.N=1 AND TMP.TIN LIKE 'TITULAR'
;

--MERGE (TITULOS)

MERGE INTO MINIREC.VAL_PRE_JUDICIAL PJ
   USING (
      SELECT DISTINCT PRC.PRC_ID,'SI' AS TITULO 
      FROM HAYA01.PRC_PROCEDIMIENTOS PRC
        INNER JOIN HAYA01.PCO_PRC_PROCEDIMIENTOS PCO ON PRC.PRC_ID=PCO.PRC_ID
        INNER JOIN HAYA01.PCO_DOC_DOCUMENTOS DOC ON DOC.PCO_PRC_ID=PCO.PCO_PRC_ID
      WHERE NOT EXISTS(
          SELECT * FROM HAYA01.PCO_DOC_DOCUMENTOS DOC2 WHERE DOC2.PCO_PRC_ID=PCO.PCO_PRC_ID 
          AND (
              DOC2.DD_PCO_DED_ID =(SELECT DD_PCO_DED_ID FROM HAYA01.DD_PCO_DOC_ESTADO DED WHERE DD_PCO_DED_CODIGO LIKE 'DI')
              OR
              DOC2.DD_PCO_DED_ID =(SELECT DD_PCO_DED_ID FROM HAYA01.DD_PCO_DOC_ESTADO DED WHERE DD_PCO_DED_CODIGO LIKE 'DE')
          )
      )
   ) TITULO
   ON (TITULO.PRC_ID=PJ.ID_PROCEDIMIENTO)
   WHEN MATCHED THEN 
   UPDATE SET PJ.TITULOS='SI'
;

--MERGE (PREPARACÍON_DOCUMENTACIÓN)

 MERGE INTO MINIREC.VAL_PRE_JUDICIAL PJ
    USING (
        SELECT PCO.PRC_ID, MAX(DOC.FECHACREAR) AS FECHA
          FROM HAYA01.PCO_PRC_PROCEDIMIENTOS PCO
          INNER JOIN HAYA01.PCO_DOC_DOCUMENTOS DOC ON DOC.PCO_PRC_ID=PCO.PCO_PRC_ID
        GROUP BY PCO.PRC_ID      
    ) FECHA
   ON (FECHA.PRC_ID=PJ.ID_PROCEDIMIENTO)
   WHEN MATCHED THEN 
   UPDATE SET PJ.PREPARACION_DOCUMENTACION=FECHA.FECHA
   WHERE PJ.TITULOS='SI';

--MERGE (ACTA_NOTARIAL)

MERGE INTO MINIREC.VAL_PRE_JUDICIAL PJ
    USING (
      SELECT DISTINCT PCO.PRC_ID, MAX(DOC.FECHACREAR) ACTA FROM HAYA01.PCO_PRC_PROCEDIMIENTOS PCO
        INNER JOIN HAYA01.PCO_DOC_DOCUMENTOS DOC ON PCO.PCO_PRC_ID=DOC.PCO_PRC_ID
        INNER JOIN HAYA01.DD_TFA_FICHERO_ADJUNTO TFA ON TFA.DD_TFA_ID=DOC.DD_TFA_ID
      WHERE TFA.DD_TFA_CODIGO LIKE 'ANLS'
      GROUP BY PCO.PRC_ID
    ) ACTA
   ON (ACTA.PRC_ID=PJ.ID_PROCEDIMIENTO)
   WHEN MATCHED THEN 
   UPDATE SET PJ.ACTA_NOTARIAL=ACTA.ACTA
;
--MERGE (FECHA_SANCION_SAREB

MERGE INTO MINIREC.VAL_PRE_JUDICIAL PJ
    USING (
        SELECT PRC.PRC_ID,TO_DATE(TEV.TEV_VALOR, 'yyyy-mm-dd')AS FECHA 
        FROM HAYA01.PCO_PRC_PROCEDIMIENTOS PCO
        INNER JOIN HAYA01.PRC_PROCEDIMIENTOS PRC ON PCO.PRC_ID=PRC.PRC_ID AND PRC.DD_TAC_ID=(SELECT TAC.DD_TAC_ID FROM HAYA01.DD_TAC_TIPO_ACTUACION TAC WHERE TAC.DD_TAC_CODIGO LIKE '%PCO%')
        INNER JOIN HAYA01.TAR_TAREAS_NOTIFICACIONES TAR ON TAR.PRC_ID = PRC.PRC_ID
        INNER JOIN HAYA01.TEX_TAREA_EXTERNA TEX ON TEX.TAR_ID = TAR.TAR_ID AND TEX.TAP_ID=(SELECT TAP.TAP_ID  FROM HAYA01.TAP_TAREA_PROCEDIMIENTO TAP WHERE TAP.TAP_CODIGO like 'PCO_ResolucionSareb%' )
        INNER JOIN HAYA01.TEV_TAREA_EXTERNA_VALOR TEV ON TEV.TEX_ID=TEX.TEX_ID AND TEV.TEV_NOMBRE LIKE 'fecha'
    ) FECHA
   ON (FECHA.PRC_ID=PJ.ID_PROCEDIMIENTO)
   WHEN MATCHED THEN 
   UPDATE SET 
   PJ.FECHA_SANCION_SAREB=FECHA.FECHA,
   PJ.TURNADO=FECHA.FECHA
;
