--/*
--##########################################
--## AUTOR=RUBEN ROVIRA
--## FECHA_CREACION=20151117
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.2
--## INCIDENCIA_LINK=BKREC-1285
--## PRODUCTO=NO
--## 
--## Finalidad: 
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE RERA_CALCULO_RAS_RANKING AUTHID CURRENT_USER AS

     V_FCFIN  TIMESTAMP;

BEGIN
 
    --** Calculamos porcentaje de recuperación
    DELETE FROM BANK01.TMP_RAS_RANKING_SUBCARTERA_POR;
    COMMIT;

    INSERT INTO BANK01.TMP_RAS_RANKING_SUBCARTERA_POR
    SELECT MES_ID,
      ESQUEMA_ER_ID,
      SUBCARTERA_ER_ID,
      AGENCIA_ER_ID,
      SUM(NVL(ER_IMPORTE_COBRO,0))             AS TOT_IMPORTE_COBRO,
      SUM(NVL(ER_DEUDA_IRREGULAR_STOCK_INI,0)) AS TOT_DEUDA_IRREGULAR_STOCK_INI,
      SUM(NVL(ER_DEUDA_IRREGULAR_ENTRADAS,0))  AS TOT_DEUDA_IRREGULAR_ENTRADAS,
      decode((SUM(NVL(ER_DEUDA_IRREGULAR_STOCK_INI,0)) + SUM(NVL(ER_DEUDA_IRREGULAR_ENTRADAS,0))),0,0,
       (SUM(NVL(ER_IMPORTE_COBRO,0)) / (SUM(NVL(ER_DEUDA_IRREGULAR_STOCK_INI,0)) + SUM(NVL(ER_DEUDA_IRREGULAR_ENTRADAS,0)))) *100) AS TOT_PORCENTAJE
    FROM RECOVERY_BANKIA_DWH.H_CNT_DET_EFICACIA_MES EFI
       , (SELECT DISTINCT 'RAS' ORIGEN, TO_CHAR(FECHA_HIST,'YYYYMM') AS FECHA_HIST FROM BANK01.H_RAS_RANKING_SUBCARTERA) RAS
    WHERE TRIM(TO_CHAR(MES_ID,'000000')) = FECHA_HIST(+) AND ORIGEN IS NULL
    GROUP BY MES_ID,
      ESQUEMA_ER_ID,
      SUBCARTERA_ER_ID,
      AGENCIA_ER_ID;
    COMMIT;

    BANK01.OPERACION_DDL.DDL_TABLE('STATS','TMP_RAS_RANKING_SUBCARTERA_POR');
    
    DELETE  FROM BANK01.H_RAS_RANKING_SUBCARTERA;


    --** Calculamos ranking e Historificamos
    INSERT INTO BANK01.H_RAS_RANKING_SUBCARTERA
    (FECHA_HIST, H_RAS_ID, RAS_ID, RCF_SCA_ID, RCF_AGE_ID, RAS_POSICION, RAS_PORCENTAJE, VERSION, USUARIOCREAR, FECHACREAR)
    SELECT last_day(to_date(TRIM(TO_CHAR(MES_ID,'000000')),'yyyymm')),
      bank01.S_H_RAS_RANKING_SUBCARTERA.NEXTVAL,
      bank01.S_RAS_RANKING_SUBCARTERA.NEXTVAL,
      SUBCARTERA_ER_ID,
      agencia_er_id,
      rank() over (partition BY mes_id, ESQUEMA_ER_ID, SUBCARTERA_ER_ID order by TOT_PORCENTAJE DESC) ranking,
      TOT_PORCENTAJE,
      0, 'REC-BATCH', SYSDATE
    FROM BANK01.TMP_RAS_RANKING_SUBCARTERA_POR
    WHERE TOT_PORCENTAJE > 0;
    COMMIT;

    BANK01.OPERACION_DDL.DDL_TABLE('STATS','H_RAS_RANKING_SUBCARTERA');
    -- Vemos cual es el ultimo mes
    SELECT MAX(FECHA_HIST) INTO V_FCFIN FROM BANK01.H_RAS_RANKING_SUBCARTERA;
    
    --** Calculamos y guardamos ranking por agencia-subcartera del ultimo mes
    DELETE BANK01.RAS_RANKING_SUBCARTERA;
    COMMIT;
    
    INSERT INTO BANK01.RAS_RANKING_SUBCARTERA
    ( RAS_ID, RCF_SCA_ID, RCF_AGE_ID, RAS_POSICION, RAS_PORCENTAJE, VERSION, USUARIOCREAR, FECHACREAR)
    SELECT  RAS_ID, RCF_SCA_ID, RCF_AGE_ID, RAS_POSICION, RAS_PORCENTAJE, VERSION, USUARIOCREAR, FECHACREAR
    FROM BANK01.H_RAS_RANKING_SUBCARTERA
    WHERE FECHA_HIST = V_FCFIN;
    COMMIT;

    BANK01.OPERACION_DDL.DDL_TABLE('STATS','RAS_RANKING_SUBCARTERA');
    COMMIT;
    
EXCEPTION
     WHEN OTHERS THEN

          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(SQLCODE));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------');
          DBMS_OUTPUT.put_line(SQLERRM);

          ROLLBACK;
          RAISE;

END RERA_CALCULO_RAS_RANKING;
/

EXIT;
