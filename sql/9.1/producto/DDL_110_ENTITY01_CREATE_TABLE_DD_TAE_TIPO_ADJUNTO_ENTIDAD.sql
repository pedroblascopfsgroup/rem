--/*
--##########################################
--## AUTOR=PEDROBLASCO
--## FECHA_CREACION=20151119
--## ARTEFACTO=web
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=CMREC-1079
--## PRODUCTO=SI
--## Finalidad: DDL Creaci贸n de la tabla DD_TAE_TIPO_ADJUNTO_ENTIDAD
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versi贸n inicial
--##########################################
--*/

--Para permitir la visualizaci贸n de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_TS_INDEX VARCHAR2(25 CHAR):= '#TABLESPACE_INDEX#'; -- Configuracion Indice
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    BEGIN

    DBMS_OUTPUT.PUT_LINE('********DD_TAE_TIPO_ADJUNTO_ENTIDAD ********'); 
    DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.DD_TAE_TIPO_ADJUNTO_ENTIDAD... Comprobaciones previas'); 
    
    -- Creacion Tabla DD_TAE_TIPO_ADJUNTO_ENTIDAD
    
    -- Comprobamos si existe la tabla   
    V_SQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''DD_TAE_TIPO_ADJUNTO_ENTIDAD'' and owner = '''||V_ESQUEMA||'''';
    EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
    -- Si existe la tabla no hacemos nada
    IF V_NUM_TABLAS = 1 THEN 
            DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.DD_TAE_TIPO_ADJUNTO_ENTIDAD... Tabla YA EXISTE');    
    ELSE  
    	 --Creamos la tabla
    	 V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.DD_TAE_TIPO_ADJUNTO_ENTIDAD
               (DD_TAE_ID NUMBER(16,0) NOT NULL ENABLE, 
				DD_TAE_CODIGO VARCHAR2(20 CHAR) NOT NULL ENABLE, 
				DD_TAE_DESCRIPCION VARCHAR2(100 CHAR), 
				DD_TAE_DESCRIPCION_LARGA VARCHAR2(250 CHAR), 
				VERSION NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE, 
				USUARIOCREAR VARCHAR2(10 CHAR) NOT NULL ENABLE, 
				FECHACREAR TIMESTAMP (6) NOT NULL ENABLE, 
				USUARIOMODIFICAR VARCHAR2(10 CHAR), 
				FECHAMODIFICAR TIMESTAMP (6), 
				USUARIOBORRAR VARCHAR2(10 CHAR), 
				FECHABORRAR TIMESTAMP (6), 
				BORRADO NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE,
  				CONSTRAINT PK_DD_TAE_ID PRIMARY KEY (DD_TAE_ID)	
               )';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.DD_TAE_TIPO_ADJUNTO_ENTIDAD... Tabla creada');
		
		V_MSQL := 'CREATE INDEX '||V_ESQUEMA||'.DD_TAE_TIPO_ADJUNTO_ENTIDAD ON '||V_ESQUEMA||'.DD_TAE_TIPO_ADJUNTO_ENTIDAD (DD_TAE_DESCRIPCION) ' ||
		'  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 ' ||
  		'  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) TABLESPACE ' || V_TS_INDEX;
  		EXECUTE IMMEDIATE V_MSQL;
  		DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.DD_TAE_TIPO_ADJUNTO_ENTIDAD... Indice creado');

  		execute immediate 'CREATE SEQUENCE '||V_ESQUEMA||'.S_DD_TAE_TIPO_ADJUNTO_ENTIDAD  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 100 NOORDER  NOCYCLE';
		DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.S_DD_TAE_TIPO_ADJUNTO_ENTIDAD... Secuencia creada correctamente.');  	
  		
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('********TAE_EIN ********'); 
    DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.TAE_EIN... Comprobaciones previas'); 
    
    -- Creacion Tabla TAE_EIN
    
    -- Comprobamos si existe la tabla   
    V_SQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''TAE_EIN'' and owner = '''||V_ESQUEMA||'''';
    EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
    -- Si existe la tabla no hacemos nada
    IF V_NUM_TABLAS = 1 THEN 
            DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.TAE_EIN... Tabla YA EXISTE');    
    ELSE  
    	 --Creamos la tabla
    	 V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.TAE_EIN
               (TAE_EIN_ID NUMBER(16,0) NOT NULL ENABLE, 
				DD_TAE_ID NUMBER(16,0) NOT NULL ENABLE, 
				DD_EIN_ID NUMBER(16,0) NOT NULL ENABLE,
				VERSION NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE, 
				USUARIOCREAR VARCHAR2(10 CHAR) NOT NULL ENABLE, 
				FECHACREAR TIMESTAMP (6) NOT NULL ENABLE, 
				USUARIOMODIFICAR VARCHAR2(10 CHAR), 
				FECHAMODIFICAR TIMESTAMP (6), 
				USUARIOBORRAR VARCHAR2(10 CHAR), 
				FECHABORRAR TIMESTAMP (6), 
				BORRADO NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE,
  				CONSTRAINT PK_TAE_EIN PRIMARY KEY (TAE_EIN_ID)	
               )';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.TAE_EIN... Tabla creada');
		
		V_MSQL := 'ALTER TABLE ' || V_ESQUEMA || 
			'.TAE_EIN ADD CONSTRAINT FK_TAE_EIN_TAE FOREIGN KEY (DD_TAE_ID) REFERENCES ' || V_ESQUEMA || 
			'.DD_TAE_TIPO_ADJUNTO_ENTIDAD (DD_TAE_ID)';
  		EXECUTE IMMEDIATE V_MSQL;
  		DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.FK_TAE_EIN_TAE... Restriccion creada');

		V_MSQL := 'ALTER TABLE ' || V_ESQUEMA || 
			'.TAE_EIN ADD CONSTRAINT FK_TAE_EIN_EIN FOREIGN KEY (DD_EIN_ID) REFERENCES ' || V_ESQUEMA_M || 
			'.DD_EIN_ENTIDAD_INFORMACION (DD_EIN_ID)';
  		EXECUTE IMMEDIATE V_MSQL;
  		DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.FK_TAE_EIN_EIN... Restriccion creada');

  		execute immediate 'CREATE SEQUENCE '||V_ESQUEMA||'.S_TAE_EIN  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 100 NOORDER  NOCYCLE';
		DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.S_TAE_EIN... Secuencia creada correctamente.');  	
  		
    END IF;
    
EXCEPTION
  WHEN OTHERS THEN
    ERR_NUM := SQLCODE;
    ERR_MSG := SQLERRM;
    DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecuci贸n:'||TO_CHAR(ERR_NUM));
    DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
    DBMS_OUTPUT.put_line(ERR_MSG);
    ROLLBACK;
    RAISE;   
END;
/
EXIT;
