--/*
--###############################################################################################################################################################################--
--## AUTOR=MANUEL RODRIGUEZ
--## FECHA_CREACION=20161212
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=HREOS-373
--## PRODUCTO=NO
--## Finalidad: Procedimiento que actualiza información adicional a los activos a partir de la
--##			tabla APR_AUX_STOCK_BIENES, con datos procedentes de UVEM.
--##                                                                                                                                                                           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:                                                                                                                                                                ##--
--##        0.1 Versión inicial                                                                                                                                                ##--
--##        0.2 Modificado mapeo de algunos campos, actualizacion de ACT_AJD_ADJJUDICIAL.DD_EDJ_ID                                                                             ##--
--##        0.3 Se copia el contenido del campo 'FECHA_REALIZACION_POSESION','BIE_ADJ_F_REA_POSESION' ---> ACT_SPS_SIT_POSESORIA.SPS_FECHA_TOMA_POSESION                       ##--
--##            Se actualiza el campo BIE_DATOS_REGISTRALES con lo que viene en NUM_REFER_CATASTRAL de stock_bienes.dat                                                        ##--
--##		0.4 [Hito: 1.0.3-rem-etl] Modificado mapeo FECHA AUTO ADJUDICACION y FECHA FIRMEZA AUTO ADJUDICACION, también hacemos que siempre actualize DD_EDJ_ID.             ##--
--##		0.5 [Hito: 1.0.5-rem] [HREOS-467] Modificar USUARIOMODIFICAR                                                                                                       ##--
--##			[Hito: 1.0.5-rem] [HREOS-456] Control posesion en ETL Actualización activos desde Recovery (SAREB)                                                             ##--
--##		0.6 [Hito: 1.0.6-rem] [HREOS-519] Desactivar actualización DD_TPO_ID de ACT_SPS_SIT_POSESORIA para incluirla directamente al ETL                                   ##--
--##			[Hito: 1.0.6-rem] [HREOS-530] Actualizar ACT_CAT_CATASTRO.                                                                                                     ##--
--##		0.7 /*[Hito: 1.0.7-patch-rem] [HREOS-574] Se añade la actualización de CARGAS desde Recovery*/--COMENTADO, SE SACARÁ NUEVA VERSIÓN CUANDO ENTRE EL PROCESO.        ##--
--##		0.8 [Hito: ] [HREOS-600] Se añade en ACT_AJD_ADJJUDICIAL el ASU_ID_EXTERNO (AJD_ID_ASUNTO) y el LETRADO (AJD_LETRADO)         									   ##--
--##		0.8 [Hito: ] [HREOS-600] Se añade en ACT_AJD_ADJJUDICIAL el ASU_ID_EXTERNO y el LETRADO            																   ##--
--##		0.9 [Hito: ] [HREOS-1106] Se añade FECHA_AUTO_ADJUD_FIRME en BIE_ADJ_ADJUDICACION y se cambia valor de AJD_FECHA_ADJUDICACION y el merge de DD_EJD_ID.			   ##--
--##                                                                																										   ##--
--###############################################################################################################################################################################--
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;

create or replace PROCEDURE SP_UPA_UPDATE_ACTIVES_SAREB (

	V_USUARIO	VARCHAR2 DEFAULT 'SP_UPA',
	PL_OUTPUT       OUT VARCHAR2
)
AS
--V0.9

V_ESQUEMA VARCHAR2(15 CHAR) := '#ESQUEMA#';
V_ESQUEMA_MASTER VARCHAR2(15 CHAR) := '#ESQUEMA_MASTER#';
V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.
V_NOT_UPDATE VARCHAR2(2000 CHAR) := '';

	--TABLA BIE_BIEN
	TYPE T_TIPO_TABLA1 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA1 IS TABLE OF T_TIPO_TABLA1;
    V_TIPO_TABLA1 T_ARRAY_TABLA1 := T_ARRAY_TABLA1(
      T_TIPO_TABLA1('VALOR_JUDICIAL','BIE_TIPO_SUBASTA'),
      T_TIPO_TABLA1('VIVIENDA_HABITUAL','BIE_VIVIENDA_HABITUAL'),
      T_TIPO_TABLA1('PORCENTAJE_IMPUESTO_COMPRA','BIE_PORCT_IMP_COMPRA')
    );
    V_TMP_TIPO_TABLA1 T_TIPO_TABLA1;


	--TABLA BIE_DATOS_REGISTRALES
	TYPE T_TIPO_TABLA2 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA2 IS TABLE OF T_TIPO_TABLA2;
    V_TIPO_TABLA2 T_ARRAY_TABLA2 := T_ARRAY_TABLA2(
      T_TIPO_TABLA2('NUMERO_FINCA_REGISTRAL','BIE_DREG_NUM_FINCA'),
      T_TIPO_TABLA2('NUMERO_REGISTRO_PROPIEDAD','BIE_DREG_NUM_REGISTRO'),
      T_TIPO_TABLA2('MUNICIPIO_DEL_REGISTRO','BIE_DREG_MUNICIPIO_LIBRO'),
      T_TIPO_TABLA2('NUMERO_LIBRO','BIE_DREG_LIBRO'),
      T_TIPO_TABLA2('TOMO','BIE_DREG_TOMO'),
      T_TIPO_TABLA2('NUMERO_FOLIO','BIE_DREG_FOLIO'),
      T_TIPO_TABLA2('NUMERO_INSCRIPCION','BIE_DREG_INSCRIPCION')
    );
    V_TMP_TIPO_TABLA2 T_TIPO_TABLA2;


    --TABLA BIE_ADJ_ADJUDICACION
	TYPE T_TIPO_TABLA3 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA3 IS TABLE OF T_TIPO_TABLA3;
    V_TIPO_TABLA3 T_ARRAY_TABLA3 := T_ARRAY_TABLA3(
      T_TIPO_TABLA3('IMPORTE_ADJUDICACION','BIE_ADJ_IMPORTE_ADJUDICACION'),
      T_TIPO_TABLA3('OCUPANTES_REALIZACION_DILIG','BIE_ADJ_OCUPANTES_DILIGENCIA'),
      T_TIPO_TABLA3('FECHA_ENTREGA_TITULO_A_GESTOR','BIE_ADJ_F_ENTREGA_GESTOR'),
      T_TIPO_TABLA3('FECHA_PRESENTACION_HACIENDA','BIE_ADJ_F_PRESEN_HACIENDA'),
      T_TIPO_TABLA3('FECHA_PRESENTACION_REGISTRO','BIE_ADJ_F_PRESENT_REGISTRO'),
      T_TIPO_TABLA3('FECHA_RECEPCION_TITULO','BIE_ADJ_F_RECPCION_TITULO'),
      T_TIPO_TABLA3('FECHA_INSCRIPCION_TITULO','BIE_ADJ_F_INSCRIP_TITULO'),
      T_TIPO_TABLA3('FECHA_ENVIO_ADICION','BIE_ADJ_F_ENVIO_ADICION'),
      T_TIPO_TABLA3('FECHA_SEGUNDA_PRESENT_REG','BIE_ADJ_F_SEGUNDA_PRESEN'),
      T_TIPO_TABLA3('FECHA_AUTO_ADJUD','BIE_ADJ_F_DECRETO_N_FIRME'),
      T_TIPO_TABLA3('FECHA_AUTO_ADJUD_FIRME','BIE_ADJ_F_DECRETO_FIRME'),
      T_TIPO_TABLA3('FECHA_CONTRATO_ARRENDAMIENTO','BIE_ADJ_F_CONTRATO_ARREN'),
      T_TIPO_TABLA3('NOMBRE_ARRENDATARIO','BIE_ADJ_NOMBRE_ARRENDATARIO'),
      T_TIPO_TABLA3('LANZAMIENTO','BIE_ADJ_LANZAMIENTO_NECES'),
      T_TIPO_TABLA3('FECHA_SOLICITUD_LANZAMIENTO','BIE_ADJ_F_SOL_LANZAMIENTO'),
      T_TIPO_TABLA3('FECHA_SENYALAMIENTO_LANZAM','BIE_ADJ_F_SEN_LANZAMIENTO'),
      T_TIPO_TABLA3('FECHA_LANZAMIENTO_EFECTUADO','BIE_ADJ_F_REA_LANZAMIENTO'),
      T_TIPO_TABLA3('FUERZA_PUBLICA','BIE_ADJ_NECESARIA_FUERA_PUB'),
      T_TIPO_TABLA3('OCUPANTES','BIE_ADJ_OCUPADO'),
      T_TIPO_TABLA3('FECHA_SOLICITUD_MORATORIA','BIE_ADJ_F_SOL_MORATORIA'),
      T_TIPO_TABLA3('FECHA_RESOLUCION_MORATORIA','BIE_ADJ_F_RES_MORATORIA'),
      T_TIPO_TABLA3('POSESION','BIE_ADJ_POSIBLE_POSESION'),
      T_TIPO_TABLA3('FECHA_SOLICITUD_POSESION','BIE_ADJ_F_SOL_POSESION'),
      T_TIPO_TABLA3('FECHA_SENALAMIENTO_POSESION','BIE_ADJ_F_SEN_POSESION'),
      T_TIPO_TABLA3('FECHA_REALIZACION_POSESION','BIE_ADJ_F_REA_POSESION'),
      T_TIPO_TABLA3('ENTREGA_VOLUNTARIA_POSESION','BIE_ADJ_ENTREGA_VOLUNTARIA'),
      T_TIPO_TABLA3('FECHA_RECEPCION_LLAVES','BIE_ADJ_F_RECEP_DEPOSITARIO'),
      T_TIPO_TABLA3('FECHA_ENVIO_LLAVES_A_GESTORIA','BIE_ADJ_F_ENVIO_LLAVES'),
      T_TIPO_TABLA3('IMPORTE_REMATE','BIE_ADJ_CESION_REMATE_IMP')
    );
    V_TMP_TIPO_TABLA3 T_TIPO_TABLA3;


    --TABLA ACT_AJD_ADJJUDICIAL
	TYPE T_TIPO_TABLA4 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA4 IS TABLE OF T_TIPO_TABLA4;
    V_TIPO_TABLA4 T_ARRAY_TABLA4 := T_ARRAY_TABLA4(
      T_TIPO_TABLA4('NUM_AUTOS_JUZGADO','AJD_NUM_AUTO'),
      T_TIPO_TABLA4('NOMBRE_PROCURADOR','AJD_PROCURADOR'),
      T_TIPO_TABLA4('FECHA_AUTO_ADJUD','AJD_FECHA_ADJUDICACION'),
      T_TIPO_TABLA4('PROCEDIMIENTO_ID','AJD_ID_ASUNTO'),
      T_TIPO_TABLA4('AJD_LETRADO','AJD_LETRADO')
    );
    V_TMP_TIPO_TABLA4 T_TIPO_TABLA4;


    --TABLA ACT_ACTIVO
	TYPE T_TIPO_TABLA5 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA5 IS TABLE OF T_TIPO_TABLA5;
    V_TIPO_TABLA5 T_ARRAY_TABLA5 := T_ARRAY_TABLA5(
      T_TIPO_TABLA5('SE_REQUIERE_CAMBIO_CERRADURA','ACT_LLAVES_NECESARIAS')
    );
    V_TMP_TIPO_TABLA5 T_TIPO_TABLA5;


    --TABLA ACT_CAT_CATASTRO
	TYPE T_TIPO_TABLA6 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA6 IS TABLE OF T_TIPO_TABLA6;
    V_TIPO_TABLA6 T_ARRAY_TABLA6 := T_ARRAY_TABLA6(
	  T_TIPO_TABLA6('NUM_REFER_CATASTRAL','CAT_REF_CATASTRAL')
    );
    V_TMP_TIPO_TABLA6 T_TIPO_TABLA6;

    --TABLA ACT_SPS_SIT_POSESORIA
	TYPE T_TIPO_TABLA7 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA7 IS TABLE OF T_TIPO_TABLA7;
    V_TIPO_TABLA7 T_ARRAY_TABLA7 := T_ARRAY_TABLA7(
      T_TIPO_TABLA7('FECHA_CONTRATO_ARRENDAMIENTO','SPS_FECHA_TITULO'),
      T_TIPO_TABLA7('FECHA_REALIZACION_POSESION','SPS_FECHA_TOMA_POSESION')
    );
    V_TMP_TIPO_TABLA7 T_TIPO_TABLA7;

    -------------------------------------------------------------------------------------------------

    -- CARGAS --

    /*TABLA BIE_CAR_CARGAS*/
    --BIE_CAR_TITULAR
    --DD_TPC_ID
    --BIE_CAR_IMPORTE_REGISTRAL
    --BIE_CAR_IMPORTE_ECONOMICO
    --BIE_CAR_REGISTRAL
    --DD_SIC_ID
    --BIE_CAR_FECHA_INSCRIPCION
    --BIE_CAR_FECHA_CANCELACION
    --BIE_CAR_ECONOMICA
    --DD_SIC_ID2


    /*TABLA ACT_CRG_CARGAS*/
    --DD_TCA_ID
    --DD_STC_ID
    --CRG_FECHA_CANCEL_REGISTRAL
    --CRG_RECOVERY_ID

BEGIN

	PL_OUTPUT := ' ';

	DBMS_OUTPUT.PUT_LINE('[INFO] INICIO DEL PROCESO DE ACTUALIZACIÓN DE INFORMACIÓN DE ACTIVOS.');
	DBMS_OUTPUT.PUT_LINE('*********************************************************************');
	DBMS_OUTPUT.PUT_LINE('');



	/*----------------------------------*/
	/*----- ACTUALIZAMOS BIE_BIEN ------*/
	/*----------------------------------*/

	DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA BIE_BIENES...');
	DBMS_OUTPUT.PUT_LINE('------------------------------------------------------');


	FOR I IN V_TIPO_TABLA1.FIRST .. V_TIPO_TABLA1.LAST
    LOOP

	V_TMP_TIPO_TABLA1 := V_TIPO_TABLA1(I);

	        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	WITH PERIMETRO AS (
	  SELECT '||V_TMP_TIPO_TABLA1(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT COUNT(DISTINCT NUMERO_ACTIVO)
	FROM '||V_ESQUEMA||'.BIE_BIEN BIE
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.BIE_ID = BIE.BIE_ID
	INNER JOIN PERIMETRO APR
	  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
	WHERE BIE.'||V_TMP_TIPO_TABLA1(2)||' IS NULL
	AND APR.'||V_TMP_TIPO_TABLA1(1)||' IS NOT NULL
	AND APR.ORDEN = 1
	'
	        ;
	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_BIEN.['||V_TMP_TIPO_TABLA1(2)||']');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA1(2)||' '||CHR(10)||'';

	END IF;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_BIEN:');
	DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

    --ACTUALIZAMOS LOS CAMPOS DE BIE_BIEN

    FOR I IN V_TIPO_TABLA1.FIRST .. V_TIPO_TABLA1.LAST
    LOOP

	V_TMP_TIPO_TABLA1 := V_TIPO_TABLA1(I);

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_BIEN BIE USING
	(
	WITH DISTINTOS AS (
	  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT '||V_TMP_TIPO_TABLA1(1)||', ACT.BIE_ID
	FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	LEFT JOIN DISTINTOS
	  ON DISTINTOS.APR_ID = APR.APR_ID
	LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	WHERE '||V_TMP_TIPO_TABLA1(1)||' IS NOT NULL
	AND ACT.BIE_ID IS NOT NULL
	AND DISTINTOS.ORDEN = 1
	) TMP
	ON (BIE.BIE_ID = TMP.BIE_ID)
	WHEN MATCHED THEN UPDATE SET
	BIE.'||V_TMP_TIPO_TABLA1(2)||' = TMP.'||V_TMP_TIPO_TABLA1(1)||',
	BIE.USUARIOMODIFICAR = '''||V_USUARIO||''',
	BIE.FECHAMODIFICAR = SYSDATE
	WHERE BIE.'||V_TMP_TIPO_TABLA1(2)||' IS NULL
	'
	;
	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_BIEN.'||V_TMP_TIPO_TABLA1(2)||' '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := '[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_BIEN.'||V_TMP_TIPO_TABLA1(2)||' '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	ELSE

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS '||V_ESQUEMA||'.BIE_BIEN.'||V_TMP_TIPO_TABLA1(2)||' Ninguna fila actualizada.');
	PL_OUTPUT := '[INFO] REGISTROS '||V_ESQUEMA||'.BIE_BIEN.'||V_TMP_TIPO_TABLA1(2)||' Ninguna fila actualizada. '||CHR(10)||CHR(10);

	END IF;

	COMMIT;

    END LOOP;

	DBMS_OUTPUT.PUT_LINE('******************************************************');
	DBMS_OUTPUT.PUT_LINE('');



	/*----------------------------------------------*/
	/*----- ACTUALIZAMOS BIE_DATOS_REGISTRALES -----*/
	/*----------------------------------------------*/

	V_NOT_UPDATE := '';

	DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA BIE_DATOS_REGISTRALES...');
	DBMS_OUTPUT.PUT_LINE('-----------------------------------------------------------------');


	FOR I IN V_TIPO_TABLA2.FIRST .. V_TIPO_TABLA2.LAST
    LOOP

	V_TMP_TIPO_TABLA2 := V_TIPO_TABLA2(I);

	        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	WITH PERIMETRO AS (
	  SELECT '||V_TMP_TIPO_TABLA2(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT COUNT(DISTINCT NUMERO_ACTIVO)
	FROM '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES DREG
	INNER JOIN '||V_ESQUEMA||'.BIE_BIEN BIE
	  ON BIE.BIE_ID = DREG.BIE_ID
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.BIE_ID = BIE.BIE_ID
	INNER JOIN PERIMETRO APR
	  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
	WHERE DREG.'||V_TMP_TIPO_TABLA2(2)||' IS NULL
	AND APR.'||V_TMP_TIPO_TABLA2(1)||' IS NOT NULL
	AND APR.ORDEN = 1
	'
	;
	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES.['||V_TMP_TIPO_TABLA2(2)||']');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA2(2)||' '||CHR(10)||'';

	END IF;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES:');
	DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

    --ACTUALIZAMOS LOS CAMPOS DE BIE_DATOS_REGISTRALES

	FOR I IN V_TIPO_TABLA2.FIRST .. V_TIPO_TABLA2.LAST
    LOOP

	V_TMP_TIPO_TABLA2 := V_TIPO_TABLA2(I);

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES DREG USING
	(
	WITH DISTINTOS AS (
	  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT '||V_TMP_TIPO_TABLA2(1)||', ACT.BIE_ID
	FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	LEFT JOIN DISTINTOS
	  ON DISTINTOS.APR_ID = APR.APR_ID
	LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	WHERE '||V_TMP_TIPO_TABLA2(1)||' IS NOT NULL
	AND ACT.BIE_ID IS NOT NULL
	AND DISTINTOS.ORDEN = 1
	) TMP
	ON (DREG.BIE_ID = TMP.BIE_ID)
	WHEN MATCHED THEN UPDATE SET
	DREG.'||V_TMP_TIPO_TABLA2(2)||' = TMP.'||V_TMP_TIPO_TABLA2(1)||',
	DREG.USUARIOMODIFICAR = '''||V_USUARIO||''',
	DREG.FECHAMODIFICAR = SYSDATE
	WHERE DREG.'||V_TMP_TIPO_TABLA2(2)||' IS NULL
	'
	;
	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES.'||V_TMP_TIPO_TABLA2(2)||' '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES.'||V_TMP_TIPO_TABLA2(2)||' '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	ELSE

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES.'||V_TMP_TIPO_TABLA2(2)||' Ninguna fila actualizada.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES.'||V_TMP_TIPO_TABLA2(2)||' Ninguna fila actualizada. '||CHR(10)||CHR(10);

	END IF;

	COMMIT;

    END LOOP;

	DBMS_OUTPUT.PUT_LINE('******************************************************');
	DBMS_OUTPUT.PUT_LINE('');

	/*---------------------------------------------*/
	/*----- ACTUALIZAMOS BIE_ADJ_ADJUDICACION -----*/
	/*---------------------------------------------*/

	V_NOT_UPDATE := '';

	DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA BIE_ADJ_ADJUDICACION...');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	FOR I IN V_TIPO_TABLA3.FIRST .. V_TIPO_TABLA3.LAST
    LOOP

	V_TMP_TIPO_TABLA3 := V_TIPO_TABLA3(I);

	        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	WITH PERIMETRO AS (
	  SELECT '||V_TMP_TIPO_TABLA3(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT COUNT(DISTINCT NUMERO_ACTIVO)
	FROM '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION ADJ
	INNER JOIN '||V_ESQUEMA||'.BIE_BIEN BIE
	  ON BIE.BIE_ID = ADJ.BIE_ID
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.BIE_ID = BIE.BIE_ID
	INNER JOIN PERIMETRO APR
	  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
	WHERE ADJ.'||V_TMP_TIPO_TABLA3(2)||' IS NULL
	AND APR.'||V_TMP_TIPO_TABLA3(1)||' IS NOT NULL
	AND APR.ORDEN = 1
	'
	;
	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;

	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION.['||V_TMP_TIPO_TABLA3(2)||']');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA3(2)||' '||CHR(10)||'';

	END IF;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION:');
	DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

    --ACTUALIZAMOS LOS CAMPOS DE BIE_ADJ_ADJUDICACION

    FOR I IN V_TIPO_TABLA3.FIRST .. V_TIPO_TABLA3.LAST
    LOOP

	V_TMP_TIPO_TABLA3 := V_TIPO_TABLA3(I);

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION ADJ USING
	(
	WITH DISTINTOS AS (
	  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT '||V_TMP_TIPO_TABLA3(1)||', ACT.BIE_ID
	FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	LEFT JOIN DISTINTOS
	  ON DISTINTOS.APR_ID = APR.APR_ID
	LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	WHERE '||V_TMP_TIPO_TABLA3(1)||' IS NOT NULL
	AND ACT.BIE_ID IS NOT NULL
	AND DISTINTOS.ORDEN = 1
	) TMP
	ON (ADJ.BIE_ID = TMP.BIE_ID)
	WHEN MATCHED THEN UPDATE SET
	ADJ.'||V_TMP_TIPO_TABLA3(2)||' = TMP.'||V_TMP_TIPO_TABLA3(1)||',
	ADJ.USUARIOMODIFICAR = '''||V_USUARIO||''',
	ADJ.FECHAMODIFICAR = SYSDATE
	WHERE ADJ.'||V_TMP_TIPO_TABLA3(2)||' IS NULL
	'
	;
	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION.'||V_TMP_TIPO_TABLA3(2)||' '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION.'||V_TMP_TIPO_TABLA3(2)||' '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	ELSE

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION.'||V_TMP_TIPO_TABLA3(2)||' Ninguna fila actualizada.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION.'||V_TMP_TIPO_TABLA3(2)||' Ninguna fila actualizada. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('******************************************************');
	DBMS_OUTPUT.PUT_LINE('');



	/*--------------------------------------------*/
	/*----- ACTUALIZAMOS ACT_AJD_ADJJUDICIAL -----*/
	/*--------------------------------------------*/

	V_NOT_UPDATE := '';

	DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA ACT_AJD_ADJJUDICIAL...');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	FOR I IN V_TIPO_TABLA4.FIRST .. V_TIPO_TABLA4.LAST
    LOOP

	V_TMP_TIPO_TABLA4 := V_TIPO_TABLA4(I);

	        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	WITH PERIMETRO AS (
	  SELECT '||V_TMP_TIPO_TABLA4(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT COUNT(DISTINCT NUMERO_ACTIVO)
	FROM '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL AJD
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_ID = AJD.ACT_ID
	INNER JOIN '||V_ESQUEMA||'.BIE_BIEN BIE
	  ON BIE.BIE_ID = ACT.BIE_ID
	INNER JOIN PERIMETRO APR
	  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
	WHERE AJD.'||V_TMP_TIPO_TABLA4(2)||' IS NULL
	AND APR.'||V_TMP_TIPO_TABLA4(1)||' IS NOT NULL
	AND APR.ORDEN = 1
	'
	;
	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;

	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.['||V_TMP_TIPO_TABLA4(2)||']');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA4(2)||' '||CHR(10)||'';

	END IF;

    END LOOP;

	DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL:');
	DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

    --ACTUALIZAMOS LOS CAMPOS DE ACT_AJD_ADJJUDICIAL

    FOR I IN V_TIPO_TABLA4.FIRST .. V_TIPO_TABLA4.LAST
    LOOP

	V_TMP_TIPO_TABLA4 := V_TIPO_TABLA4(I);

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL AJD USING
	(
	WITH DISTINTOS AS (
	  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT '||V_TMP_TIPO_TABLA4(1)||', ACT.ACT_ID
	FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	LEFT JOIN DISTINTOS
	  ON DISTINTOS.APR_ID = APR.APR_ID
	LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	WHERE '||V_TMP_TIPO_TABLA4(1)||' IS NOT NULL
	AND ACT.BIE_ID IS NOT NULL
	AND DISTINTOS.ORDEN = 1
	) TMP
	ON (AJD.ACT_ID = TMP.ACT_ID)
	WHEN MATCHED THEN UPDATE SET
	AJD.'||V_TMP_TIPO_TABLA4(2)||' = TMP.'||V_TMP_TIPO_TABLA4(1)||',
	AJD.USUARIOMODIFICAR = '''||V_USUARIO||''',
	AJD.FECHAMODIFICAR = SYSDATE
	WHERE AJD.'||V_TMP_TIPO_TABLA4(2)||' IS NULL
	'
	;
	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.'||V_TMP_TIPO_TABLA4(2)||' '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.'||V_TMP_TIPO_TABLA4(2)||' '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	ELSE

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.'||V_TMP_TIPO_TABLA4(2)||' Ninguna fila actualizada.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.'||V_TMP_TIPO_TABLA4(2)||' Ninguna fila actualizada. '||CHR(10)||CHR(10);

	END IF;

	COMMIT;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('******************************************************');
	DBMS_OUTPUT.PUT_LINE('');



	/*------------------------------------------------------*/
	/*----- ACTUALIZAMOS ACT_AJD_ADJJUDICIAL.DD_EDJ_ID -----*/
	/*------------------------------------------------------*/

	DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA ACT_AJD_ADJJUDICIAL.DD_EDJ_ID...');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

    V_SQL := '
    MERGE INTO '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL AJD USING
    (
          WITH DISTINTOS AS (
                SELECT 
                      APR_ID
                      , NUMERO_ACTIVO
                      , ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
                FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
          )
          SELECT 
                ADJ.BIE_ADJ_F_DECRETO_N_FIRME
                , AJD.AJD_FECHA_ADJUDICACION
                , ADJ.BIE_ADJ_F_DECRETO_FIRME
                , ACT.ACT_ID
                , BIE.BIE_ID
                , AJD.DD_EDJ_ID
                , CASE
                      WHEN AJD.AJD_FECHA_ADJUDICACION IS NOT NULL AND ADJ.BIE_ADJ_F_DECRETO_FIRME IS NOT NULL
                        THEN (SELECT DD_EDJ_ID FROM '||V_ESQUEMA||'.DD_EDJ_ESTADO_ADJUDICACION WHERE DD_EDJ_CODIGO = ''02'')
                      WHEN AJD.AJD_FECHA_ADJUDICACION IS NULL AND ADJ.BIE_ADJ_F_DECRETO_FIRME IS NOT NULL
                        THEN (SELECT DD_EDJ_ID FROM '||V_ESQUEMA||'.DD_EDJ_ESTADO_ADJUDICACION WHERE DD_EDJ_CODIGO = ''02'')
                      WHEN AJD.AJD_FECHA_ADJUDICACION IS NOT NULL AND ADJ.BIE_ADJ_F_DECRETO_FIRME IS NULL
                        THEN (SELECT DD_EDJ_ID FROM '||V_ESQUEMA||'.DD_EDJ_ESTADO_ADJUDICACION WHERE DD_EDJ_CODIGO = ''01'')
                      ELSE (SELECT DD_EDJ_ID FROM '||V_ESQUEMA||'.DD_EDJ_ESTADO_ADJUDICACION WHERE DD_EDJ_CODIGO = ''03'')
                END AS DD_EDJ_ID_NUEVO
          FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
                INNER JOIN DISTINTOS ON DISTINTOS.APR_ID = APR.APR_ID
                INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
                INNER JOIN '||V_ESQUEMA||'.BIE_BIEN BIE ON BIE.BIE_ID = ACT.BIE_ID
                INNER JOIN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION ADJ ON ADJ.BIE_ID = BIE.BIE_ID
                INNER JOIN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL AJD ON AJD.ACT_ID = ACT.ACT_ID
          WHERE DISTINTOS.ORDEN = 1
    ) TMP
    ON (AJD.ACT_ID = TMP.ACT_ID)
    WHEN MATCHED THEN UPDATE SET
          AJD.DD_EDJ_ID = TMP.DD_EDJ_ID_NUEVO,
          AJD.USUARIOMODIFICAR = '''||V_USUARIO||''',
          AJD.FECHAMODIFICAR = SYSDATE
    '
    ;
    EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.DD_EDJ_ID '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.DD_EDJ_ID. '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	ELSE

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.DD_EDJ_ID Ninguna fila actualizada.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.DD_EDJ_ID Ninguna fila actualizada. '||CHR(10)||CHR(10);

	END IF;

	COMMIT;

    DBMS_OUTPUT.PUT_LINE('******************************************************');
    DBMS_OUTPUT.PUT_LINE('');

	/*-----------------------------------*/
	/*----- ACTUALIZAMOS ACT_ACTIVO -----*/
	/*-----------------------------------*/

	V_NOT_UPDATE := '';

	DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA ACT_ACTIVO...');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	FOR I IN V_TIPO_TABLA5.FIRST .. V_TIPO_TABLA5.LAST
    LOOP

	V_TMP_TIPO_TABLA5 := V_TIPO_TABLA5(I);

	        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	WITH PERIMETRO AS (
	  SELECT '||V_TMP_TIPO_TABLA5(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT COUNT(DISTINCT NUMERO_ACTIVO)
	FROM '||V_ESQUEMA||'.ACT_ACTIVO ACT
	INNER JOIN '||V_ESQUEMA||'.BIE_BIEN BIE
	  ON BIE.BIE_ID = ACT.BIE_ID
	INNER JOIN PERIMETRO APR
	  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
	WHERE ACT.'||V_TMP_TIPO_TABLA5(2)||' IS NULL
	AND APR.'||V_TMP_TIPO_TABLA5(1)||' IS NOT NULL
	AND APR.ORDEN = 1
	'
	;
	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;

	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_ACTIVO.['||V_TMP_TIPO_TABLA5(2)||']');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA5(2)||' '||CHR(10)||'';

	END IF;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_ACTIVO:');
	DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

    --ACTUALIZAMOS LOS CAMPOS DE ACT_ACTIVO

    FOR I IN V_TIPO_TABLA5.FIRST .. V_TIPO_TABLA5.LAST
    LOOP

	V_TMP_TIPO_TABLA5 := V_TIPO_TABLA5(I);

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.ACT_ACTIVO ACT USING
	(
	WITH DISTINTOS AS (
	  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT '||V_TMP_TIPO_TABLA5(1)||', ACT.ACT_ID
	FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	LEFT JOIN DISTINTOS
	  ON DISTINTOS.APR_ID = APR.APR_ID
	LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	WHERE '||V_TMP_TIPO_TABLA5(1)||' IS NOT NULL
	AND ACT.BIE_ID IS NOT NULL
	AND DISTINTOS.ORDEN = 1
	) TMP
	ON (ACT.ACT_ID = TMP.ACT_ID)
	WHEN MATCHED THEN UPDATE SET
	ACT.'||V_TMP_TIPO_TABLA5(2)||' = TMP.'||V_TMP_TIPO_TABLA5(1)||',
	ACT.USUARIOMODIFICAR = '''||V_USUARIO||''',
	ACT.FECHAMODIFICAR = SYSDATE
	WHERE ACT.'||V_TMP_TIPO_TABLA5(2)||' IS NULL
	'
	;
	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_ACTIVO.'||V_TMP_TIPO_TABLA5(2)||' '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_ACTIVO.'||V_TMP_TIPO_TABLA5(2)||' '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	ELSE

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_ACTIVO.'||V_TMP_TIPO_TABLA5(2)||' Ninguna fila actualizada.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_ACTIVO.'||V_TMP_TIPO_TABLA5(2)||' Ninguna fila actualizada. '||CHR(10)||CHR(10);

	END IF;

	COMMIT;

	END LOOP;

    DBMS_OUTPUT.PUT_LINE('******************************************************');
    DBMS_OUTPUT.PUT_LINE('');



	/*-----------------------------------------*/
	/*----- ACTUALIZAMOS ACT_CAT_CATASTRO -----*//***HREOS-530***/
	/*-----------------------------------------*/

	V_NOT_UPDATE := '';

	DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA ACT_CAT_CATASTRO...');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	FOR I IN V_TIPO_TABLA6.FIRST .. V_TIPO_TABLA6.LAST
    LOOP

	V_TMP_TIPO_TABLA6 := V_TIPO_TABLA6(I);

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(*)
	FROM (
	SELECT
	APR.'||V_TMP_TIPO_TABLA6(1)||',
	APR.NUMERO_ACTIVO,
	ACT.ACT_ID
	FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	WHERE '||V_TMP_TIPO_TABLA6(1)||' IS NOT NULL AND NOT EXISTS (
	SELECT 1 FROM '||V_ESQUEMA||'.ACT_CAT_CATASTRO CAT WHERE (UPPER(CAT.'||V_TMP_TIPO_TABLA6(2)||') like UPPER(APR.'||V_TMP_TIPO_TABLA6(1)||') AND CAT.ACT_ID = ACT.ACT_ID)
	)
	)
	'
	;
	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CAT_CATASTRO.['||V_TMP_TIPO_TABLA6(2)||']');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA6(2)||' '||CHR(10)||'';

	END IF;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CAT_CATASTRO:');
	DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

    --INSERTAMOS EN  ACT_CAT_CATASTRO

    FOR I IN V_TIPO_TABLA6.FIRST .. V_TIPO_TABLA6.LAST
    LOOP

	V_TMP_TIPO_TABLA6 := V_TIPO_TABLA6(I);

	V_SQL := '
	INSERT INTO '||V_ESQUEMA||'.ACT_CAT_CATASTRO
	(
	CAT_ID,
	ACT_ID,
	CAT_REF_CATASTRAL,
	VERSION,
	USUARIOCREAR,
	FECHACREAR,
	BORRADO
	)
	WITH PERIMETRO AS (
	SELECT *
	FROM (
	SELECT
	APR.'||V_TMP_TIPO_TABLA6(1)||',
	APR.NUMERO_ACTIVO,
	ACT.ACT_ID
	FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	WHERE '||V_TMP_TIPO_TABLA6(1)||' IS NOT NULL AND NOT EXISTS (
	SELECT 1 FROM '||V_ESQUEMA||'.ACT_CAT_CATASTRO CAT WHERE (UPPER(CAT.'||V_TMP_TIPO_TABLA6(2)||') like UPPER(APR.'||V_TMP_TIPO_TABLA6(1)||') AND CAT.ACT_ID = ACT.ACT_ID)
	)
	)
	)
	SELECT
	'||V_ESQUEMA||'.S_ACT_CAT_CATASTRO.NEXTVAL,
	PERIMETRO.ACT_ID,
	UPPER(PERIMETRO.'||V_TMP_TIPO_TABLA6(1)||'),
	0,
	'''||V_USUARIO||''',
	SYSDATE,
	0
	FROM PERIMETRO
	'
	;
	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CAT_CATASTRO. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CAT_CATASTRO.'||V_TMP_TIPO_TABLA6(2)||' '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	ELSE

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CAT_CATASTRO. Ninguna fila insertada.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CAT_CATASTRO.'||V_TMP_TIPO_TABLA6(2)||' Ninguna fila insertada. '||CHR(10)||CHR(10);

	END IF;

	COMMIT;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('******************************************************');
	DBMS_OUTPUT.PUT_LINE('');



	/*----------------------------------------------*/
	/*----- ACTUALIZAMOS ACT_SPS_SIT_POSESORIA -----*/
	/*----------------------------------------------*/

	V_NOT_UPDATE := '';

	DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA ACT_SPS_SIT_POSESORIA...');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	FOR I IN V_TIPO_TABLA7.FIRST .. V_TIPO_TABLA7.LAST
    LOOP

	V_TMP_TIPO_TABLA7 := V_TIPO_TABLA7(I);

	        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	WITH PERIMETRO AS (
	  SELECT '||V_TMP_TIPO_TABLA7(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT COUNT(DISTINCT NUMERO_ACTIVO)
	FROM '||V_ESQUEMA||'.ACT_SPS_SIT_POSESORIA AJD
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_ID = AJD.ACT_ID
	INNER JOIN '||V_ESQUEMA||'.BIE_BIEN BIE
	  ON BIE.BIE_ID = ACT.BIE_ID
	INNER JOIN PERIMETRO APR
	  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
	WHERE AJD.'||V_TMP_TIPO_TABLA7(2)||' IS NULL
	AND APR.'||V_TMP_TIPO_TABLA7(1)||' IS NOT NULL
	AND APR.ORDEN = 1
	'
	;
	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_SPS_SIT_POSESORIA.['||V_TMP_TIPO_TABLA7(2)||']');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA7(2)||' '||CHR(10)||'';

	END IF;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_SPS_SIT_POSESORIA:');
	DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

    --ACTUALIZAMOS LOS CAMPOS DE ACT_SPS_SIT_POSESORIA

    FOR I IN V_TIPO_TABLA7.FIRST .. V_TIPO_TABLA7.LAST
    LOOP

	V_TMP_TIPO_TABLA7 := V_TIPO_TABLA7(I);

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.ACT_SPS_SIT_POSESORIA AJD USING
	(
	WITH DISTINTOS AS (
	  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
	  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	)
	SELECT '||V_TMP_TIPO_TABLA7(1)||', ACT.ACT_ID
	FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
	LEFT JOIN DISTINTOS
	  ON DISTINTOS.APR_ID = APR.APR_ID
	LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	WHERE '||V_TMP_TIPO_TABLA7(1)||' IS NOT NULL
	AND ACT.BIE_ID IS NOT NULL
	AND DISTINTOS.ORDEN = 1
	) TMP
	ON (AJD.ACT_ID = TMP.ACT_ID)
	WHEN MATCHED THEN UPDATE SET
	AJD.'||V_TMP_TIPO_TABLA7(2)||' = TMP.'||V_TMP_TIPO_TABLA7(1)||',
	AJD.USUARIOMODIFICAR = '''||V_USUARIO||''',
	AJD.FECHAMODIFICAR = SYSDATE
	WHERE AJD.'||V_TMP_TIPO_TABLA7(2)||' IS NULL
	'
	;
	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_SPS_SIT_POSESORIA.'||V_TMP_TIPO_TABLA7(2)||' '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_SPS_SIT_POSESORIA.'||V_TMP_TIPO_TABLA7(2)||' '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	ELSE

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_SPS_SIT_POSESORIA.'||V_TMP_TIPO_TABLA7(2)||' Ninguna fila actualizada.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_SPS_SIT_POSESORIA.'||V_TMP_TIPO_TABLA7(2)||' Ninguna fila actualizada. '||CHR(10)||CHR(10);

	END IF;

	COMMIT;

    END LOOP;

	DBMS_OUTPUT.PUT_LINE('******************************************************');
	DBMS_OUTPUT.PUT_LINE('');





	   --------------------------------------------------              --------------------------------------------------
	  -----##########################################-----	  -----##########################################-----
	 -----   	  -----	 -----   	  -----
	----	PARTE DE ACTUALIZACIÓN DE CARGAS	----        ----	PARTE DE ACTUALIZACIÓN DE CARGAS	----
	 -----	  -----          -----	  -----
	  -----##########################################-----            -----##########################################-----
	   --------------------------------------------------              --------------------------------------------------




/*
	--------------------------------------------------
	-----       ACTUALIZAMOS BIE_CAR_CARGAS      -----***HREOS-574***
	--------------------------------------------------

  V_NOT_UPDATE := '';

  DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA BIE_CAR_CARGAS...');
  DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');


	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	TITULAR_CARGA,
	CAR.BIE_CAR_TITULAR,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND UPPER(APR.TITULAR_CARGA) NOT LIKE UPPER(BIE_CAR_TITULAR)
	OR (BIE_CAR_TITULAR IS NULL
	AND TITULAR_CARGA IS NOT NULL)
	)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[BIE_CAR_TITULAR]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'BIE_CAR_TITULAR'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	TITULAR_CARGA,
	CAR.BIE_CAR_TITULAR,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND UPPER(APR.TITULAR_CARGA) NOT LIKE UPPER(BIE_CAR_TITULAR)
	OR (BIE_CAR_TITULAR IS NULL
	AND TITULAR_CARGA IS NOT NULL)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.BIE_CAR_TITULAR = TMP.TITULAR_CARGA,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.BIE_CAR_TITULAR '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

  V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	(SELECT DD_TPC_ID FROM '||V_ESQUEMA||'.DD_TPC_TIPO_CARGA WHERE DD_TPC_CODIGO = DECODE(APR.TIPO_CARGA,''01'',''1'',''02'',''2'',''03'',''3'',''04'',''4'',''0'')) AS DD_TPC_ID_NEW,
	(SELECT DD_TPC_DESCRIPCION FROM '||V_ESQUEMA||'.DD_TPC_TIPO_CARGA WHERE DD_TPC_CODIGO = DECODE(APR.TIPO_CARGA,''01'',''1'',''02'',''2'',''03'',''3'',''04'',''4'',''0'')) AS TIPO_CARGA_DESC,
	CAR.DD_TPC_ID,
	(SELECT DD_TPC_DESCRIPCION FROM '||V_ESQUEMA||'.DD_TPC_TIPO_CARGA WHERE DD_TPC_ID = CAR.DD_TPC_ID) AS TIPO_CARGA_DESC_OLD,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	)
	WHERE DD_TPC_ID_NEW != DD_TPC_ID
	OR (DD_TPC_ID IS NULL
	AND DD_TPC_ID_NEW IS NOT NULL)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[DD_TPC_ID]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'DD_TPC_ID'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT * FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	(SELECT DD_TPC_ID FROM '||V_ESQUEMA||'.DD_TPC_TIPO_CARGA WHERE DD_TPC_CODIGO = DECODE(APR.TIPO_CARGA,''01'',''1'',''02'',''2'',''03'',''3'',''04'',''4'',''0'')) AS DD_TPC_ID_NEW,
	(SELECT DD_TPC_DESCRIPCION FROM '||V_ESQUEMA||'.DD_TPC_TIPO_CARGA WHERE DD_TPC_CODIGO = DECODE(APR.TIPO_CARGA,''01'',''1'',''02'',''2'',''03'',''3'',''04'',''4'',''0'')) AS TIPO_CARGA_DESC,
	CAR.DD_TPC_ID,
	(SELECT DD_TPC_DESCRIPCION FROM '||V_ESQUEMA||'.DD_TPC_TIPO_CARGA WHERE DD_TPC_ID = CAR.DD_TPC_ID) AS TIPO_CARGA_DESC_OLD,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	)
	WHERE DD_TPC_ID_NEW != DD_TPC_ID
	OR (DD_TPC_ID IS NULL
	AND DD_TPC_ID_NEW IS NOT NULL)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.DD_TPC_ID = TMP.DD_TPC_ID_NEW,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.DD_TPC_ID '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

        V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	IMPORTE_CARGA,
	CAR.BIE_CAR_IMPORTE_REGISTRAL,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_REGISTRAL = 1
	AND APR.CARGA_CONTENIDO_ECONOM != 1
	AND IMPORTE_CARGA != CAR.BIE_CAR_IMPORTE_REGISTRAL
	OR (BIE_CAR_IMPORTE_REGISTRAL IS NULL
	AND IMPORTE_CARGA IS NOT NULL
	AND IMPORTE_CARGA != 0)
	)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[BIE_CAR_IMPORTE_REGISTRAL]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'BIE_CAR_IMPORTE_REGISTRAL'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	IMPORTE_CARGA,
	CAR.BIE_CAR_IMPORTE_REGISTRAL,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_REGISTRAL = 1
	AND APR.CARGA_CONTENIDO_ECONOM != 1
	AND IMPORTE_CARGA != CAR.BIE_CAR_IMPORTE_REGISTRAL
	OR (BIE_CAR_IMPORTE_REGISTRAL IS NULL
	AND IMPORTE_CARGA IS NOT NULL
	AND IMPORTE_CARGA != 0)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.BIE_CAR_IMPORTE_REGISTRAL = TMP.IMPORTE_CARGA,
	CAR.BIE_CAR_IMPORTE_ECONOMICO = NULL,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.BIE_CAR_IMPORTE_REGISTRAL '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

        V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	IMPORTE_CARGA,
	CAR.BIE_CAR_IMPORTE_ECONOMICO,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_ECONOMICA = 1
	AND APR.CARGA_CONTENIDO_ECONOM = 1
	AND IMPORTE_CARGA != CAR.BIE_CAR_IMPORTE_ECONOMICO
	OR (BIE_CAR_IMPORTE_ECONOMICO IS NULL
	AND IMPORTE_CARGA IS NOT NULL
	AND IMPORTE_CARGA != 0)
	)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[BIE_CAR_IMPORTE_ECONOMICO]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'BIE_CAR_IMPORTE_ECONOMICO'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	IMPORTE_CARGA,
	CAR.BIE_CAR_IMPORTE_ECONOMICO,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_ECONOMICA = 1
	AND APR.CARGA_CONTENIDO_ECONOM = 1
	AND IMPORTE_CARGA != CAR.BIE_CAR_IMPORTE_ECONOMICO
	OR (BIE_CAR_IMPORTE_ECONOMICO IS NULL
	AND IMPORTE_CARGA IS NOT NULL
	AND IMPORTE_CARGA != 0)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.BIE_CAR_IMPORTE_ECONOMICO = TMP.IMPORTE_CARGA,
	CAR.BIE_CAR_IMPORTE_REGISTRAL = NULL,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.BIE_CAR_IMPORTE_ECONOMICO '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

        V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	DECODE(CARGA_CONTENIDO_ECONOM,0,1,1,0,1) AS REGISTRAL,
	CAR.BIE_CAR_REGISTRAL,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	)
	WHERE REGISTRAL != BIE_CAR_REGISTRAL
	OR (BIE_CAR_REGISTRAL IS NULL
	AND REGISTRAL IS NOT NULL)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[BIE_CAR_REGISTRAL]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'BIE_CAR_REGISTRAL'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT * FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	DECODE(CARGA_CONTENIDO_ECONOM,0,1,1,0,1) AS REGISTRAL,
	CAR.BIE_CAR_REGISTRAL,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	)
	WHERE REGISTRAL != BIE_CAR_REGISTRAL
	OR (BIE_CAR_REGISTRAL IS NULL
	AND REGISTRAL IS NOT NULL)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.BIE_CAR_REGISTRAL = TMP.REGISTRAL,
	CAR.BIE_CAR_ECONOMICA = NULL,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.BIE_CAR_REGISTRAL '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

        V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	(SELECT DD_SIC_ID FROM '||V_ESQUEMA||'.DD_SIC_SITUACION_CARGA WHERE DD_SIC_CODIGO = APR.CODIGO_ESTADO_CARGA) AS DD_SIC_ID_NEW,
	CAR.DD_SIC_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CARGA_CONTENIDO_ECONOM != 1
	)
	WHERE DD_SIC_ID_NEW != DD_SIC_ID
	OR (DD_SIC_ID IS NULL
	AND DD_SIC_ID_NEW IS NOT NULL)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[DD_SIC_ID]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'DD_SIC_ID'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT * FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	(SELECT DD_SIC_ID FROM '||V_ESQUEMA||'.DD_SIC_SITUACION_CARGA WHERE DD_SIC_CODIGO = APR.CODIGO_ESTADO_CARGA) AS DD_SIC_ID_NEW,
	CAR.DD_SIC_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CARGA_CONTENIDO_ECONOM != 1
	)
	WHERE DD_SIC_ID_NEW != DD_SIC_ID
	OR (DD_SIC_ID IS NULL
	AND DD_SIC_ID_NEW IS NOT NULL)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.DD_SIC_ID = TMP.DD_SIC_ID_NEW,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.DD_SIC_ID '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

        V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	FECHA_INSCRIPCION_CARGA,
	CAR.BIE_CAR_FECHA_INSCRIPCION,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_REGISTRAL = 1
	AND FECHA_INSCRIPCION_CARGA != CAR.BIE_CAR_FECHA_INSCRIPCION
	OR (CAR.BIE_CAR_FECHA_INSCRIPCION IS NULL
	AND FECHA_INSCRIPCION_CARGA IS NOT NULL)
	)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[BIE_CAR_FECHA_INSCRIPCION]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'BIE_CAR_FECHA_INSCRIPCION'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	FECHA_INSCRIPCION_CARGA,
	CAR.BIE_CAR_FECHA_INSCRIPCION,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_REGISTRAL = 1
	AND FECHA_INSCRIPCION_CARGA != CAR.BIE_CAR_FECHA_INSCRIPCION--0 (OBTENGO DOS SI LE DIGO QUE LA CARGA SEA ECONOMICA)
	OR (CAR.BIE_CAR_FECHA_INSCRIPCION IS NULL
	AND FECHA_INSCRIPCION_CARGA IS NOT NULL)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.BIE_CAR_FECHA_INSCRIPCION = TMP.FECHA_INSCRIPCION_CARGA,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.BIE_CAR_FECHA_INSCRIPCION '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

        V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	FECHA_INSCRIP_CANCELACION,
	CAR.BIE_CAR_FECHA_CANCELACION,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_ECONOMICA = 1
	AND FECHA_INSCRIP_CANCELACION != CAR.BIE_CAR_FECHA_CANCELACION
	OR (CAR.BIE_CAR_FECHA_CANCELACION IS NULL
	AND FECHA_INSCRIP_CANCELACION IS NOT NULL)
	)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[BIE_CAR_FECHA_CANCELACION]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'BIE_CAR_FECHA_CANCELACION'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	FECHA_INSCRIP_CANCELACION,
	CAR.BIE_CAR_FECHA_CANCELACION,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_ECONOMICA = 1
	AND FECHA_INSCRIP_CANCELACION != CAR.BIE_CAR_FECHA_CANCELACION
	OR (CAR.BIE_CAR_FECHA_CANCELACION IS NULL
	AND FECHA_INSCRIP_CANCELACION IS NOT NULL)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.BIE_CAR_FECHA_CANCELACION = FECHA_INSCRIP_CANCELACION,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.BIE_CAR_FECHA_CANCELACION '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

        V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CARGA_CONTENIDO_ECONOM,
	CAR.BIE_CAR_ECONOMICA,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CARGA_CONTENIDO_ECONOM != CAR.BIE_CAR_ECONOMICA
	OR (CAR.BIE_CAR_ECONOMICA IS NULL
	AND CARGA_CONTENIDO_ECONOM IS NOT NULL)
	)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[BIE_CAR_ECONOMICA]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'BIE_CAR_ECONOMICA'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CARGA_CONTENIDO_ECONOM,
	CAR.BIE_CAR_ECONOMICA,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CARGA_CONTENIDO_ECONOM != CAR.BIE_CAR_ECONOMICA
	OR (CAR.BIE_CAR_ECONOMICA IS NULL
	AND CARGA_CONTENIDO_ECONOM IS NOT NULL)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.BIE_CAR_ECONOMICA = TMP.CARGA_CONTENIDO_ECONOM,
	CAR.BIE_CAR_REGISTRAL = NULL,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.BIE_CAR_ECONOMICA '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;

        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

        V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	(SELECT DD_SIC_ID FROM DD_SIC_SITUACION_CARGA WHERE DD_SIC_CODIGO = APR.CODIGO_ESTADO_CARGA) AS DD_SIC_ID_NEW,
	CAR.DD_SIC_ID2,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CARGA_CONTENIDO_ECONOM = 1
	)
	WHERE DD_SIC_ID_NEW != DD_SIC_ID2
	OR (DD_SIC_ID2 IS NULL
	AND DD_SIC_ID_NEW IS NOT NULL)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.[DD_SIC_ID2]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'DD_SIC_ID2'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_CAR_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR USING
	(
	SELECT * FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	(SELECT DD_SIC_ID FROM DD_SIC_SITUACION_CARGA WHERE DD_SIC_CODIGO = APR.CODIGO_ESTADO_CARGA) AS DD_SIC_ID_NEW,
	CAR.DD_SIC_ID2,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CARGA_CONTENIDO_ECONOM = 1
	)
	WHERE DD_SIC_ID_NEW != DD_SIC_ID2
	OR (DD_SIC_ID2 IS NULL
	AND DD_SIC_ID_NEW IS NOT NULL)
	) TMP
	ON (TMP.BIE_CAR_ID = CAR.BIE_CAR_ID)
	WHEN MATCHED THEN UPDATE SET
	CAR.DD_SIC_ID2 = TMP.DD_SIC_ID_NEW,
	CAR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CAR.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_CAR_CARGAS.DD_SIC_ID2 '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');


	--------------------------------------------------
	-----       ACTUALIZAMOS ACT_CRG_CARGAS      -----***HREOS-574***
	--------------------------------------------------

  V_NOT_UPDATE := '';

  DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA ACT_CRG_CARGAS...');
  DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');


	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	(SELECT DD_TCA_ID FROM '||V_ESQUEMA||'.DD_TCA_TIPO_CARGA WHERE DECODE(CARGA_CONTENIDO_ECONOM,0,''REG'',1,''ECO'',''REG'') = DD_TCA_CODIGO) AS DD_TCA_ID_NEW,
	CRG.DD_TCA_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	)
	WHERE DD_TCA_ID_NEW != DD_TCA_ID
	OR (DD_TCA_ID IS NULL
	AND DD_TCA_ID_NEW IS NOT NULL)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.[DD_TCA_ID]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'DD_TCA_ID'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG USING
	(
	SELECT * FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	(SELECT DD_TCA_ID FROM '||V_ESQUEMA||'.DD_TCA_TIPO_CARGA WHERE DECODE(CARGA_CONTENIDO_ECONOM,0,''REG'',1,''ECO'',''REG'') = DD_TCA_CODIGO) AS DD_TCA_ID_NEW,
	CRG.DD_TCA_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	)
	WHERE DD_TCA_ID_NEW != DD_TCA_ID
	OR (DD_TCA_ID IS NULL
	AND DD_TCA_ID_NEW IS NOT NULL)
	) TMP
	ON (TMP.CRG_ID = CRG.CRG_ID)
	WHEN MATCHED THEN UPDATE SET
	CRG.DD_TCA_ID = TMP.DD_TCA_ID_NEW,
	CRG.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CRG.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.DD_TCA_ID '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');


     V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	(SELECT DD_STC_ID FROM '||V_ESQUEMA||'.DD_STC_SUBTIPO_CARGA WHERE DD_STC_CODIGO = SUBTIPO_CARGA) AS DD_STC_ID_NEW,
	CRG.DD_STC_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	)
	WHERE DD_STC_ID_NEW != DD_STC_ID
	OR (DD_STC_ID IS NULL
	AND DD_STC_ID_NEW IS NOT NULL)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.[DD_STC_ID]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'DD_STC_ID'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG USING
	(
	SELECT * FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	(SELECT DD_STC_ID FROM '||V_ESQUEMA||'.DD_STC_SUBTIPO_CARGA WHERE DD_STC_CODIGO = SUBTIPO_CARGA) AS DD_STC_ID_NEW,
	CRG.DD_STC_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	)
	WHERE DD_STC_ID_NEW != DD_STC_ID
	OR (DD_STC_ID IS NULL
	AND DD_STC_ID_NEW IS NOT NULL)
	) TMP
	ON (TMP.CRG_ID = CRG.CRG_ID)
	WHEN MATCHED THEN UPDATE SET
	CRG.DD_STC_ID = TMP.DD_STC_ID_NEW,
	CRG.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CRG.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.DD_STC_ID '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');


     V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	FECHA_INSCRIP_CANCELACION,
	CRG.CRG_FECHA_CANCEL_REGISTRAL,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_ECONOMICA != 1
	AND FECHA_INSCRIP_CANCELACION != CRG.CRG_FECHA_CANCEL_REGISTRAL
	OR (CRG.CRG_FECHA_CANCEL_REGISTRAL IS NULL
	AND FECHA_INSCRIP_CANCELACION IS NOT NULL)
	)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.[CRG_FECHA_CANCEL_REGISTRAL]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'CRG_FECHA_CANCEL_REGISTRAL'||' '||CHR(10)||'';

	END IF;

        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG USING
	(
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	FECHA_INSCRIP_CANCELACION,
	CRG.CRG_FECHA_CANCEL_REGISTRAL,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND CAR.BIE_CAR_ECONOMICA != 1
	AND FECHA_INSCRIP_CANCELACION != CRG.CRG_FECHA_CANCEL_REGISTRAL
	OR (CRG.CRG_FECHA_CANCEL_REGISTRAL IS NULL
	AND FECHA_INSCRIP_CANCELACION IS NOT NULL)
	) TMP
	ON (TMP.CRG_ID = CRG.CRG_ID)
	WHEN MATCHED THEN UPDATE SET
	CRG.CRG_FECHA_CANCEL_REGISTRAL = TMP.FECHA_INSCRIP_CANCELACION,
	CRG.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CRG.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.CRG_FECHA_CANCEL_REGISTRAL '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');


     V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	PROCEDIMIENTO_ID,
	CRG.CRG_PROCEDIMIENTO_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND PROCEDIMIENTO_ID != CRG.CRG_PROCEDIMIENTO_ID
	OR (CRG.CRG_PROCEDIMIENTO_ID IS NULL
	AND PROCEDIMIENTO_ID IS NOT NULL)
	)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.[CRG_PROCEDIMIENTO_ID]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'CRG_PROCEDIMIENTO_ID'||' '||CHR(10)||'';

	END IF;


        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG USING
	(
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	PROCEDIMIENTO_ID,
	CRG.CRG_PROCEDIMIENTO_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND PROCEDIMIENTO_ID != CRG.CRG_PROCEDIMIENTO_ID
	OR (CRG.CRG_PROCEDIMIENTO_ID IS NULL
	AND PROCEDIMIENTO_ID IS NOT NULL)
	) TMP
	ON (TMP.CRG_ID = CRG.CRG_ID)
	WHEN MATCHED THEN UPDATE SET
	CRG.CRG_PROCEDIMIENTO_ID = TMP.PROCEDIMIENTO_ID,
	CRG.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CRG.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.CRG_PROCEDIMIENTO_ID '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;


        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');


      V_NOT_UPDATE := '';

	        --COMPROBAMOS LO QUE HEMOS DE ACTUALIZAR

	        V_SQL := '
	SELECT COUNT(1) FROM (
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	ID_CARGA_RECOVERY,
	CRG.CRG_RECOVERY_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND ID_CARGA_RECOVERY != CRG.CRG_RECOVERY_ID
	OR (CRG.CRG_RECOVERY_ID IS NULL
	AND ID_CARGA_RECOVERY IS NOT NULL)
	)
	'
	;

	        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;


	IF V_NUM_TABLAS > 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.[CRG_RECOVERY_ID]');

	ELSE

	V_NOT_UPDATE := V_NOT_UPDATE||'CRG_RECOVERY_ID'||' '||CHR(10)||'';

	END IF;


        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_CRG_CARGAS:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

	--ACTUALIZAMOS LOS CAMPOS

	V_SQL := '
	MERGE INTO '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG USING
	(
	SELECT DISTINCT
	NUMERO_ACTIVO,
	ACT.BIE_ID,
	CAR.BIE_CAR_ID,
	CRG.CRG_ID,
	ID_CARGA_RECOVERY,
	CRG.CRG_RECOVERY_ID,
	NUMERO_ORDEN
	FROM '||V_ESQUEMA||'.APR_AUX_CARGA_BIENES APR
	INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO
	INNER JOIN '||V_ESQUEMA||'.ACT_CRG_CARGAS CRG
	  ON CRG.ACT_ID = ACT.ACT_ID
	  AND CRG.CRG_ORDEN = APR.NUMERO_ORDEN
	INNER JOIN '||V_ESQUEMA||'.BIE_CAR_CARGAS CAR
	  ON CRG.BIE_CAR_ID = CAR.BIE_CAR_ID
	WHERE ACTUALIZA = 1
	AND ID_CARGA_RECOVERY != CRG.CRG_RECOVERY_ID
	OR (CRG.CRG_RECOVERY_ID IS NULL
	AND ID_CARGA_RECOVERY IS NOT NULL)
	) TMP
	ON (TMP.CRG_ID = CRG.CRG_ID)
	WHEN MATCHED THEN UPDATE SET
	CRG.CRG_RECOVERY_ID = TMP.ID_CARGA_RECOVERY,
	CRG.USUARIOMODIFICAR = '''||V_USUARIO||''',
	CRG.FECHAMODIFICAR = SYSDATE
	'
	;

	EXECUTE IMMEDIATE V_SQL;

	V_NUM_TABLAS := SQL%ROWCOUNT;

	IF V_NUM_TABLAS != 0 THEN

	DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS. '||V_NUM_TABLAS||' Filas.');
	PL_OUTPUT := PL_OUTPUT||'[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_CRG_CARGAS.CRG_RECOVERY_ID '||V_NUM_TABLAS||' Filas. '||CHR(10)||CHR(10);

	COMMIT;

	END IF;

*/
	DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');

    DBMS_OUTPUT.PUT_LINE('[OK] - PROCESO FINALIZADO.');

EXCEPTION

    WHEN OTHERS THEN

        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion: '||TO_CHAR(SQLCODE));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------');
        DBMS_OUTPUT.put_line(SQLERRM);

    ROLLBACK;
    RAISE;

END SP_UPA_UPDATE_ACTIVES_SAREB;
/

