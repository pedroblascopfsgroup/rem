--/*
--##########################################
--## AUTOR=JOSE VILLEL
--## FECHA_CREACION=20150930
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=0
--## PRODUCTO=NO
--## Finalidad: Restricciones de integridad de la tabla activo.
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    V_NUM_SEQ NUMBER(16); -- Vble. para validar la existencia de una secuencia.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    V_TEXT1 VARCHAR2(2400 CHAR); -- Vble. auxiliar

BEGIN


	--##COMPROBACION EXISTENCIA TABLA y secuencia BORRAR PRIMERO
	select count(1) INTO V_NUM_TABLAS from all_tables 
	where table_name = 'ACT_ACTIVO' and OWNER = V_ESQUEMA;
	
	if V_NUM_TABLAS > 0 then	 
		
		-- Creamos foreign key BIE_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_BIEN FOREIGN KEY (BIE_ID) REFERENCES '||V_ESQUEMA||'.BIE_BIEN (BIE_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_BIEN... Foreign key creada.');
			
		-- Creamos foreign key DD_TPA_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_TIPOACT FOREIGN KEY (DD_TPA_ID) REFERENCES '||V_ESQUEMA||'.DD_TPA_TIPO_ACTIVO (DD_TPA_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_TIPOACT... Foreign key creada.');
		
		-- Creamos foreign key DD_SAC_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_SUBTIPOACT FOREIGN KEY (DD_SAC_ID) REFERENCES '||V_ESQUEMA||'.DD_SAC_SUBTIPO_ACTIVO (DD_SAC_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_SUBTIPOACT... Foreign key creada.');
		
		-- Creamos foreign key DD_RTG_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_DDRATING FOREIGN KEY (DD_RTG_ID) REFERENCES '||V_ESQUEMA||'.DD_RTG_RATING_ACTIVO (DD_RTG_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_DDRATING... Foreign key creada.');
		
		-- Creamos foreign key DD_EAC_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_ESTADOACT FOREIGN KEY (DD_EAC_ID) REFERENCES '||V_ESQUEMA||'.DD_EAC_ESTADO_ACTIVO (DD_EAC_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_ESTADOACT... Foreign key creada.');
		
		-- Creamos foreign key DD_TUD_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_DDTIPOUSO FOREIGN KEY (DD_TUD_ID) REFERENCES '||V_ESQUEMA||'.DD_TUD_TIPO_USO_DESTINO (DD_TUD_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_DDTIPOUSO... Foreign key creada.');
		
		-- Creamos foreign key 	DD_TTA_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_DDTTITULO FOREIGN KEY (DD_TTA_ID) REFERENCES '||V_ESQUEMA||'.DD_TTA_TIPO_TITULO_ACTIVO (DD_TTA_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_DDTTITULO... Foreign key creada.');
		
		-- Creamos foreign key 	DD_STA_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_DDSTITULO FOREIGN KEY (DD_STA_ID) REFERENCES '||V_ESQUEMA||'.DD_STA_SUBTIPO_TITULO_ACTIVO (DD_STA_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_DDSTITULO... Foreign key creada.');
		
		-- Creamos foreign key DD_CRA_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_DDCARTERA FOREIGN KEY (DD_CRA_ID) REFERENCES '||V_ESQUEMA||'.DD_CRA_CARTERA (DD_CRA_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_DDCARTERA... Foreign key creada.');
		
		-- Creamos foreign key DD_ENO_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_DDENTORIG FOREIGN KEY (DD_ENO_ID) REFERENCES '||V_ESQUEMA||'.DD_ENO_ENTIDAD_ORIGEN (DD_ENO_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_DDENTORIG... Foreign key creada.');
		
		-- Creamos foreign key DD_ENO_ORIGEN_ANT_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_DDENTORIGANTERIOR FOREIGN KEY (DD_ENO_ORIGEN_ANT_ID) REFERENCES '||V_ESQUEMA||'.DD_ENO_ENTIDAD_ORIGEN (DD_ENO_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_DDENTORIGANTERIOR... Foreign key creada.');
		
		-- Creamos foreign key DD_SCM_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_DDSITCOMERCIAL FOREIGN KEY (DD_SCM_ID) REFERENCES '||V_ESQUEMA||'.DD_SCM_SITUACION_COMERCIAL (DD_SCM_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_DDSITCOMERCIAL... Foreign key creada.');
		
		
			
		-- Creamos foreign key DD_EPA_ADMISION_ID
		--V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_EST_PROC_ACT_ADM FOREIGN KEY (DD_EPA_ADMISION_ID) REFERENCES '||V_ESQUEMA||'.DD_EPA_EST_PROC_ACTIVO (DD_EPA_ID) ON DELETE SET NULL)';
		--EXECUTE IMMEDIATE V_MSQL;
		--DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_EST_PROC_ACT_ADM... Foreign key creada.');
		
		-- Creamos foreign key DD_EPA_GESTION_ID
		--V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_EST_PROC_ACT_GEST FOREIGN KEY (DD_EPA_GESTION_ID) REFERENCES '||V_ESQUEMA||'.DD_EPA_EST_PROC_ACTIVO (DD_EPA_ID) ON DELETE SET NULL)';
		--EXECUTE IMMEDIATE V_MSQL;
		--DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_EST_PROC_ACT_GEST... Foreign key creada.');
		
		-- Creamos foreign key DD_EPA_PRECIO_ID
		--V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_EST_PROC_ACT_PRECIO FOREIGN KEY (DD_EPA_PRECIO_ID) REFERENCES '||V_ESQUEMA||'.DD_EPA_EST_PROC_ACTIVO (DD_EPA_ID) ON DELETE SET NULL)';
		--EXECUTE IMMEDIATE V_MSQL;
		--DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_EST_PROC_ACT_PRECIO... Foreign key creada.');
		
		-- Creamos foreign key DD_EPA_PUBLICACION_ID
		--V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_EST_PROC_ACT_PUBLI FOREIGN KEY (DD_EPA_PUBLICACION_ID) REFERENCES '||V_ESQUEMA||'.DD_EPA_EST_PROC_ACTIVO (DD_EPA_ID) ON DELETE SET NULL)';
		--EXECUTE IMMEDIATE V_MSQL;
		--DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_EST_PROC_ACT_PUBLI... Foreign key creada.');
		
		-- Creamos foreign key DD_EPA_COMERCIALIZAR_ID
		--V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_EST_PROC_ACT_COMER FOREIGN KEY (DD_EPA_COMERCIALIZAR_ID) REFERENCES '||V_ESQUEMA||'.DD_EPA_EST_PROC_ACTIVO (DD_EPA_ID) ON DELETE SET NULL)';
		--EXECUTE IMMEDIATE V_MSQL;
		--DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_EST_PROC_ACT_COMER... Foreign key creada.');
		
		-- Creamos foreign key SDV_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_SUBDIVI FOREIGN KEY (SDV_ID) REFERENCES '||V_ESQUEMA||'.ACT_SDV_SUBDIVISION_ACTIVO (SDV_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_SUBDIVI... Foreign key creada.');
		
		-- Creamos foreign key CPR_ID
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD (CONSTRAINT FK_ACTIVO_COMPROP FOREIGN KEY (CPR_ID) REFERENCES '||V_ESQUEMA||'.ACT_CPR_COM_PROPIETARIOS (CPR_ID) ON DELETE SET NULL)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_ACTIVO_COMPROP... Foreign key creada.');
		
		-- Creamos unique key ACT_NUM_ACTIVO
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD CONSTRAINT UK_NUM_ACTIVO UNIQUE (ACT_NUM_ACTIVO, BORRADO) ENABLE';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.UK_NUM_ACTIVO... Unique key creada.');
		
		-- Creamos unique key ACT_NUM_ACTIVO_REM
		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.ACT_ACTIVO ADD CONSTRAINT UK_NUM_ACTIVO_REM UNIQUE (ACT_NUM_ACTIVO_REM, BORRADO) ENABLE';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.UK_NUM_ACTIVO_REM... Unique key creada.');
	
		
		
	ELSE 
	
		DBMS_OUTPUT.PUT_LINE('[INFO] No existe la tabla.');
	
	END IF;



DBMS_OUTPUT.PUT_LINE('OK');
  
DBMS_OUTPUT.PUT_LINE('[INFO] Proceso ejecutado CORRECTAMENTE. Tabla y referencias creadas.');
	
COMMIT;


EXCEPTION
     WHEN OTHERS THEN 
         DBMS_OUTPUT.PUT_LINE('KO!');
          err_num := SQLCODE;
          err_msg := SQLERRM;

          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(err_msg);

          ROLLBACK;
          RAISE;          

END;

/

EXIT