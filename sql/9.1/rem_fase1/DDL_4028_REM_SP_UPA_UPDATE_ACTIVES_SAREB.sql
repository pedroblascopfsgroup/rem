--/*
--##########################################
--## AUTOR=DAVID GONZALEZ
--## FECHA_CREACION=20160503
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=0
--## PRODUCTO=NO
--## Finalidad: Procedimiento que actualiza información adicional a los activos a partir de la 
--##			tabla APR_AUX_STOCK_BIENES, con datos procedentes de UVEM.
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;

create or replace PROCEDURE SP_UPA_UPDATE_ACTIVES_SAREB AS 

V_ESQUEMA VARCHAR2(15 CHAR) := '#ESQUEMA#';
V_ESQUEMA_MASTER VARCHAR2(15 CHAR) := '#ESQUEMA_MASTER#';
V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.   
V_NOT_UPDATE VARCHAR2(2000 CHAR) := '';

	--TABLA BIE_BIEN
	TYPE T_TIPO_TABLA1 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA1 IS TABLE OF T_TIPO_TABLA1;
    V_TIPO_TABLA1 T_ARRAY_TABLA1 := T_ARRAY_TABLA1(
		T_TIPO_TABLA1('VALOR_JUDICIAL','BIE_TIPO_SUBASTA'),
		T_TIPO_TABLA1('VIVIENDA_HABITUAL','BIE_VIVIENDA_HABITUAL'),
		T_TIPO_TABLA1('PORCENTAJE_IMPUESTO_COMPRA','BIE_PORCT_IMP_COMPRA')
    ); 
    V_TMP_TIPO_TABLA1 T_TIPO_TABLA1;
    
    
	--TABLA BIE_DATOS_REGISTRALES
	TYPE T_TIPO_TABLA2 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA2 IS TABLE OF T_TIPO_TABLA2;
    V_TIPO_TABLA2 T_ARRAY_TABLA2 := T_ARRAY_TABLA2(
		T_TIPO_TABLA2('NUMERO_FINCA_REGISTRAL','BIE_DREG_NUM_FINCA'),
		T_TIPO_TABLA2('NUMERO_REGISTRO_PROPIEDAD','BIE_DREG_NUM_REGISTRO'),
		T_TIPO_TABLA2('MUNICIPIO_DEL_REGISTRO','BIE_DREG_MUNICIPIO_LIBRO'),
		T_TIPO_TABLA2('NUMERO_LIBRO','BIE_DREG_LIBRO'),
		T_TIPO_TABLA2('TOMO','BIE_DREG_TOMO'),
		T_TIPO_TABLA2('NUMERO_FOLIO','BIE_DREG_FOLIO'),
		T_TIPO_TABLA2('NUMERO_INSCRIPCION','BIE_DREG_INSCRIPCION'),
		T_TIPO_TABLA2('NUM_REFER_CATASTRAL','BIE_DREG_REFERENCIA_CATASTRAL')
    ); 
    V_TMP_TIPO_TABLA2 T_TIPO_TABLA2;
    
    
    --TABLA BIE_ADJ_ADJUDICACION
	TYPE T_TIPO_TABLA3 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA3 IS TABLE OF T_TIPO_TABLA3;
    V_TIPO_TABLA3 T_ARRAY_TABLA3 := T_ARRAY_TABLA3(
		T_TIPO_TABLA3('IMPORTE_ADJUDICACION','BIE_ADJ_IMPORTE_ADJUDICACION'),
		T_TIPO_TABLA3('OCUPANTES_REALIZACION_DILIG','BIE_ADJ_OCUPANTES_DILIGENCIA'),
		T_TIPO_TABLA3('FECHA_ENTREGA_TITULO_A_GESTOR','BIE_ADJ_F_ENTREGA_GESTOR'),
		T_TIPO_TABLA3('FECHA_PRESENTACION_HACIENDA','BIE_ADJ_F_PRESEN_HACIENDA'),
		T_TIPO_TABLA3('FECHA_PRESENTACION_REGISTRO','BIE_ADJ_F_PRESENT_REGISTRO'),
		T_TIPO_TABLA3('FECHA_RECEPCION_TITULO','BIE_ADJ_F_RECPCION_TITULO'),
		T_TIPO_TABLA3('FECHA_INSCRIPCION_TITULO','BIE_ADJ_F_INSCRIP_TITULO'),
		T_TIPO_TABLA3('FECHA_ENVIO_ADICION','BIE_ADJ_F_ENVIO_ADICION'),
		T_TIPO_TABLA3('FECHA_SEGUNDA_PRESENT_REG','BIE_ADJ_F_SEGUNDA_PRESEN'),
		T_TIPO_TABLA3('FECHA_AUTO_ADJUD','BIE_ADJ_F_DECRETO_N_FIRME'),
		T_TIPO_TABLA3('FECHA_AUTO_ADJUD_FIRME','BIE_ADJ_F_DECRETO_FIRME'),
		T_TIPO_TABLA3('FECHA_CONTRATO_ARRENDAMIENTO','BIE_ADJ_F_CONTRATO_ARREN'),
		T_TIPO_TABLA3('NOMBRE_ARRENDATARIO','BIE_ADJ_NOMBRE_ARRENDATARIO'),
		T_TIPO_TABLA3('LANZAMIENTO','BIE_ADJ_LANZAMIENTO_NECES'),
		T_TIPO_TABLA3('FECHA_SOLICITUD_LANZAMIENTO','BIE_ADJ_F_SOL_LANZAMIENTO'),
		T_TIPO_TABLA3('FECHA_SENYALAMIENTO_LANZAM','BIE_ADJ_F_SEN_LANZAMIENTO'),
		T_TIPO_TABLA3('FECHA_LANZAMIENTO_EFECTUADO','BIE_ADJ_F_REA_LANZAMIENTO'),
		T_TIPO_TABLA3('FUERZA_PUBLICA','BIE_ADJ_NECESARIA_FUERA_PUB'),
		T_TIPO_TABLA3('OCUPANTES','BIE_ADJ_OCUPADO'),
		T_TIPO_TABLA3('FECHA_SOLICITUD_MORATORIA','BIE_ADJ_F_SOL_MORATORIA'),
		T_TIPO_TABLA3('FECHA_RESOLUCION_MORATORIA','BIE_ADJ_F_RES_MORATORIA'),
		T_TIPO_TABLA3('POSESION','BIE_ADJ_POSIBLE_POSESION'),
		T_TIPO_TABLA3('FECHA_SOLICITUD_POSESION','BIE_ADJ_F_SOL_POSESION'),
		T_TIPO_TABLA3('FECHA_SENALAMIENTO_POSESION','BIE_ADJ_F_SEN_POSESION'),
		T_TIPO_TABLA3('FECHA_REALIZACION_POSESION','BIE_ADJ_F_REA_POSESION'),
		T_TIPO_TABLA3('ENTREGA_VOLUNTARIA_POSESION','BIE_ADJ_ENTREGA_VOLUNTARIA'),
		T_TIPO_TABLA3('SE_REQUIERE_CAMBIO_CERRADURA','BIE_ADJ_LLAVES_NECESARIAS'),
		T_TIPO_TABLA3('FECHA_RECEPCION_LLAVES','BIE_ADJ_F_RECEP_DEPOSITARIO'),
		T_TIPO_TABLA3('FECHA_ENVIO_LLAVES_A_GESTORIA','BIE_ADJ_F_ENVIO_LLAVES'),
		T_TIPO_TABLA3('IMPORTE_REMATE','BIE_ADJ_CESION_REMATE_IMP')
    ); 
    V_TMP_TIPO_TABLA3 T_TIPO_TABLA3;
    
    
    --TABLA ACT_AJD_JUDICIAL
	TYPE T_TIPO_TABLA4 IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_TABLA4 IS TABLE OF T_TIPO_TABLA4;
    V_TIPO_TABLA4 T_ARRAY_TABLA4 := T_ARRAY_TABLA4(
		T_TIPO_TABLA4('NUM_AUTOS_JUZGADO','AJD_NUM_AUTO'),
		T_TIPO_TABLA4('NOMBRE_PROCURADOR','AJD_PROCURADOR')
    ); 
    V_TMP_TIPO_TABLA4 T_TIPO_TABLA4;

BEGIN

  DBMS_OUTPUT.PUT_LINE('[INFO] INICIO DEL PROCESO DE ACTUALIZACIÓN DE INFORMACIÓN DE ACTIVOS.');
  DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------');

--------------------------------------------------------------------
----------- ACTUALIZAMOS BIE_BIEN ----------------------------------
--------------------------------------------------------------------

  DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA BIE_BIENES...');
  DBMS_OUTPUT.PUT_LINE('------------------------------------------------------');

  
  FOR I IN V_TIPO_TABLA1.FIRST .. V_TIPO_TABLA1.LAST
    LOOP
      
			V_TMP_TIPO_TABLA1 := V_TIPO_TABLA1(I);
	        
	        
		        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR
		        
		        V_SQL := '
				WITH PERIMETRO AS (
				  SELECT '||V_TMP_TIPO_TABLA1(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
				  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				)
				SELECT COUNT(DISTINCT NUMERO_ACTIVO) 
				FROM '||V_ESQUEMA||'.BIE_BIEN BIE
				INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
				  ON ACT.BIE_ID = BIE.BIE_ID
				INNER JOIN '||V_ESQUEMA||'.PERIMETRO APR
				  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
				WHERE BIE.'||V_TMP_TIPO_TABLA1(2)||' IS NULL
				AND APR.'||V_TMP_TIPO_TABLA1(1)||' IS NOT NULL
				AND APR.ORDEN = 1
				'
		        ;
		        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
		        
		        
				IF V_NUM_TABLAS > 0 THEN  
		          
					DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_BIEN.['||V_TMP_TIPO_TABLA1(2)||']');
		         
				ELSE
        
					V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA1(2)||' '||CHR(10)||'';

				END IF;			
        		
    END LOOP; 
    
        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_BIEN:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
    
    --ACTUALIZAMOS LOS CAMPOS DE BIE_BIEN
    
    FOR I IN V_TIPO_TABLA1.FIRST .. V_TIPO_TABLA1.LAST
    LOOP
      
			V_TMP_TIPO_TABLA1 := V_TIPO_TABLA1(I);
	        
				V_SQL := '
				MERGE INTO '||V_ESQUEMA||'.BIE_BIEN BIE USING
				(
				WITH DISTINTOS AS (
				  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
				  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				)
				SELECT '||V_TMP_TIPO_TABLA1(1)||', ACT.BIE_ID 
				FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				LEFT JOIN DISTINTOS 
				  ON DISTINTOS.APR_ID = APR.APR_ID
				LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
				  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO                                      
				WHERE '||V_TMP_TIPO_TABLA1(1)||' IS NOT NULL
				AND ACT.BIE_ID IS NOT NULL
				AND DISTINTOS.ORDEN = 1
				) TMP
				ON (BIE.BIE_ID = TMP.BIE_ID)
				WHEN MATCHED THEN UPDATE SET
				BIE.'||V_TMP_TIPO_TABLA1(2)||' = TMP.'||V_TMP_TIPO_TABLA1(1)||',
				BIE.USUARIOMODIFICAR = ''APR'',
				BIE.FECHAMODIFICAR = SYSDATE
				WHERE BIE.'||V_TMP_TIPO_TABLA1(2)||' IS NULL
				'
				;
                
        EXECUTE IMMEDIATE V_SQL;
        
        V_NUM_TABLAS := SQL%ROWCOUNT;
        
        IF V_NUM_TABLAS != 0 THEN
        
          DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_BIEN. '||V_NUM_TABLAS||' Filas.');
    
          COMMIT;
          
        END IF;
        
        				
    END LOOP; 
    
    
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
    
    
--------------------------------------------------------------------
----------- ACTUALIZAMOS BIE_DATOS_REGISTRALES ---------------------
--------------------------------------------------------------------

  V_NOT_UPDATE := '';

  DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA BIE_DATOS_REGISTRALES...');
  DBMS_OUTPUT.PUT_LINE('-----------------------------------------------------------------');

  
  FOR I IN V_TIPO_TABLA2.FIRST .. V_TIPO_TABLA2.LAST
    LOOP
      
			V_TMP_TIPO_TABLA2 := V_TIPO_TABLA2(I);
	        
	        
		        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR
		        
		        V_SQL := '
				WITH PERIMETRO AS (
				  SELECT '||V_TMP_TIPO_TABLA2(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
				  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				)
				SELECT COUNT(DISTINCT NUMERO_ACTIVO) 
				FROM '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES DREG
				INNER JOIN '||V_ESQUEMA||'.BIE_BIEN BIE
				  ON BIE.BIE_ID = DREG.BIE_ID
				INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
				  ON ACT.BIE_ID = BIE.BIE_ID
				INNER JOIN '||V_ESQUEMA||'.PERIMETRO APR
				  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
				WHERE DREG.'||V_TMP_TIPO_TABLA2(2)||' IS NULL
				AND APR.'||V_TMP_TIPO_TABLA2(1)||' IS NOT NULL
				AND APR.ORDEN = 1
				'
				;
				
		        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
		        
		        
				IF V_NUM_TABLAS > 0 THEN  
		          
					DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES.['||V_TMP_TIPO_TABLA2(2)||']');
		         
				ELSE
        
					V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA2(2)||' '||CHR(10)||'';

				END IF;			
        		
    END LOOP; 
    
        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
    
    --ACTUALIZAMOS LOS CAMPOS DE BIE_DATOS_REGISTRALES
    
    FOR I IN V_TIPO_TABLA2.FIRST .. V_TIPO_TABLA2.LAST
    LOOP
      
			V_TMP_TIPO_TABLA2 := V_TIPO_TABLA2(I);
	        
				V_SQL := '
				MERGE INTO '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES DREG USING
				(
				WITH DISTINTOS AS (
				  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
				  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				)
				SELECT '||V_TMP_TIPO_TABLA2(1)||', ACT.BIE_ID 
				FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				LEFT JOIN DISTINTOS 
				  ON DISTINTOS.APR_ID = APR.APR_ID
				LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
				  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO                                      
				WHERE '||V_TMP_TIPO_TABLA2(1)||' IS NOT NULL
				AND ACT.BIE_ID IS NOT NULL
				AND DISTINTOS.ORDEN = 1
				) TMP
				ON (DREG.BIE_ID = TMP.BIE_ID)
				WHEN MATCHED THEN UPDATE SET
				DREG.'||V_TMP_TIPO_TABLA2(2)||' = TMP.'||V_TMP_TIPO_TABLA2(1)||',
				DREG.USUARIOMODIFICAR = ''APR'',
				DREG.FECHAMODIFICAR = SYSDATE
				WHERE DREG.'||V_TMP_TIPO_TABLA2(2)||' IS NULL
				'
				;
                
        EXECUTE IMMEDIATE V_SQL;
        
        V_NUM_TABLAS := SQL%ROWCOUNT;
        
        IF V_NUM_TABLAS != 0 THEN
        
          DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_DATOS_REGISTRALES. '||V_NUM_TABLAS||' Filas.');
    
          COMMIT;
          
        END IF;
        
        				
    END LOOP; 
    
    
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
    
    
--------------------------------------------------------------------
----------- ACTUALIZAMOS BIE_ADJ_ADJUDICACION ----------------------
--------------------------------------------------------------------

  V_NOT_UPDATE := '';

  DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA BIE_ADJ_ADJUDICACION...');
  DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
  

  
  FOR I IN V_TIPO_TABLA3.FIRST .. V_TIPO_TABLA3.LAST
    LOOP
      
			V_TMP_TIPO_TABLA3 := V_TIPO_TABLA3(I);
	        
	        
		        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR
		        
		        V_SQL := '
				WITH PERIMETRO AS (
				  SELECT '||V_TMP_TIPO_TABLA3(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
				  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				)
				SELECT COUNT(DISTINCT NUMERO_ACTIVO) 
				FROM '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION ADJ
				INNER JOIN '||V_ESQUEMA||'.BIE_BIEN BIE
				  ON BIE.BIE_ID = ADJ.BIE_ID
				INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
				  ON ACT.BIE_ID = BIE.BIE_ID
				INNER JOIN '||V_ESQUEMA||'.PERIMETRO APR
				  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
				WHERE ADJ.'||V_TMP_TIPO_TABLA3(2)||' IS NULL
				AND APR.'||V_TMP_TIPO_TABLA3(1)||' IS NOT NULL
				AND APR.ORDEN = 1
				'
				;
				
		        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
		        
		        
				IF V_NUM_TABLAS > 0 THEN  
		          
					DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION.['||V_TMP_TIPO_TABLA3(2)||']');
		         
				ELSE
        
					V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA3(2)||' '||CHR(10)||'';

				END IF;			
        		
    END LOOP; 
    
        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
    
    --ACTUALIZAMOS LOS CAMPOS DE BIE_ADJ_ADJUDICACION
    
    FOR I IN V_TIPO_TABLA3.FIRST .. V_TIPO_TABLA3.LAST
    LOOP
      
			V_TMP_TIPO_TABLA3 := V_TIPO_TABLA3(I);
	        
				V_SQL := '
				MERGE INTO '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION ADJ USING
				(
				WITH DISTINTOS AS (
				  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
				  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				)
				SELECT '||V_TMP_TIPO_TABLA3(1)||', ACT.BIE_ID 
				FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				LEFT JOIN DISTINTOS 
				  ON DISTINTOS.APR_ID = APR.APR_ID
				LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
				  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO                                      
				WHERE '||V_TMP_TIPO_TABLA3(1)||' IS NOT NULL
				AND ACT.BIE_ID IS NOT NULL
				AND DISTINTOS.ORDEN = 1
				) TMP
				ON (ADJ.BIE_ID = TMP.BIE_ID)
				WHEN MATCHED THEN UPDATE SET
				ADJ.'||V_TMP_TIPO_TABLA3(2)||' = TMP.'||V_TMP_TIPO_TABLA3(1)||',
				ADJ.USUARIOMODIFICAR = ''APR'',
				ADJ.FECHAMODIFICAR = SYSDATE
				WHERE ADJ.'||V_TMP_TIPO_TABLA3(2)||' IS NULL
				'
				;
                
				EXECUTE IMMEDIATE V_SQL;
        
				V_NUM_TABLAS := SQL%ROWCOUNT;
        
			IF V_NUM_TABLAS != 0 THEN
        
				DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.BIE_ADJ_ADJUDICACION. '||V_NUM_TABLAS||' Filas.');
    
				COMMIT;
          
			END IF;
        
        				
    END LOOP; 
    

        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
    
    
--------------------------------------------------------------------
----------- ACTUALIZAMOS ACT_AJD_ADJJUDICIAL ----------------------
--------------------------------------------------------------------

  V_NOT_UPDATE := '';

  DBMS_OUTPUT.PUT_LINE('[INFO] ACTUALIZANDO DATOS SOBRE LA TABLA ACT_AJD_ADJJUDICIAL...');
  DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
  

  
  FOR I IN V_TIPO_TABLA4.FIRST .. V_TIPO_TABLA4.LAST
    LOOP
      
			V_TMP_TIPO_TABLA4 := V_TIPO_TABLA4(I);
	        
	        
		        --COMPROBAMOS CAMPO A CAMPO LO QUE HEMOS DE ACTUALIZAR
		        
		        V_SQL := '
				WITH PERIMETRO AS (
				  SELECT '||V_TMP_TIPO_TABLA4(1)||',APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
				  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				)
				SELECT COUNT(DISTINCT NUMERO_ACTIVO) 
				FROM '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL AJD
				INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
				  ON ACT.ACT_ID = AJD.ACT_ID
				INNER JOIN '||V_ESQUEMA||'.BIE_BIEN BIE
				  ON BIE.BIE_ID = ACT.BIE_ID
				INNER JOIN '||V_ESQUEMA||'.PERIMETRO APR
				  ON APR.NUMERO_ACTIVO = ACT.ACT_NUM_ACTIVO_UVEM
				WHERE AJD.'||V_TMP_TIPO_TABLA4(2)||' IS NULL
				AND APR.'||V_TMP_TIPO_TABLA4(1)||' IS NOT NULL
				AND APR.ORDEN = 1
				'
				;
				
		        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
		        
		        
				IF V_NUM_TABLAS > 0 THEN  
		          
					DBMS_OUTPUT.PUT_LINE('[INFO] EXISTEN ['||V_NUM_TABLAS||'] CAMPOS A ACTUALIZAR EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL.['||V_TMP_TIPO_TABLA4(2)||']');
		         
				ELSE
        
					V_NOT_UPDATE := V_NOT_UPDATE||V_TMP_TIPO_TABLA4(2)||' '||CHR(10)||'';

				END IF;			
        		
    END LOOP; 
    
        DBMS_OUTPUT.PUT_LINE('[INFO] NO HAY CAMPOS QUE ACTUALIZAR EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL:');
        DBMS_OUTPUT.PUT_LINE(''||V_NOT_UPDATE||'');
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
    
    --ACTUALIZAMOS LOS CAMPOS DE ACT_AJD_ADJJUDICIAL
    
    FOR I IN V_TIPO_TABLA4.FIRST .. V_TIPO_TABLA4.LAST
    LOOP
      
			V_TMP_TIPO_TABLA4 := V_TIPO_TABLA4(I);
	        
				V_SQL := '
				MERGE INTO '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL AJD USING
				(
				WITH DISTINTOS AS (
				  SELECT APR_ID, NUMERO_ACTIVO, ROW_NUMBER () OVER (PARTITION BY NUMERO_ACTIVO ORDER BY APR_ID DESC) ORDEN
				  FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				)
				SELECT '||V_TMP_TIPO_TABLA4(1)||', ACT.ACT_ID 
				FROM '||V_ESQUEMA||'.APR_AUX_STOCK_BIENES APR
				LEFT JOIN DISTINTOS 
				  ON DISTINTOS.APR_ID = APR.APR_ID
				LEFT JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
				  ON ACT.ACT_NUM_ACTIVO_UVEM = APR.NUMERO_ACTIVO                                      
				WHERE '||V_TMP_TIPO_TABLA4(1)||' IS NOT NULL
				AND ACT.BIE_ID IS NOT NULL
				AND DISTINTOS.ORDEN = 1
				) TMP
				ON (AJD.ACT_ID = TMP.ACT_ID)
				WHEN MATCHED THEN UPDATE SET
				AJD.'||V_TMP_TIPO_TABLA4(2)||' = TMP.'||V_TMP_TIPO_TABLA4(1)||',
				AJD.USUARIOMODIFICAR = ''APR'',
				AJD.FECHAMODIFICAR = SYSDATE
				WHERE AJD.'||V_TMP_TIPO_TABLA4(2)||' IS NULL
				'
				;
                
				EXECUTE IMMEDIATE V_SQL;
        
				V_NUM_TABLAS := SQL%ROWCOUNT;
        
			IF V_NUM_TABLAS != 0 THEN
			
				DBMS_OUTPUT.PUT_LINE('[INFO] REGISTROS ACTUALIZADOS EN '||V_ESQUEMA||'.ACT_AJD_ADJJUDICIAL. '||V_NUM_TABLAS||' Filas.');
    
				COMMIT;
          
			END IF;
        
        				
    END LOOP; 
    
    
        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------');
    
  
  DBMS_OUTPUT.PUT_LINE('[OK] - PROCESO FINALIZADO.');

EXCEPTION

    WHEN OTHERS THEN

        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion: '||TO_CHAR(SQLCODE));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------');
        DBMS_OUTPUT.put_line(SQLERRM);

    ROLLBACK;
    RAISE;

END SP_UPA_UPDATE_ACTIVES_SAREB;
/
