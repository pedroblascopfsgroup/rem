--/*
--##########################################
--## AUTOR=DAVID GONZALEZ
--## FECHA_CREACION=20160316
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=0
--## PRODUCTO=NO
--## Finalidad: Reinicializar las secuencias de las tablas afectadas por la migracion.
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE

    V_SENTENCIA VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_NUM NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
    
    TYPE TABLAS IS TABLE OF VARCHAR(30 CHAR);
    TYPE T_ARRAY_TABLAS IS TABLE OF TABLAS;
    V_TABLA TABLAS;
    
    --COMIENZAN EN 1000
    V_TABLAS_BIEN T_ARRAY_TABLAS := T_ARRAY_TABLAS(
				TABLAS('BIE_BIEN'),
				TABLAS('BIE_ADJ_ADJUDICACION'),
				TABLAS('BIE_DATOS_REGISTRALES'),
				TABLAS('BIE_LOCALIZACION'),
				TABLAS('BIE_CAR_CARGAS'),
				TABLAS('BIE_VALORACIONES'),
				TABLAS('GAH_GESTOR_ACTIVO_HISTORICO'),
				TABLAS('GAC_GESTOR_ADD_ACTIVO'),
				TABLAS('GEE_GESTOR_ENTIDAD'),
				TABLAS('GEH_GESTOR_ENTIDAD_HIST'),
				TABLAS('ACT_PVE_PROVEEDOR'),
				TABLAS('ACT_PVC_PROVEEDOR_CONTACTO')
             );
    --COMIENZAN EN 100         
    V_TABLAS_ACT T_ARRAY_TABLAS := T_ARRAY_TABLAS(
				TABLAS('ACT_ACTIVO'),
				TABLAS('ACT_NUM_ACTIVO_REM'),
				TABLAS('ACT_TIT_TITULO'),
				TABLAS('ACT_PDV_PLAN_DIN_VENTAS'),
				TABLAS('ACT_AJD_ADJJUDICIAL'),
				TABLAS('ACT_ADN_ADJNOJUDICIAL'),
				TABLAS('ACT_ADM_INF_ADMINISTRATIVA'),
				TABLAS('ACT_SPS_SIT_POSESORIA'),
				TABLAS('ACT_REG_INFO_REGISTRAL'),
				TABLAS('ACT_LOC_LOCALIZACION'),
				TABLAS('ACT_CPR_COM_PROPIETARIOS'),
				TABLAS('ACT_LLV_LLAVE'),
				TABLAS('ACT_PRO_PROPIETARIO'),
				TABLAS('ACT_PAC_PROPIETARIO_ACTIVO'),
				TABLAS('ACT_CAT_CATASTRO'),
				TABLAS('ACT_CRG_CARGAS'),
				TABLAS('ACT_MLV_MOVIMIENTO_LLAVE'),
				TABLAS('ACT_VAL_VALORACIONES'),
				TABLAS('ACT_TAS_TASACION'),
				TABLAS('ACT_ICO_INFO_COMERCIAL'),
				TABLAS('ACT_EDI_EDIFICIO'),
				TABLAS('ACT_CRI_CARPINTERIA_INT'),
				TABLAS('ACT_CRE_CARPINTERIA_EXT'),
				TABLAS('ACT_PRV_PARAMENTO_VERTICAL'),
				TABLAS('ACT_SOL_SOLADO'),
				TABLAS('ACT_INF_INFRAESTRUCTURA'),
				TABLAS('ACT_ZCO_ZONA_COMUN'),
				TABLAS('ACT_INS_INSTALACION'),
				TABLAS('ACT_BNY_BANYO'),
				TABLAS('ACT_COC_COCINA'),
				TABLAS('ACT_DIS_DISTRIBUCION'),
				TABLAS('ACT_AGA_AGRUPACION_ACTIVO'),
				TABLAS('ACT_AGR_AGRUPACION'),
				TABLAS('ACT_AGO_AGRUPACION_OBS'),
				TABLAS('ACT_SDV_SUBDIVISION_ACTIVO'),
				TABLAS('ACT_ETP_ENTIDAD_PROVEEDOR'),
				TABLAS('ACT_TBJ_TRABAJO'),
				TABLAS('ACT_TBJ'),
				TABLAS('ACT_PRT_PRESUPUESTO_TRABAJO')
             );


BEGIN


	DBMS_OUTPUT.PUT_LINE('[INFO] Se van a reinicializar las secuencias afectadas por la migración.');
	
	DBMS_OUTPUT.PUT_LINE('[INFO] Tablas de bienes...');
	

	FOR I IN V_TABLAS_BIEN.FIRST .. V_TABLAS_BIEN.LAST
	LOOP
	
	V_TABLA := V_TABLAS_BIEN(I);
	
	V_SENTENCIA := 'SELECT COUNT(1) FROM ALL_SEQUENCES WHERE SEQUENCE_NAME = ''S_'||V_TABLA(1)||''' and SEQUENCE_OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_SENTENCIA INTO V_NUM;
	
	IF V_NUM = 0 THEN
	
		DBMS_OUTPUT.PUT_LINE('[INFO] No existe la secuencia para la tabla '||V_ESQUEMA||'.'||V_TABLA(1)||'. Se creará.');
		
		EXECUTE IMMEDIATE ('
			CREATE SEQUENCE '||V_ESQUEMA||'.S_'||V_TABLA(1)||' MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1000 CACHE 20 NOORDER NOCYCLE
		')
		;
	
	ELSE
	
		DBMS_OUTPUT.PUT_LINE('[INFO] Reinicializando la secuencia para la tabla '||V_ESQUEMA||'.'||V_TABLA(1)||'...');
	
		EXECUTE IMMEDIATE ('
		DROP SEQUENCE '||V_ESQUEMA||'.S_'||V_TABLA(1)||'
		')
		;
		
		EXECUTE IMMEDIATE ('
		CREATE SEQUENCE '||V_ESQUEMA||'.S_'||V_TABLA(1)||' MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1000 CACHE 20 NOORDER NOCYCLE
		')
		;
		
	END IF;
  END LOOP;
	
	DBMS_OUTPUT.PUT_LINE('[INFO] Tablas de activos...');
	
	FOR I IN V_TABLAS_ACT.FIRST .. V_TABLAS_ACT.LAST
	LOOP
	
	V_TABLA := V_TABLAS_ACT(I);
	
	V_SENTENCIA := 'SELECT COUNT(1) FROM ALL_SEQUENCES WHERE SEQUENCE_NAME = ''S_'||V_TABLA(1)||''' and SEQUENCE_OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_SENTENCIA INTO V_NUM;
	
	IF V_NUM = 0 THEN
	
		DBMS_OUTPUT.PUT_LINE('[INFO] No existe la secuencia para la tabla '||V_ESQUEMA||'.'||V_TABLA(1)||'. Se creará.');
		
		EXECUTE IMMEDIATE ('
		CREATE SEQUENCE '||V_ESQUEMA||'.S_'||V_TABLA(1)||' MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 100 CACHE 20 NOORDER NOCYCLE
		')
		;
	
	ELSE
	
		DBMS_OUTPUT.PUT_LINE('[INFO] Reinicializando la secuencia para la tabla '||V_ESQUEMA||'.'||V_TABLA(1)||'...');
	
		EXECUTE IMMEDIATE ('
		DROP SEQUENCE '||V_ESQUEMA||'.S_'||V_TABLA(1)||'
		')
		;
		
		EXECUTE IMMEDIATE ('
		CREATE SEQUENCE '||V_ESQUEMA||'.S_'||V_TABLA(1)||' MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 100 CACHE 20 NOORDER NOCYCLE
		')
		;
		
	END IF;
  END LOOP;
	
	DBMS_OUTPUT.PUT_LINE('[INFO] Proceso finalizado.');
	
EXCEPTION
     WHEN OTHERS THEN 
         DBMS_OUTPUT.PUT_LINE('KO!');
          err_num := SQLCODE;
          err_msg := SQLERRM;

          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(err_msg);

          ROLLBACK;
          RAISE;          

END;
/

EXIT
