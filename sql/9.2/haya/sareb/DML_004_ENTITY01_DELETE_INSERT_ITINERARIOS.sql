--/*
--##########################################
--## AUTOR=Javier Ruiz
--## FECHA_CREACION=20160218
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.2.0-hy-rc01
--## INCIDENCIA_LINK=PRODUCTO-796
--## PRODUCTO=NO
--## Finalidad: Borra los itinerarios no utilizados y crea uno nuevo de tipo Gestión de deuda 
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE
	V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar     
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    
    V_NUM NUMBER; 
    
    V_DD_TIT_ID NUMBER;
    V_DD_AEX_ID NUMBER;
    V_DD_TRE_ID NUMBER;
    V_PEF_GESTOR NUMBER;
    V_PEF_SUPER NUMBER;
    
    V_ITI NUMBER;
    V_DD_EST NUMBER;
    
    V_EST_CE NUMBER;
    V_EST_RE NUMBER;
    V_EST_ENSAN NUMBER;
    V_EST_SANC NUMBER;
    
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
BEGIN
	
	--Borramos los itinerarios que no estén asociasdos a expedientes
	V_MSQL := 'UPDATE '||V_ESQUEMA||'.ITI_ITINERARIOS SET BORRADO = 1 WHERE NOT ITI_ID IN
				(SELECT DISTINCT ARQ.ITI_ID
				 FROM '||V_ESQUEMA||'.EXP_EXPEDIENTES EXP
  				 	INNER JOIN '||V_ESQUEMA||'.ARQ_ARQUETIPOS ARQ ON EXP.ARQ_ID = ARQ.ARQ_ID
				 WHERE EXP.BORRADO = 0 AND NOT ARQ.ITI_ID IS NULL)';
	DBMS_OUTPUT.PUT_LINE(V_MSQL);
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] Registros borrados de '||V_ESQUEMA||'.ITI_ITINERARIOS');
	
	-- Insertamos si no existe el nuevo itinerario de tipo Gestión de deuda
	V_SQL := 'SELECT COUNT(1) FROM '||V_ESQUEMA||'.ITI_ITINERARIOS WHERE ITI_NOMBRE = ''Estándar''';
	EXECUTE IMMEDIATE V_SQL INTO V_NUM;
	
	IF V_NUM=0 THEN
		V_SQL := 'SELECT COUNT(1) FROM '||V_ESQUEMA_M||'.DD_TIT_TIPO_ITINERARIOS WHERE DD_TIT_CODIGO = ''DEU''';
		EXECUTE IMMEDIATE V_SQL INTO V_NUM;
		IF V_NUM=0 THEN
			RAISE_APPLICATION_ERROR(-20101, 'Todavía no se ha creado el tipo itinerario Gestión Deuda. Ejecutar primero: sql/9.2/producto/DML_002_MASTER_INSERT_TIPO_ITINERARIO.sql');
		END IF;
		
		V_SQL := 'SELECT COUNT(1) FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO = ''PPGRA''';
		EXECUTE IMMEDIATE V_SQL INTO V_NUM;
		IF V_NUM=0 THEN
			RAISE_APPLICATION_ERROR(-20102, 'No existe el Ambito de expediente: Persona de pase; personas del grupo de clientes y personas de primera generación.');
		END IF;		
	
		--Necesitamos encontrar los ids para DD_TIT_ID y DD_AEX_ID
		V_MSQL := 'SELECT DD_TIT_ID FROM '||V_ESQUEMA_M||'.DD_TIT_TIPO_ITINERARIOS WHERE DD_TIT_CODIGO = ''DEU''';
		EXECUTE IMMEDIATE V_MSQL INTO V_DD_TIT_ID;
		
		V_MSQL := 'SELECT DD_AEX_ID FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO = ''PPGRA''';
		EXECUTE IMMEDIATE V_MSQL INTO V_DD_AEX_ID;
		
		V_SQL := 'SELECT '||V_ESQUEMA||'.S_ITI_ITINERARIOS.NEXTVAL FROM DUAL';
		EXECUTE IMMEDIATE V_SQL INTO V_ITI;

		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ITI_ITINERARIOS (ITI_ID, ITI_NOMBRE, VERSION, USUARIOCREAR, FECHACREAR, BORRADO, DD_TIT_ID, DD_AEX_ID)
					VALUES ('||V_ITI||', ''Estándar'', 0, ''DML'', SYSDATE, 0, '||V_DD_TIT_ID||', '||V_DD_AEX_ID||')';
		DBMS_OUTPUT.PUT_LINE(V_MSQL);
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Registros insertado en '||V_ESQUEMA||'.ITI_ITINERARIOS');
		
		-- ***************************************************** Estados **************************************
		-- Creamos el nuevo estado solo para Sareb En Sancion si no existe ya en el mismo orden que el estado Decision Comite
		V_SQL := 'SELECT COUNT(1) FROM '||V_ESQUEMA_M||'.DD_EST_ESTADOS_ITINERARIOS WHERE DD_EST_CODIGO = ''ENSAN''';
		EXECUTE IMMEDIATE V_SQL INTO V_NUM;
		IF V_NUM=0 THEN
			V_SQL := 'SELECT DD_EIN_ID FROM '||V_ESQUEMA_M||'.DD_EIN_ENTIDAD_INFORMACION WHERE DD_EIN_CODIGO = ''2''';
			EXECUTE IMMEDIATE V_SQL INTO V_NUM;
			V_MSQL := 'INSERT INTO '||V_ESQUEMA_M||'.DD_EST_ESTADOS_ITINERARIOS (DD_EST_ID, DD_EIN_ID, DD_EST_ORDEN, DD_EST_CODIGO, DD_EST_DESCRIPCION, DD_EST_DESCRIPCION_LARGA, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)
						 VALUES ('||V_ESQUEMA_M||'.S_DD_EST_EST_ITI.NEXTVAL, '||V_NUM||', ''6'', ''ENSAN'', ''En sanción'', ''En sanción'', 0, ''DML'', SYSDATE, 0)';
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Estado: En sanción insertado...');
		ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el estado En sanción');
		END IF;
		
		
		-- Ahora creamos los registros para enlazar los estados a este nuevo itinerario
		V_SQL := 'SELECT PEF_ID FROM '||V_ESQUEMA||'.PEF_PERFILES WHERE PEF_CODIGO = ''OFI_OFICINA''';
		EXECUTE IMMEDIATE V_SQL INTO V_PEF_GESTOR;
    	DBMS_OUTPUT.PUT_LINE('[INFO] Perfil gestor: '|| V_PEF_GESTOR);
		V_SQL := 'SELECT PEF_ID FROM '||V_ESQUEMA||'.PEF_PERFILES WHERE PEF_CODIGO = ''GES_RIESGOS''';
		EXECUTE IMMEDIATE V_SQL INTO V_PEF_SUPER;
    	DBMS_OUTPUT.PUT_LINE('[INFO] Perfil supervisor: '|| V_PEF_SUPER);
    
		-- CE Completar expediente
		V_SQL := 'SELECT DD_EST_ID FROM '||V_ESQUEMA_M||'.DD_EST_ESTADOS_ITINERARIOS WHERE DD_EST_CODIGO=''CE'' AND DD_EIN_ID = 2';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_EST;
		V_SQL := 'SELECT '||V_ESQUEMA||'.S_EST_ESTADOS.NEXTVAL FROM DUAL';
		EXECUTE IMMEDIATE V_SQL INTO V_EST_CE;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.EST_ESTADOS (EST_ID, PEF_ID_GESTOR, PEF_ID_SUPERVISOR, ITI_ID, DD_EST_ID, EST_TELECOBRO, EST_PLAZO, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_EST_CE||', '||V_PEF_GESTOR||', '||V_PEF_SUPER||', '||V_ITI||', '||V_DD_EST||', 0, 864000000, 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertado estado Completar expediente al itinerario: Estándar.');
		
		-- RE Revisar expediente
		V_SQL := 'SELECT DD_EST_ID FROM '||V_ESQUEMA_M||'.DD_EST_ESTADOS_ITINERARIOS WHERE DD_EST_CODIGO=''RE'' AND DD_EIN_ID = 2';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_EST;
		V_SQL := 'SELECT '||V_ESQUEMA||'.S_EST_ESTADOS.NEXTVAL FROM DUAL';
		EXECUTE IMMEDIATE V_SQL INTO V_EST_RE;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.EST_ESTADOS (EST_ID, PEF_ID_GESTOR, PEF_ID_SUPERVISOR, ITI_ID, DD_EST_ID, EST_TELECOBRO, EST_PLAZO, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_EST_RE||', '||V_PEF_GESTOR||', '||V_PEF_SUPER||', '||V_ITI||', '||V_DD_EST||', 0, 864000000, 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertado estado Revisar expediente al itinerario: Estándar.');
		
		-- ENSAN En sanción
		V_SQL := 'SELECT DD_EST_ID FROM '||V_ESQUEMA_M||'.DD_EST_ESTADOS_ITINERARIOS WHERE DD_EST_CODIGO=''ENSAN'' AND DD_EIN_ID = 2';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_EST;
		V_SQL := 'SELECT '||V_ESQUEMA||'.S_EST_ESTADOS.NEXTVAL FROM DUAL';
		EXECUTE IMMEDIATE V_SQL INTO V_EST_ENSAN;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.EST_ESTADOS (EST_ID, PEF_ID_GESTOR, PEF_ID_SUPERVISOR, ITI_ID, DD_EST_ID, EST_TELECOBRO, EST_PLAZO, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_EST_ENSAN||', '||V_PEF_GESTOR||', '||V_PEF_SUPER||', '||V_ITI||', '||V_DD_EST||', 0, 864000000, 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertado estado En sanción al itinerario: Estándar.');		
						
		-- SANC Sancionado
		V_SQL := 'SELECT DD_EST_ID FROM '||V_ESQUEMA_M||'.DD_EST_ESTADOS_ITINERARIOS WHERE DD_EST_CODIGO=''SANC'' AND DD_EIN_ID = 2';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_EST;
		V_SQL := 'SELECT '||V_ESQUEMA||'.S_EST_ESTADOS.NEXTVAL FROM DUAL';
		EXECUTE IMMEDIATE V_SQL INTO V_EST_SANC;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.EST_ESTADOS (EST_ID, PEF_ID_GESTOR, PEF_ID_SUPERVISOR, ITI_ID, DD_EST_ID, EST_TELECOBRO, EST_PLAZO, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_EST_SANC||', '||V_PEF_GESTOR||', '||V_PEF_SUPER||', '||V_ITI||', '||V_DD_EST||', 0, 864000000, 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertado estado Sancionado al itinerario: Estándar.');
		
		-- ***************************************************** Reglas de elevación **************************************
		-- ***************************************************** CE Completar expediente **************************************
		DBMS_OUTPUT.PUT_LINE('[INFO] Reglas elevación para estado CE Completar expediente.********************************');
		V_SQL := 'SELECT DD_TRE_ID FROM '||V_ESQUEMA_M||'.DD_TRE_TIPO_REGLAS_ELEVACION WHERE DD_TRE_CODIGO=''GESTION_PROPUESTA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_TRE_ID;
		V_SQL := 'SELECT DD_AEX_ID FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO=''EXP''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_AEX_ID;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.REE_REGLAS_ELEVACION_ESTADO (REE_ID, DD_TRE_ID, DD_AEX_ID, EST_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_ESQUEMA||'.S_REE_REGLAS_ELEVACION_ESTADO.NEXTVAL, '||V_DD_TRE_ID||', '||V_DD_AEX_ID||', '||V_EST_CE||', 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertada GESTION PROPUESTA para EXPEDIENTE');
		
		V_SQL := 'SELECT DD_TRE_ID FROM '||V_ESQUEMA_M||'.DD_TRE_TIPO_REGLAS_ELEVACION WHERE DD_TRE_CODIGO=''POLITICA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_TRE_ID;
		V_SQL := 'SELECT DD_AEX_ID FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO=''PPGRA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_AEX_ID;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.REE_REGLAS_ELEVACION_ESTADO (REE_ID, DD_TRE_ID, DD_AEX_ID, EST_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_ESQUEMA||'.S_REE_REGLAS_ELEVACION_ESTADO.NEXTVAL, '||V_DD_TRE_ID||', '||V_DD_AEX_ID||', '||V_EST_CE||', 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertada POLITICA para PPGRA');		

		-- ***************************************************** RE Revisar expediente **************************************
		DBMS_OUTPUT.PUT_LINE('[INFO] Reglas elevación para estado RE Revisar expediente.********************************');
		V_SQL := 'SELECT DD_TRE_ID FROM '||V_ESQUEMA_M||'.DD_TRE_TIPO_REGLAS_ELEVACION WHERE DD_TRE_CODIGO=''GESTION_PROPUESTA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_TRE_ID;
		V_SQL := 'SELECT DD_AEX_ID FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO=''EXP''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_AEX_ID;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.REE_REGLAS_ELEVACION_ESTADO (REE_ID, DD_TRE_ID, DD_AEX_ID, EST_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_ESQUEMA||'.S_REE_REGLAS_ELEVACION_ESTADO.NEXTVAL, '||V_DD_TRE_ID||', '||V_DD_AEX_ID||', '||V_EST_RE||', 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertada GESTION PROPUESTA para EXPEDIENTE');
		
		V_SQL := 'SELECT DD_TRE_ID FROM '||V_ESQUEMA_M||'.DD_TRE_TIPO_REGLAS_ELEVACION WHERE DD_TRE_CODIGO=''POLITICA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_TRE_ID;
		V_SQL := 'SELECT DD_AEX_ID FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO=''PPGRA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_AEX_ID;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.REE_REGLAS_ELEVACION_ESTADO (REE_ID, DD_TRE_ID, DD_AEX_ID, EST_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_ESQUEMA||'.S_REE_REGLAS_ELEVACION_ESTADO.NEXTVAL, '||V_DD_TRE_ID||', '||V_DD_AEX_ID||', '||V_EST_RE||', 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertada POLITICA para PPGRA');
		
		-- ***************************************************** ENSAN En sancion **************************************
		DBMS_OUTPUT.PUT_LINE('[INFO] Reglas elevación para estado ENSAN EN sancion.********************************');
		V_SQL := 'SELECT DD_TRE_ID FROM '||V_ESQUEMA_M||'.DD_TRE_TIPO_REGLAS_ELEVACION WHERE DD_TRE_CODIGO=''GESTION_PROPUESTA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_TRE_ID;
		V_SQL := 'SELECT DD_AEX_ID FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO=''EXP''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_AEX_ID;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.REE_REGLAS_ELEVACION_ESTADO (REE_ID, DD_TRE_ID, DD_AEX_ID, EST_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_ESQUEMA||'.S_REE_REGLAS_ELEVACION_ESTADO.NEXTVAL, '||V_DD_TRE_ID||', '||V_DD_AEX_ID||', '||V_EST_ENSAN||', 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertada GESTION PROPUESTA para EXPEDIENTE');
		
		V_SQL := 'SELECT DD_TRE_ID FROM '||V_ESQUEMA_M||'.DD_TRE_TIPO_REGLAS_ELEVACION WHERE DD_TRE_CODIGO=''POLITICA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_TRE_ID;
		V_SQL := 'SELECT DD_AEX_ID FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO=''PPGRA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_AEX_ID;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.REE_REGLAS_ELEVACION_ESTADO (REE_ID, DD_TRE_ID, DD_AEX_ID, EST_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_ESQUEMA||'.S_REE_REGLAS_ELEVACION_ESTADO.NEXTVAL, '||V_DD_TRE_ID||', '||V_DD_AEX_ID||', '||V_EST_ENSAN||', 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertada POLITICA para PPGRA');		
		
		-- ***************************************************** SANC Sancionado **************************************
		DBMS_OUTPUT.PUT_LINE('[INFO] Reglas elevación para estado SANC Sancionado. ********************************');
		V_SQL := 'SELECT DD_TRE_ID FROM '||V_ESQUEMA_M||'.DD_TRE_TIPO_REGLAS_ELEVACION WHERE DD_TRE_CODIGO=''GESTION_PROPUESTA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_TRE_ID;
		V_SQL := 'SELECT DD_AEX_ID FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO=''EXP''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_AEX_ID;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.REE_REGLAS_ELEVACION_ESTADO (REE_ID, DD_TRE_ID, DD_AEX_ID, EST_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_ESQUEMA||'.S_REE_REGLAS_ELEVACION_ESTADO.NEXTVAL, '||V_DD_TRE_ID||', '||V_DD_AEX_ID||', '||V_EST_SANC||', 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertada GESTION PROPUESTA para EXPEDIENTE');
		
		V_SQL := 'SELECT DD_TRE_ID FROM '||V_ESQUEMA_M||'.DD_TRE_TIPO_REGLAS_ELEVACION WHERE DD_TRE_CODIGO=''POLITICA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_TRE_ID;
		V_SQL := 'SELECT DD_AEX_ID FROM '||V_ESQUEMA_M||'.DD_AEX_AMBITOS_EXPEDIENTE WHERE DD_AEX_CODIGO=''PPGRA''';
		EXECUTE IMMEDIATE V_SQL INTO V_DD_AEX_ID;
		V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.REE_REGLAS_ELEVACION_ESTADO (REE_ID, DD_TRE_ID, DD_AEX_ID, EST_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) 
					VALUES ('||V_ESQUEMA||'.S_REE_REGLAS_ELEVACION_ESTADO.NEXTVAL, '||V_DD_TRE_ID||', '||V_DD_AEX_ID||', '||V_EST_SANC||', 0, ''DML'', SYSDATE, 0)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Insertada POLITICA para PPGRA');		
		
	ELSE
		DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el itinerario: Estándar.');
	END IF;
				

    COMMIT;
	
EXCEPTION
  WHEN OTHERS THEN
    ERR_NUM := SQLCODE;
    ERR_MSG := SQLERRM;
    DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
    DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
    DBMS_OUTPUT.put_line(ERR_MSG);
    ROLLBACK;
    RAISE;   
    
END;
/

EXIT;
