--/*
--##########################################
--## AUTOR=Carlos Gil Gimeno
--## FECHA_CREACION=20160404
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.2
--## INCIDENCIA_LINK=PRODUCTO-1323
--## PRODUCTO=SI
--## Finalidad: DDL
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;


DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_TS_INDEX VARCHAR2(25 CHAR):= '#TABLESPACE_INDEX#'; -- Configuracion Esquemas
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    V_TEXT1 VARCHAR2(2400 CHAR); -- Vble. auxiliar

    BEGIN

	-- ******** CAL_CALCULO_LIQUIDACION *******
    DBMS_OUTPUT.PUT_LINE('******** CAL_CALCULO_LIQUIDACION ********'); 
    DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.CAL_CALCULO_LIQUIDACION... Comprobaciones previas'); 
	
    
    -- Comprobamos si existe la tabla   
    V_SQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''CAL_CALCULO_LIQUIDACION'' and owner = '''||V_ESQUEMA||'''';
    EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
    -- Si no existe la creamos
	    IF V_NUM_TABLAS = 0 THEN 
		    --Creamos la tabla
		    V_MSQL := 'CREATE TABLE ' || V_ESQUEMA || '.CAL_CALCULO_LIQUIDACION
							(
							  CAL_ID NUMBER(16) NOT NULL,
							  CAL_NOMBRE VARCHAR2(50 CHAR),
							  ASU_ID NUMBER(16,0) NOT NULL,
							  PRC_ID NUMBER(16,0) NOT NULL,
							  CNT_ID NUMBER(16,0) NOT NULL,
							  CAL_NOMBRE_PER VARCHAR2(50 CHAR),
							  CAL_DOC_ID VARCHAR2(20 CHAR),
							  CAL_CAPITAL NUMBER(16,2) NOT NULL,
							  CAL_INTERESES_ORDINARIOS NUMBER(16,2),
							  CAL_INTERESES_DEMORA NUMBER(16,2),
							  CAL_COMISIONES NUMBER(16,2),
							  CAL_IMPUESTOS NUMBER(16,2),
							  CAL_GASTOS NUMBER(16,2),
							  CAL_FECHA_CIERRE DATE NOT NULL,
							  CAL_COSTAS_LETRADO NUMBER(16,2),
							  CAL_COSTAS_PROCURADOR NUMBER(16,2),
							  CAL_OTROS_GASTOS NUMBER(16,2),
							  CAL_BASE_CALCULO NUMBER(3,0) NOT NULL,
							  CAL_FECHA_LIQUIDACION DATE NOT NULL,
							  CAL_TIPO_MORA_CIERRE NUMBER(5,2) NOT NULL,
							  CAL_TOTAL_LIQUIDACION NUMBER(16,2),
							  DD_ECA_ID NUMBER(16,0) NOT NULL, 
							  VERSION INTEGER DEFAULT 0 NOT NULL,
							  USUARIOCREAR VARCHAR2(50 CHAR) NOT NULL,
							  FECHACREAR TIMESTAMP(6) NOT NULL,
							  USUARIOMODIFICAR VARCHAR2(50 CHAR),
							  FECHAMODIFICAR TIMESTAMP(6),
							  USUARIOBORRAR VARCHAR2(50 CHAR),
							  FECHABORRAR TIMESTAMP(6),
							  BORRADO NUMBER(1) DEFAULT 0 NOT NULL
							)';
		    EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.CAL_CALCULO_LIQUIDACION... Tabla creada');  
    	END IF;
    	
    --Comprobamos si existen PK de esa tabla
    V_SQL := 'SELECT COUNT(1) FROM ALL_CONSTRAINTS WHERE TABLE_NAME = ''CAL_CALCULO_LIQUIDACION'' and owner = '''||V_ESQUEMA||''' and CONSTRAINT_TYPE = ''P''';
    EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
    -- Si no existe la PK
    IF V_NUM_TABLAS = 0 THEN	
	    	
    		V_MSQL := 'CREATE UNIQUE INDEX ' || V_ESQUEMA || '.PK_CAL_CALCULO_LIQUIDACION ON ' || V_ESQUEMA || '.CAL_CALCULO_LIQUIDACION (CAL_ID)  TABLESPACE ' || V_TS_INDEX;
			EXECUTE IMMEDIATE V_MSQL;
			
		    V_SQL := 'CREATE INDEX '||V_ESQUEMA||'.IDX_ASU_ID_CAL ON '||V_ESQUEMA||'.CAL_CALCULO_LIQUIDACION (ASU_ID)  TABLESPACE ' || V_TS_INDEX;
	    	EXECUTE IMMEDIATE V_SQL;
	    	DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.CAL_CALCULO_LIQUIDACION ASU_ID... Indice creado');
	    	
	    	V_SQL := 'CREATE INDEX '||V_ESQUEMA||'.IDX_PRC_ID_CAL ON '||V_ESQUEMA||'.CAL_CALCULO_LIQUIDACION (PRC_ID)  TABLESPACE ' || V_TS_INDEX;
	    	EXECUTE IMMEDIATE V_SQL;
	    	DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.CAL_CALCULO_LIQUIDACION PRC_ID... Indice creado');
	    	
	    	V_SQL := 'CREATE INDEX '||V_ESQUEMA||'.IDX_CNT_ID_CAL ON '||V_ESQUEMA||'.CAL_CALCULO_LIQUIDACION (CNT_ID)  TABLESPACE ' || V_TS_INDEX;
	    	EXECUTE IMMEDIATE V_SQL;
	    	DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.CAL_CALCULO_LIQUIDACION CNT_ID... Indice creado');
	    	
	    	V_SQL := 'CREATE INDEX '||V_ESQUEMA||'.IDX_DD_ECA_ID ON '||V_ESQUEMA||'.CAL_CALCULO_LIQUIDACION (DD_ECA_ID)  TABLESPACE ' || V_TS_INDEX;
	    	EXECUTE IMMEDIATE V_SQL;
	    	DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.CAL_CALCULO_LIQUIDACION DD_ECA_ID... Indice creado');
    	
			DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.PK_CAL_CALCULO_LIQUIDACION... Indice creado');
	    	V_MSQL := 'ALTER TABLE ' || V_ESQUEMA || '.CAL_CALCULO_LIQUIDACION ADD (
			  CONSTRAINT PK_CAL_CALCULO_LIQUIDACION PRIMARY KEY (CAL_ID),
			  CONSTRAINT FK_CAL_ASU_ASUNTOS FOREIGN KEY (ASU_ID) REFERENCES  ' || V_ESQUEMA || '.ASU_ASUNTOS (ASU_ID),
			  CONSTRAINT FK_CAL_PRC_PROCEDIMIENTOS FOREIGN KEY (PRC_ID) REFERENCES  ' || V_ESQUEMA || '.PRC_PROCEDIMIENTOS (PRC_ID),
			  CONSTRAINT FK_CAL_CNT_CONTRATOS FOREIGN KEY (CNT_ID) REFERENCES  ' || V_ESQUEMA || '.CNT_CONTRATOS (CNT_ID),
			  CONSTRAINT FK_CAL_DD_ECA_ESTADO_CALCULO FOREIGN KEY (DD_ECA_ID) REFERENCES  ' || V_ESQUEMA || '.DD_ECA_ESTADO_CALCULO (DD_ECA_ID))';
			EXECUTE IMMEDIATE V_MSQL;              
			DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.PK_CAL_CALCULO_LIQUIDACION... PK creada');	
    END IF;
    
    -- Comprobamos si existe la secuencia
		V_SQL := 'SELECT COUNT(1) FROM ALL_SEQUENCES WHERE SEQUENCE_NAME = ''S_CAL_CALCULO_LIQUIDACION'' and sequence_owner = '''||V_ESQUEMA||'''';
		EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS; 
		if V_NUM_TABLAS = 0 THEN			
				DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.S_CAL_CALCULO_LIQUIDACION...');
		    	V_MSQL := 'CREATE SEQUENCE ' || V_ESQUEMA || '.S_CAL_CALCULO_LIQUIDACION';
				EXECUTE IMMEDIATE V_MSQL; 
				DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.S_CAL_CALCULO_LIQUIDACION... Secuencia creada');    
		END IF; 

    DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.CAL_CALCULO_LIQUIDACION... OK');
	
    DBMS_OUTPUT.PUT_LINE('[INFO] Fin script.');

    COMMIT;
    
EXCEPTION
  WHEN OTHERS THEN
    ERR_NUM := SQLCODE;
    ERR_MSG := SQLERRM;
    DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
    DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
    DBMS_OUTPUT.put_line(ERR_MSG);
    ROLLBACK;
    RAISE;   
END;
/
EXIT;