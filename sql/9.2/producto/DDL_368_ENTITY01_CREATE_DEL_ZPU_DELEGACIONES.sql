--/*
--##########################################
--## AUTOR=Javier Ruiz
--## FECHA_CREACION=20160517
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=2.9.4
--## INCIDENCIA_LINK=PRODUCTO-1349
--## PRODUCTO=SI
--##
--## Finalidad:  DDL que crea la tabla DD_EDL_DELEGACIONES y DEL_ZPU_DELEGACIONES
--## INSTRUCCIONES:
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;
DECLARE
	V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar
	V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquemas
	V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquemas
	V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.

	VN_COUNT NUMBER;

	ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
	ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
BEGIN
	-- Tabla DD_EDL_ESTADO_DELEGACIONES
	V_SQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME=''DD_EDL_ESTADO_DELEGACIONES'' AND OWNER='''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_SQL INTO VN_COUNT;
	IF VN_COUNT = 0 THEN
		V_MSQL := 'CREATE TABLE  '||V_ESQUEMA||'.DD_EDL_ESTADO_DELEGACIONES
				(
				DD_EDL_ID NUMBER(16,0) NOT NULL
				, DD_EDL_CODIGO VARCHAR2(50 CHAR) NOT NULL
				, DD_EDL_DESCRIPCION VARCHAR2(50 CHAR)
				, DD_EDL_DESCRIPCION_LARGA VARCHAR2(250 CHAR)
				, VERSION NUMBER(*,0) DEFAULT 0 NOT NULL
				, USUARIOCREAR VARCHAR2(50 CHAR) NOT NULL
				, FECHACREAR TIMESTAMP (6) NOT NULL
				, USUARIOMODIFICAR VARCHAR2(50 CHAR)
				, FECHAMODIFICAR TIMESTAMP (6)
				, USUARIOBORRAR VARCHAR2(50 CHAR)
				, FECHABORRAR TIMESTAMP (6)
				, BORRADO NUMBER(1,0) DEFAULT 0 NOT NULL
				, CONSTRAINT DD_EDL_DELEGACIONES_PK PRIMARY KEY (DD_EDL_ID) ENABLE
				)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Tabla DD_EDL_ESTADO_DELEGACIONES creada OK.');
	ELSE
		DBMS_OUTPUT.PUT_LINE('[INFO] Ya existía la tabla DD_EDL_ESTADO_DELEGACIONES.');
	END IF;

	--Secuencia para la tabla DD_EDL_ESTADO_DELEGACIONES
	V_SQL := 'SELECT COUNT(1) FROM ALL_SEQUENCES WHERE SEQUENCE_OWNER='''||V_ESQUEMA||''' AND SEQUENCE_NAME=''S_DD_EDL_ESTADO_DELEGACIONES''';
	EXECUTE IMMEDIATE V_SQL INTO VN_COUNT;
	IF VN_COUNT = 0 THEN
		V_MSQL := 'CREATE SEQUENCE '||V_ESQUEMA||'.S_DD_EDL_ESTADO_DELEGACIONES INCREMENT BY 1 START WITH 1 NOCACHE';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Secuencia S_DD_EDL_ESTADO_DELEGACIONES creada OK');
	ELSE
		DBMS_OUTPUT.PUT_LINE('[INFO] Secuencia S_DD_EDL_ESTADO_DELEGACIONES ya existia');
	END IF;

	-- Tabla DEL_ZPU_DELEGACIONES
	V_SQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME=''DEL_ZPU_DELEGACIONES'' AND OWNER='''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_SQL INTO VN_COUNT;
	IF VN_COUNT = 0 THEN
		V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.DEL_ZPU_DELEGACIONES
				(
				DEL_ZPU_ID NUMBER(16, 0) NOT NULL
				, USU_ORIGEN NUMBER(16, 0) NOT NULL
				, USU_DESTINO NUMBER(16, 0) NOT NULL
				, FECHA_INI_VIGENCIA DATE
				, FECHA_FIN_VIGENCIA DATE
				, DD_EDL_ID NUMBER(16, 0) NOT NULL
				, VERSION NUMBER(*,0)
				, USUARIOCREAR VARCHAR2(50 CHAR)
				, FECHACREAR TIMESTAMP (6)
				, BORRADO NUMBER(1,0)
				, USUARIOMODIFICAR VARCHAR2(50 CHAR)
				, FECHAMODIFICAR TIMESTAMP (6)
				, USUARIOBORRAR VARCHAR2(50 CHAR)
				, FECHABORRAR TIMESTAMP (6)
				, CONSTRAINT DEL_ZPU_DELEGACIONES_PK PRIMARY KEY (DEL_ZPU_ID) ENABLE
				)';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Tabla DEL_DELEGACIONES creada OK');

		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.DEL_ZPU_DELEGACIONES
				ADD CONSTRAINT FK_USU_DESTINO FOREIGN KEY (USU_DESTINO)
				REFERENCES '||V_ESQUEMA_M||'.USU_USUARIOS (USU_ID) ENABLE';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Clave ajena FK_USU_DESTINO creada OK');

		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.DEL_ZPU_DELEGACIONES
				ADD CONSTRAINT FK_USU_ORIGEN FOREIGN KEY (USU_ORIGEN)
				REFERENCES '||V_ESQUEMA_M||'.USU_USUARIOS (USU_ID) ENABLE';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Clave ajena FK_USU_ORIGEN creada OK');

		V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.DEL_ZPU_DELEGACIONES
				ADD CONSTRAINT FK_DD_EDL_ID FOREIGN KEY (DD_EDL_ID)
				REFERENCES '||V_ESQUEMA||'.DD_EDL_ESTADO_DELEGACIONES (DD_EDL_ID) ENABLE';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Clave ajena FK_DD_EDL_ID creada OK');
	ELSE
		DBMS_OUTPUT.PUT_LINE('[INFO] Ya existía la tabla DEL_DELEGACIONES');
	END IF;

	--Secuencia para la tabla DEL_ZPU_DELEGACIONES
	V_SQL := 'SELECT COUNT(1) FROM ALL_SEQUENCES WHERE SEQUENCE_OWNER='''||V_ESQUEMA||''' AND SEQUENCE_NAME=''S_DEL_DELEGACIONES''';
	EXECUTE IMMEDIATE V_SQL INTO VN_COUNT;
	IF VN_COUNT = 0 THEN
		V_MSQL := 'CREATE SEQUENCE '||V_ESQUEMA||'.S_DEL_ZPU_DELEGACIONES INCREMENT BY 1 START WITH 1 NOCACHE';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Secuencia S_DEL_DELEGACIONES creada OK');
	ELSE
		DBMS_OUTPUT.PUT_LINE('[INFO] Secuencia S_DEL_DELEGACIONES ya existia');
	END IF;


	COMMIT;


	DBMS_OUTPUT.PUT_LINE('[INFO] Fin.');
EXCEPTION
	WHEN OTHERS THEN
		ERR_NUM := SQLCODE;
		ERR_MSG := SQLERRM;
		DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
		DBMS_OUTPUT.put_line('-----------------------------------------------------------');
		DBMS_OUTPUT.put_line(ERR_MSG);
		ROLLBACK;
		RAISE;
END;
/
EXIT;
