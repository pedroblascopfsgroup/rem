--/*
--##########################################
--## AUTOR=ANAHUAC DE VICENTE
--## FECHA_CREACION=20151102
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=0
--## PRODUCTO=NO
--## Finalidad: Tabla que contiene los trabajos de los activos.
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_MASTER VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquemas
    V_TABLESPACE_IDX VARCHAR2(25 CHAR):= '#TABLESPACE_INDEX#'; -- Configuracion Tablespace de Indices
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    V_NUM_SEQ NUMBER(16); -- Vble. para validar la existencia de una secuencia.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
 
    V_TEXT1 VARCHAR2(2400 CHAR); -- Vble. auxiliar 
    V_TEXT_TABLA VARCHAR2(2400 CHAR) := 'ACT_TBJ_TRABAJO'; -- Vble. auxiliar para almacenar el nombre de la tabla de ref.
	V_COMMENT_TABLE VARCHAR2(500 CHAR):= 'Tabla que contiene los trabajos.'; -- Vble. para los comentarios de las tablas
	
BEGIN
	
	DBMS_OUTPUT.PUT_LINE('********' ||V_TEXT_TABLA|| '********'); 
	DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_TEXT_TABLA||'... Comprobaciones previas');

	
	-- Verificar si la tabla ya existe
	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = '''||V_TEXT_TABLA||''' and owner = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 1 THEN
		DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.'||V_TEXT_TABLA||'... Ya existe. Se borrará.');
		EXECUTE IMMEDIATE 'DROP TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' CASCADE CONSTRAINTS';
		
	END IF;

	-- Comprobamos si existe la secuencia
	V_SQL := 'SELECT COUNT(1) FROM ALL_SEQUENCES WHERE SEQUENCE_NAME = ''S_'||V_TEXT_TABLA||''' and SEQUENCE_OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS; 
	IF V_NUM_TABLAS = 1 THEN
		DBMS_OUTPUT.PUT_LINE('[INFO] '|| V_ESQUEMA ||'.S_'||V_TEXT_TABLA||'... Ya existe. Se borrará.');  
		EXECUTE IMMEDIATE 'DROP SEQUENCE '||V_ESQUEMA||'.S_'||V_TEXT_TABLA||'';
		
	END IF; 
	
	-- Comprobamos si existe la secuencia para el numero de trabajo
	V_SQL := 'SELECT COUNT(1) FROM ALL_SEQUENCES WHERE SEQUENCE_NAME = ''S_TBJ_NUM_TRABAJO'' and sequence_owner = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS; 
	IF V_NUM_TABLAS = 1 THEN			
		V_MSQL := 'DROP SEQUENCE '||V_ESQUEMA||'.S_TBJ_NUM_TRABAJO';
		EXECUTE IMMEDIATE V_MSQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.S_TBJ_NUM_TRABAJO... Secuencia eliminada');    
	END IF;

	
	-- Creamos la tabla
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA|| '.'||V_TEXT_TABLA||'...');
	V_MSQL := 'CREATE TABLE ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'
	(
		TBJ_ID 								NUMBER(16,0)				NOT NULL,
		ACT_ID								NUMBER(16,0),
		AGR_ID								NUMBER(16,0),
		TBJ_NUM_TRABAJO						NUMBER(16,0),
		PVC_ID								NUMBER(16,0),
		USU_ID								NUMBER(16,0),
		DD_TTR_ID							NUMBER(16,0),
		DD_STR_ID							NUMBER(16,0),
		DD_EST_ID							NUMBER(16,0),
		TBJ_DESCRIPCION						VARCHAR2(256 CHAR),
		TBJ_FECHA_SOLICITUD	 				DATE,
		TBJ_FECHA_APROBACION	 			DATE,
		TBJ_FECHA_INICIO	 				DATE,
		TBJ_FECHA_FIN	 					DATE,
		TBJ_CONTINUO_OBSERVACIONES			VARCHAR2(256 CHAR),
		TBJ_FECHA_FIN_COMPROMISO			DATE,
		TBJ_FECHA_TOPE						DATE,
		TBJ_FECHA_HORA_CONCRETA				TIMESTAMP,
		TBJ_URGENTE							NUMBER(1,0)	DEFAULT 0,
		TBJ_CON_RIESGO_TERCEROS				NUMBER(1,0) DEFAULT 0,
		TBJ_CUBRE_SEGURO					NUMBER(1,0) DEFAULT 0,
		TBJ_CIA_ASEGURADORA					VARCHAR2(256 CHAR),
		DD_TCA_ID							NUMBER(16,0),
		TBJ_TERCERO_NOMBRE					VARCHAR2(256 CHAR),
		TBJ_TERCERO_EMAIL					VARCHAR2(256 CHAR),
		TBJ_TERCERO_DIRECCION				VARCHAR2(512 CHAR),
		TBJ_TERCERO_CONTACTO				VARCHAR2(256 CHAR),
		TBJ_TERCERO_TEL1					VARCHAR2(16 CHAR),
		TBJ_TERCERO_TEL2					VARCHAR2(16 CHAR),
		TBJ_IMPORTE_PENAL_DIARIO			NUMBER(16,2),
		TBJ_OBSERVACIONES					VARCHAR2(1024 CHAR),
		TBJ_IMPORTE_TOTAL					NUMBER(16,2),
		TBJ_TARIFICADO						NUMBER(1,0),
		TBJ_FECHA_RECHAZO					DATE,	
		TBJ_MOTIVO_RECHAZO					VARCHAR2(1024 CHAR),		
		TBJ_FECHA_ELECCION_PROVEEDOR		DATE,		
		TBJ_FECHA_EJECUTADO					DATE,		
		TBJ_FECHA_ANULACION					DATE,		
		TBJ_FECHA_VALIDACION				DATE,		
		TBJ_FECHA_CIERRE_ECONOMICO			DATE,
		TBJ_FECHA_PAGO						DATE,
		VERSION 							NUMBER(38,0) 				DEFAULT 0 NOT NULL ENABLE, 
		USUARIOCREAR 						VARCHAR2(10 CHAR) 			NOT NULL ENABLE, 
		FECHACREAR 							TIMESTAMP (6) 				NOT NULL ENABLE, 
		USUARIOMODIFICAR 					VARCHAR2(10 CHAR), 
		FECHAMODIFICAR 						TIMESTAMP (6), 
		USUARIOBORRAR 						VARCHAR2(10 CHAR), 
		FECHABORRAR 						TIMESTAMP (6), 
		BORRADO 							NUMBER(1,0) 				DEFAULT 0 NOT NULL ENABLE
	)
	LOGGING 
	NOCOMPRESS 
	NOCACHE
	NOPARALLEL
	NOMONITORING
	';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'... Tabla creada.');
	

	-- Creamos indice	
	V_MSQL := 'CREATE UNIQUE INDEX '||V_ESQUEMA||'.'||V_TEXT_TABLA||'_PK ON '||V_ESQUEMA|| '.'||V_TEXT_TABLA||'(TBJ_ID) TABLESPACE '||V_TABLESPACE_IDX;			
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'_PK... Indice creado.');
	
	
	-- Creamos primary key
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT '||V_TEXT_TABLA||'_PK PRIMARY KEY (TBJ_ID) USING INDEX)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'_PK... PK creada.');
	
	-- Creamos sequence
	V_MSQL := 'CREATE SEQUENCE '||V_ESQUEMA||'.S_'||V_TEXT_TABLA||'';		
	EXECUTE IMMEDIATE V_MSQL;		
	DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.S_'||V_TEXT_TABLA||'... Secuencia creada');
	
	--Creamos la secuencia para TBJ_NUM_TRABAJO
	DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.S_TBJ_NUM_TRABAJO...');
	V_MSQL := 'CREATE SEQUENCE ' || V_ESQUEMA || '.S_TBJ_NUM_TRABAJO';
	EXECUTE IMMEDIATE V_MSQL; 
	DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.S_TBJ_NUM_TRABAJO... Secuencia creada');
	
	-- Creamos foreign key ACT_ID
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT FK_TRABAJO_ACT FOREIGN KEY (ACT_ID) REFERENCES '||V_ESQUEMA||'.ACT_ACTIVO (ACT_ID) ON DELETE SET NULL)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_TRABAJO_ACT... Foreign key creada.');
	
	-- Creamos foreign key AGR_ID
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT FK_TRABAJO_AGR FOREIGN KEY (AGR_ID) REFERENCES '||V_ESQUEMA||'.ACT_AGR_AGRUPACION (AGR_ID) ON DELETE SET NULL)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_TRABAJO_AGR... Foreign key creada.');
	
	-- Creamos foreign key PVC_ID
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT FK_TRABAJO_PROVEEDORCONTACT FOREIGN KEY (PVC_ID) REFERENCES '||V_ESQUEMA||'.ACT_PVC_PROVEEDOR_CONTACTO (PVC_ID) ON DELETE SET NULL)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_TRABAJO_PROVEEDORCONTACT... Foreign key creada.');
	
	-- Creamos foreign key USU_ID
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT FK_TRABAJO_USU FOREIGN KEY (USU_ID) REFERENCES '||V_ESQUEMA_MASTER||'.USU_USUARIOS (USU_ID) ON DELETE SET NULL)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_TRABAJO_USU... Foreign key creada.');
	
	-- Creamos foreign key DD_TTR_ID
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT FK_TRABAJO_DDTTR FOREIGN KEY (DD_TTR_ID) REFERENCES '||V_ESQUEMA||'.DD_TTR_TIPO_TRABAJO (DD_TTR_ID) ON DELETE SET NULL)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_TRABAJO_DDTTR... Foreign key creada.');
	
	-- Creamos foreign key DD_STR_ID
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT FK_TRABAJO_DDSTR FOREIGN KEY (DD_STR_ID) REFERENCES '||V_ESQUEMA||'.DD_STR_SUBTIPO_TRABAJO (DD_STR_ID) ON DELETE SET NULL)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_TRABAJO_DDSTR... Foreign key creada.');
	
	-- Creamos foreign key DD_EST_ID
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT FK_TRABAJO_DDEST FOREIGN KEY (DD_EST_ID) REFERENCES '||V_ESQUEMA||'.DD_EST_ESTADO_TRABAJO (DD_EST_ID) ON DELETE SET NULL)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_TRABAJO_DDEST... Foreign key creada.');
	
	-- Creamos foreign key DD_TCA_ID
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT FK_TRABAJO_DDTCA FOREIGN KEY (DD_TCA_ID) REFERENCES '||V_ESQUEMA||'.DD_TCA_TIPO_CALIDAD (DD_TCA_ID) ON DELETE SET NULL)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.FK_TRABAJO_DDTCA... Foreign key creada.');
	

	-- Creamos comentario	
	V_MSQL := 'COMMENT ON TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' IS '''||V_COMMENT_TABLE||'''';		
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'... Comentario creado.');
	
	
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'... OK');
	
	COMMIT;



EXCEPTION
     WHEN OTHERS THEN 
         DBMS_OUTPUT.PUT_LINE('KO!');
          err_num := SQLCODE;
          err_msg := SQLERRM;

          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(err_msg);

          ROLLBACK;
          RAISE;          

END;

/

EXIT