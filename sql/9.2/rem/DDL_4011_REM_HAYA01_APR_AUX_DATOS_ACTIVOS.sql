--/*
--##########################################
--## AUTOR=JAVIER DIAZ
--## FECHA_CREACION=20160412
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=0
--## PRODUCTO=NO
--## Finalidad: Tabla auxiliar para la carga temporal de DATOS-ACTIVOS que vienen desde fichero enviado  (UVEM a REM).
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versi칩n inicial
--##########################################
--*/

--Para permitir la visualizaci칩n de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE


WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_TABLESPACE_IDX VARCHAR2(25 CHAR):= '#TABLESPACE_INDEX#'; -- Configuracion Tablespace de Indices
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    V_NUM_SEQ NUMBER(16); -- Vble. para validar la existencia de una secuencia.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    V_TEXT1 VARCHAR2(2400 CHAR); -- Vble. auxiliar 
    V_TEXT_TABLA VARCHAR2(2400 CHAR) := 'APR_AUX_DATOS_ACTIVO'; -- Vble. auxiliar para almacenar el nombre de la tabla de ref.
	V_TEXT_TABLA_IN VARCHAR2(2400 CHAR) := 'APR_AUX_DATOS_ACTIVO'; -- INDICE DE LA TABLA CREADA.
    V_COMMENT_TABLE VARCHAR2(500 CHAR):= 'Tabla auxiliar para la carga temporal de DATOS-ACTIVOS que vienen desde fichero enviado  (UVEM a REM).'; -- Vble. para los comentarios de las tablas

BEGIN
	
	DBMS_OUTPUT.PUT_LINE('********' ||V_TEXT_TABLA|| '********'); 
	DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_TEXT_TABLA||'... Comprobaciones previas');
	

	-- Verificar si la tabla ya existe
	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = '''||V_TEXT_TABLA||''' and owner = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 1 THEN
		DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.'||V_TEXT_TABLA||'... Ya existe. Se borrar치.');
		EXECUTE IMMEDIATE 'DROP TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' CASCADE CONSTRAINTS';
		
	END IF;

	
	-- Creamos la tabla
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA|| '.'||V_TEXT_TABLA||'...');
	V_MSQL := 'CREATE TABLE ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'
	(
		

		ACT_NUMERO_ACTIVO				NUMBER(16,0) NOT NULL,
		ACT_NUMERO_UVEM					NUMBER(16,0) NOT NULL,
		ACT_NUMERO_PRINEX				NUMBER(16,0) ,
		AGR_COD_LOTE_REST_UVEM				NUMBER(16,0) ,
		AGR_COD_OBRA_NUEVA_UVEM				NUMBER(16,0) ,
		ESTADO_ADMISION					NUMBER(1,0) NOT NULL,
		SITUACION_COMERCIAL				VARCHAR2(20 CHAR),
		TIPO_ACTIVO					VARCHAR2(20 CHAR),
		SUBTIPO_ACTIVO					VARCHAR2(20 CHAR),
		UBICACION_ACTIVO				VARCHAR2(20 CHAR),
		TIPO_VIA					VARCHAR2(20 CHAR),
		LOC_NOMBRE_VIA					VARCHAR2(100 CHAR),
		LOC_NUMERO_DOMICILIO				VARCHAR2(100 CHAR),
		LOC_ESCALERA					VARCHAR2(10 CHAR),
		LOC_PISO					VARCHAR2(10 CHAR),
		LOC_PUERTA					VARCHAR2(10 CHAR),
		LOC_COD_POST					VARCHAR2(20 CHAR),
		UNIDAD_INFERIOR_MUNICIPIO			VARCHAR2(20 CHAR),
		MUNICIPIO					VARCHAR2(20 CHAR),
		PROVINCIA					VARCHAR2(20 CHAR),
		PAIS						VARCHAR2(20 CHAR),
		ICO_ACTIVOS_VINC				VARCHAR2(250 CHAR),
		ICO_FECHA_EMISION_INFORME			DATE,
		ICO_FECHA_ULTIMA_VISITA				DATE,
		ICO_FECHA_ACEPTACION				DATE,
		ICO_FECHA_RECHAZO				DATE,
		PVE_CODIGO					VARCHAR2(50 CHAR),
		ICO_CONDICIONES_LEGALES				VARCHAR2(1024 CHAR),
		ESTADO_CONSERVACION_EDIFICIO			VARCHAR2(20 CHAR),
		TIPO_FACHADA_EDIFICIO				VARCHAR2(20 CHAR),
		EDI_ANO_REHABILITACION				NUMBER(8,0) ,
		EDI_NUM_PLANTAS					NUMBER(8,0) ,
		EDI_ASCENSOR					NUMBER(1,0) ,
		EDI_NUM_ASCENSORES				NUMBER(8,0) ,
		EDI_REFORMA_FACHADA				NUMBER(1,0) ,
		EDI_REFORMA_ESCALERA				NUMBER(1,0) ,
		EDI_REFORMA_PORTAL				NUMBER(1,0) ,
		EDI_REFORMA_ASCENSOR				NUMBER(1,0) ,
		EDI_REFORMA_CUBIERTA				NUMBER(1,0) ,
		EDI_REFORMA_OTRA_ZONA				NUMBER(1,0) ,
		EDI_REFORMA_OTRO				NUMBER(1,0) ,
		EDI_REFORMA_OTRO_ZONA_COM_DES 			VARCHAR2(250 CHAR),
		EDI_REFORMA_OTRO_DESC				VARCHAR2(250 CHAR),
		EDI_DESCRIPCION					VARCHAR2(512 CHAR),
		EDI_ENTORNO_INFRAESTRUCTURA			VARCHAR2(1024 CHAR),
		EDI_ENTORNO_COMUNICACION			VARCHAR2(3000 CHAR),
		TIPO_VIVIENDA					VARCHAR2(20 CHAR),
		TIPO_ORIENTACION				VARCHAR2(20 CHAR),
		TIPO_RENTA					VARCHAR2(20 CHAR),
		VIV_ULTIMA_PLANTA				NUMBER(1,0),
		VIV_NUM_PLANTAS_INTERIOR			NUMBER(8,0),
		VIV_REFORMA_CARP_INT				NUMBER(1,0),
		VIV_REFORMA_CARP_EXT				NUMBER(1,0),
		VIV_REFORMA_COCINA				NUMBER(1,0),
		VIV_REFORMA_BANYO				NUMBER(1,0),
		VIV_REFORMA_SUELO				NUMBER(1,0),
		VIV_REFORMA_PINTURA				NUMBER(1,0),
		VIV_REFORMA_INTEGRAL				NUMBER(1,0),
		VIV_REFORMA_OTRO				NUMBER(1,0),
		VIV_REFORMA_OTRO_DESC				VARCHAR2(250 CHAR),
		VIV_REFORMA_PRESUPUESTO				NUMBER(16,2),
		VIV_DISTRIBUCION_TXT				VARCHAR2(1500 CHAR),
		LCO_MTS_FACHADA_PPAL				NUMBER(16,2),
		LCO_MTS_FACHADA_LAT				NUMBER(16,2),
		LCO_MTS_LUZ_LIBRE				NUMBER(16,2),
		LCO_MTS_ALTURA_LIBRE				NUMBER(16,2),
		LCO_MTS_LINEALES_PROF				NUMBER(16,2),
		LCO_DIAFANO					NUMBER(1,0),
		LCO_USO_IDONEO					VARCHAR2(250 CHAR),
		LCO_USO_ANTERIOR				VARCHAR2(250 CHAR),
		LCO_OBSERVACIONES				VARCHAR2(512 CHAR),
		APR_DESTINO_COCHE				NUMBER(1,0),
		APR_DESTINO_MOTO				NUMBER(1,0),
		APR_DESTINO_DOBLE				NUMBER(1,0),
		DD_TUA_ID					VARCHAR2(20 CHAR),
		DD_TCA_ID					VARCHAR2(20 CHAR),
		APR_ANCHURA					NUMBER(16,2),
		APR_PROFUNDIDAD					NUMBER(16,2),
		APR_FORMA_IRREGULAR				NUMBER(1,0),
		USUARIOCREAR 					VARCHAR2(50 CHAR), 
		FECHACREAR 						TIMESTAMP (6), 
		USUARIOMODIFICAR 				VARCHAR2(50 CHAR), 
		FECHAMODIFICAR 					TIMESTAMP (6), 
		USUARIOBORRAR 					VARCHAR2(50 CHAR), 
		FECHABORRAR 					TIMESTAMP (6), 
		BORRADO 						NUMBER(1,0)
	)
	LOGGING 
	NOCOMPRESS 
	NOCACHE
	NOPARALLEL
	NOMONITORING
	';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'... Tabla creada.');
	

	-- Creamos indice	
	V_MSQL := 'CREATE INDEX '||V_ESQUEMA||'.'||V_TEXT_TABLA_IN||'_IN ON '||V_ESQUEMA|| '.'||V_TEXT_TABLA||'(ACT_NUMERO_ACTIVO) TABLESPACE '||V_TABLESPACE_IDX;			
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA_IN||'_IN... Indice creado.');
	
	
	
	-- Creamos comentario	
	V_MSQL := 'COMMENT ON TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' IS '''||V_COMMENT_TABLE||'''';		
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'... Comentario creado.');
	
	
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'... OK');
	
COMMIT;



EXCEPTION
     WHEN OTHERS THEN
          err_num := SQLCODE;
          err_msg := SQLERRM;

          DBMS_OUTPUT.PUT_LINE('KO no modificada');
          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecuci칩n:'||TO_CHAR(err_num));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(err_msg);

          ROLLBACK;
          RAISE;          

END;

/

EXIT
