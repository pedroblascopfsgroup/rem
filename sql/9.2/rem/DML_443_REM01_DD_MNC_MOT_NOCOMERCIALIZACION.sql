--/*
--##########################################
--## AUTOR=DANIEL GUTIERREZ
--## FECHA_CREACION=20160913
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=0
--## PRODUCTO=NO
--##
--## Finalidad: Script que a침ade en DD_MNC_MOT_NOCOMERCIALIZACION los datos a침adidos en T_ARRAY_DATA
--## INSTRUCCIONES:
--## VERSIONES:
--##        0.1 Versi칩n inicial
--##########################################
--*/


WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE
    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar     
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.   
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
	
    V_TEXT1 VARCHAR2(2400 CHAR); -- Vble. auxiliar
    V_ENTIDAD_ID NUMBER(16);
    V_ID NUMBER(16);

    
    
    TYPE T_TIPO_DATA IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_DATA IS TABLE OF T_TIPO_DATA;
    V_TIPO_DATA T_ARRAY_DATA := T_ARRAY_DATA(
		T_TIPO_DATA('01', 'V.P.O. AUTOMATICO', 'V.P.O. AUTOMATICO'),
		T_TIPO_DATA('02', 'PERDIDO', 'PERDIDO'),
		T_TIPO_DATA('03', 'DESISTIDO', 'DESISTIDO'),
		T_TIPO_DATA('04', 'SIN POSESION', 'SIN POSESION'),
		T_TIPO_DATA('05', 'NULIDAD DE ACTUACIONES', 'NULIDAD DE ACTUACIONES'),
		T_TIPO_DATA('06', 'CON POSESION PTE.PROCEDIM.', 'CON POSESION PTE.PROCEDIM.'),
		T_TIPO_DATA('07', 'COMPROMETIDOS', 'COMPROMETIDOS'),
		T_TIPO_DATA('08', 'RESERVA', 'RESERVA'),
		T_TIPO_DATA('09', 'CONTRATACION', 'CONTRATACION'),
		T_TIPO_DATA('10', 'ACTIVOS RESERVADOS PARA SUBASTA', 'ACTIVOS RESERVADOS PARA SUBASTA'),
		T_TIPO_DATA('11', 'SINGULARES', 'SINGULARES'),
		T_TIPO_DATA('12', 'CONTROL DE LA ENTIDAD', 'CONTROL DE LA ENTIDAD'),
		T_TIPO_DATA('13', 'INMUEBLES A REGULARIZAR', 'INMUEBLES A REGULARIZAR'),
		T_TIPO_DATA('14', 'SIN POSESION VALIDA', 'SIN POSESION VALIDA'),
		T_TIPO_DATA('15', 'POSIBLE FALLIDO', 'POSIBLE FALLIDO'),
		T_TIPO_DATA('16', 'CARGAS SIN CUANTIFICAR', 'CARGAS SIN CUANTIFICAR'),
		T_TIPO_DATA('17', 'CARGAS > V. MERCADO', 'CARGAS > V. MERCADO'),
		T_TIPO_DATA('18', 'VPO EN DESCALIFICACION', 'VPO EN DESCALIFICACION'),
		T_TIPO_DATA('19', 'EXPROPIACIONES EN CURSO', 'EXPROPIACIONES EN CURSO'),
		T_TIPO_DATA('20', 'OPCIONES DE COMPRA', 'OPCIONES DE COMPRA'),
		T_TIPO_DATA('21', 'CONTROL DEL AREA', 'CONTROL DEL AREA'),
		T_TIPO_DATA('22', 'ACTAS DE DESOCUPACION', 'ACTAS DE DESOCUPACION'),
		T_TIPO_DATA('23', 'RECLAMACION ARRDTOS-OCUPAC', 'RECLAMACION ARRDTOS-OCUPAC'),
		T_TIPO_DATA('24', 'DEMANDAS ARRDMTOS-OCUPACIO', 'DEMANDAS ARRDMTOS-OCUPACIO'),
		T_TIPO_DATA('25', 'OTRAS DEMANDAS', 'OTRAS DEMANDAS'),
		T_TIPO_DATA('26', 'ENTRADAS EN DISPONIBILIDAD', 'ENTRADAS EN DISPONIBILIDAD'),
		T_TIPO_DATA('27', 'OTRAS SITUACIONES EN REVISION', 'OTRAS SITUACIONES EN REVISION'),
		T_TIPO_DATA('28', 'ARRDTOS-OCUPACIONES ADMON.', 'ARRDTOS-OCUPACIONES ADMON.'),
		T_TIPO_DATA('29', 'NO IDENTIFICADOS', 'NO IDENTIFICADOS'),
		T_TIPO_DATA('30', 'ARRDMTOS COBRANDO RENTAS', 'ARRDMTOS COBRANDO RENTAS'),
		T_TIPO_DATA('31', 'LIMITACIONES USO Y FISICAS', 'LIMITACIONES USO Y FISICAS'),
		T_TIPO_DATA('32', 'LIMITACIONES USO Y FISICAS', 'LIMITACIONES USO Y FISICAS'),
		T_TIPO_DATA('33', 'LIMITACIONES JURID. / URB.', 'LIMITACIONES JURID. / URB.'),
		T_TIPO_DATA('34', 'LIMITACIONES JURIDICAS', 'LIMITACIONES JURIDICAS'),
		T_TIPO_DATA('35', 'SAREB-RETIRADA-OBRA CURSO', 'SAREB-RETIRADA-OBRA CURSO'),
		T_TIPO_DATA('36', 'LIMITACIONES DE CARGAS', 'LIMITACIONES DE CARGAS'),
		T_TIPO_DATA('37', 'P.N.P. POSESION VALIDA', 'P.N.P. POSESION VALIDA'),
		T_TIPO_DATA('38', 'OTRAS LIMITACIONES', 'OTRAS LIMITACIONES'),
		T_TIPO_DATA('39', 'COMERCIALIZABLE LIBRE', 'COMERCIALIZABLE LIBRE'),
		T_TIPO_DATA('40', 'ARRDMTOS PDTES POSES 0625', 'ARRDMTOS PDTES POSES 0625'),
		T_TIPO_DATA('41', 'OTROS CONDICIONANTES', 'OTROS CONDICIONANTES'),
		T_TIPO_DATA('42', 'VPO. GESTION PREVIA', 'VPO. GESTION PREVIA'),
		T_TIPO_DATA('43', 'SINGULARES NO COMERCIALIZ.', 'SINGULARES NO COMERCIALIZ.'),
		T_TIPO_DATA('44', 'PROPUESTA BAJA DE CARTERA', 'PROPUESTA BAJA DE CARTERA'),
		T_TIPO_DATA('45', 'CONTROL DPTO. COMERCIAL', 'CONTROL DPTO. COMERCIAL'),
		T_TIPO_DATA('46', 'OCUPADOS', 'OCUPADOS'),
		T_TIPO_DATA('47', 'OBRA NUEVA DE CAJAMADRID', 'OBRA NUEVA DE CAJAMADRID'),
		T_TIPO_DATA('48', 'OBRA NUEVA DE INFODIRECCION', 'OBRA NUEVA DE INFODIRECCION'),
		T_TIPO_DATA('49', 'SUBASTAS 625', 'SUBASTAS 625'),
		T_TIPO_DATA('50', 'ARRENDAMIENTOS COMPROMETIDOS', 'ARRENDAMIENTOS COMPROMETIDOS'),
		T_TIPO_DATA('51', 'ARRENDAMIENTOS SIP TRANSIT', 'ARRENDAMIENTOS SIP TRANSIT'),
		T_TIPO_DATA('52', 'PENDIENTE ESCRITURA SUBSANACION SAREB', 'PENDIENTE ESCRITURA SUBSANACION SAREB'),
		T_TIPO_DATA('53', 'VENTA DE CARTERAS', 'VENTA DE CARTERAS'),
		T_TIPO_DATA('54', 'INMUEBLES EN ARRENDAMIENTO SIN OPCION DE COMPRA', 'INMUEBLES EN ARRENDAMIENTO SIN OPCION DE COMPRA'),
		T_TIPO_DATA('55', 'INMUEBLES EN ARRENDAMIENTO CON OPCION DE COMPRA', 'INMUEBLES EN ARRENDAMIENTO CON OPCION DE COMPRA'),
		T_TIPO_DATA('56', 'ARR.COBRANDO RENTAS INVERSION CON OPCION COMPRA', 'ARR.COBRANDO RENTAS INVERSION CON OPCION COMPRA'),
		T_TIPO_DATA('57', 'ARR. COBRANDO RENTAS INVERSION SIN OPCION COMPRA', 'ARR. COBRANDO RENTAS INVERSION SIN OPCION COMPRA'),
		T_TIPO_DATA('58', 'TAPIADOS', 'TAPIADOS'),
		T_TIPO_DATA('59', 'ALQUILADOS - FONDO SOCIAL', 'ALQUILADOS - FONDO SOCIAL'),
		T_TIPO_DATA('60', 'NO EFECTUADO', 'NO EFECTUADO'),
		T_TIPO_DATA('61', 'EN ALQUILER - FONDO SOCIAL', 'EN ALQUILER - FONDO SOCIAL'),
		T_TIPO_DATA('62', 'ARRENDAMIENTOS LEASING', 'ARRENDAMIENTOS LEASING'),
		T_TIPO_DATA('63', 'NO COMERC. PTE. PROPUESTA', 'NO COMERC. PTE. PROPUESTA')
		); 
    V_TMP_TIPO_DATA T_TIPO_DATA;
    
BEGIN	
	
	DBMS_OUTPUT.PUT_LINE('[INICIO] ');

	 
    -- LOOP para insertar los valores en DD_MNC_MOT_NOCOMERCIALIZACION -----------------------------------------------------------------
    DBMS_OUTPUT.PUT_LINE('[INFO]: INSERCION EN DD_MNC_MOT_NOCOMERCIALIZACION] ');
    FOR I IN V_TIPO_DATA.FIRST .. V_TIPO_DATA.LAST
      LOOP
      
        V_TMP_TIPO_DATA := V_TIPO_DATA(I);
    
        --Comprobamos el dato a insertar
        V_SQL := 'SELECT COUNT(1) FROM '||V_ESQUEMA||'.DD_MNC_MOT_NOCOMERCIALIZACION WHERE DD_MNC_CODIGO = '''||TRIM(V_TMP_TIPO_DATA(1))||'''';
        EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS;
        
        --Si existe lo modificamos
        IF V_NUM_TABLAS > 0 THEN				
          
          DBMS_OUTPUT.PUT_LINE('[INFO]: MODIFICAMOS EL REGISTRO '''|| TRIM(V_TMP_TIPO_DATA(1)) ||'''');
       	  V_MSQL := 'UPDATE '|| V_ESQUEMA ||'.DD_MNC_MOTIVO_COMERCIALIZACION '||
                    'SET DD_MNC_DESCRIPCION = '''||TRIM(V_TMP_TIPO_DATA(2))||''''|| 
					', DD_MNC_DESCRIPCION_LARGA = '''||TRIM(V_TMP_TIPO_DATA(3))||''''||
					', USUARIOMODIFICAR = ''DML'' , FECHAMODIFICAR = SYSDATE '||
					'WHERE DD_MNC_CODIGO = '''||TRIM(V_TMP_TIPO_DATA(1))||'''';
          EXECUTE IMMEDIATE V_MSQL;
          DBMS_OUTPUT.PUT_LINE('[INFO]: REGISTRO MODIFICADO CORRECTAMENTE');
          
       --Si no existe, lo insertamos   
       ELSE
       
          DBMS_OUTPUT.PUT_LINE('[INFO]: INSERTAMOS EL REGISTRO '''|| TRIM(V_TMP_TIPO_DATA(1)) ||'''');   
          V_MSQL := 'SELECT '|| V_ESQUEMA ||'.S_DD_MNC_MOT_NOCOMERCIALIZACI.NEXTVAL FROM DUAL';
          EXECUTE IMMEDIATE V_MSQL INTO V_ID;	
          V_MSQL := 'INSERT INTO '|| V_ESQUEMA ||'.DD_MNC_MOT_NOCOMERCIALIZACION (' ||
                      'DD_MNC_ID, DD_MNC_CODIGO, DD_MNC_DESCRIPCION, DD_MNC_DESCRIPCION_LARGA, VERSION, USUARIOCREAR, FECHACREAR, BORRADO) ' ||
                      'SELECT '|| V_ID || ','''||V_TMP_TIPO_DATA(1)||''','''||TRIM(V_TMP_TIPO_DATA(2))||''','''||TRIM(V_TMP_TIPO_DATA(3))||''', 0, ''DML'',SYSDATE,0 FROM DUAL';
          EXECUTE IMMEDIATE V_MSQL;
          DBMS_OUTPUT.PUT_LINE('[INFO]: REGISTRO INSERTADO CORRECTAMENTE');
        
       END IF;
      END LOOP;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('[FIN]: DICCIONARIO DD_MNC_MOT_NOCOMERCIALIZACION ACTUALIZADO CORRECTAMENTE ');
   

EXCEPTION
     WHEN OTHERS THEN
          err_num := SQLCODE;
          err_msg := SQLERRM;

          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecuci칩n:'||TO_CHAR(err_num));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(err_msg);

          ROLLBACK;
          RAISE;          

END;

/

EXIT



   