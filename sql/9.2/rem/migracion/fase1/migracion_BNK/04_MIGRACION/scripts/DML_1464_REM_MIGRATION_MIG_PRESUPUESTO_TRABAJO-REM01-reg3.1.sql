--/*
--#########################################
--## AUTOR=CLV
--## FECHA_CREACION=20160803
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.1
--## INCIDENCIA_LINK=HREOS-719
--## PRODUCTO=NO
--## 
--## Finalidad: Proceso de migración 'MIG_APT_PRESUPUESTO_TRABAJO' -> 'ACT_PRT_PRESUPUESTO_TRABAJO'
--##			
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;


DECLARE

TABLE_COUNT NUMBER(10,0) := 0;
TABLE_COUNT_2 NUMBER(10,0) := 0;
V_ESQUEMA VARCHAR2(10 CHAR) := 'REM01';
V_ESQUEMA_MASTER VARCHAR2(15 CHAR) := 'REMMASTER';
V_TABLA VARCHAR2(40 CHAR) := 'ACT_PRT_PRESUPUESTO_TRABAJO';
V_TABLA_MIG VARCHAR2(40 CHAR) := 'MIG_APT_PRESUPUESTO_TRABAJ_BNK';
V_SENTENCIA VARCHAR2(1600 CHAR);
V_REG_MIG NUMBER(10,0) := 0;
V_REG_INSERTADOS NUMBER(10,0) := 0;
V_REJECTS NUMBER(10,0) := 0;
V_COD NUMBER(10,0) := 0;
V_OBSERVACIONES VARCHAR2(3000 CHAR) := '';

BEGIN

  DBMS_OUTPUT.PUT_LINE('[INFO] COMIENZA EL PROCESO DE MIGRACION SOBRE LA TABLA '||V_ESQUEMA||'.'||V_TABLA||'.');
  
  DBMS_OUTPUT.PUT_LINE('[INFO] ['||V_TABLA||'] COMPROBANDO PROVEEDORES...');
  
  V_SENTENCIA := '
  SELECT COUNT(PVE_DOCIDENTIF) 
  FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG 
  WHERE NOT EXISTS (
    SELECT 1 FROM '||V_ESQUEMA||'.ACT_PVE_PROVEEDOR ACT WHERE MIG.PVE_DOCIDENTIF = ACT.PVE_DOCIDENTIF
  )
  '
  ;
  EXECUTE IMMEDIATE V_SENTENCIA INTO TABLE_COUNT;
  
  IF TABLE_COUNT = 0 THEN
  
    DBMS_OUTPUT.PUT_LINE('[INFO] TODOS LOS PROVEEDORES EXISTEN EN ACT_PVE_PROVEEDOR');
    
  ELSE
  
    DBMS_OUTPUT.PUT_LINE('[INFO] SE HAN INFORMADO '||TABLE_COUNT||' PROVEEDORES INEXISTENTES EN ACT_PVE_PROVEEDOR. SE DERIVARÁN A LA TABLA '||V_ESQUEMA||'.PVE_NOT_EXISTS.');
    
    --BORRAMOS LOS REGISTROS QUE HAYA EN NOT_EXISTS REFERENTES A ESTA INTERFAZ
    
    EXECUTE IMMEDIATE '
    DELETE FROM '||V_ESQUEMA||'.PVE_NOT_EXISTS
    WHERE TABLA_MIG = '''||V_TABLA_MIG||'''
    '
    ;
    
    COMMIT;
  
    EXECUTE IMMEDIATE '
    INSERT INTO '||V_ESQUEMA||'.PVE_NOT_EXISTS (
    PVE_DOCIDENTIF,
    TABLA_MIG,
    FECHA_COMPROBACION
    )
    WITH PVE_DOCIDENTIF AS (
    SELECT DISTINCT
    MIG.PVE_DOCIDENTIF 
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG 
    WHERE NOT EXISTS (
      SELECT 1 FROM '||V_ESQUEMA||'.ACT_PVE_PROVEEDOR ACT WHERE MIG.PVE_DOCIDENTIF = ACT.PVE_DOCIDENTIF
    )
    )
    SELECT
    MIG.PVE_DOCIDENTIF                              							 PVE_DOCIDENTIF,
    '''||V_TABLA_MIG||'''                                                        TABLA_MIG,
    SYSDATE                                                                      FECHA_COMPROBACION
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG  
    INNER JOIN PVE_DOCIDENTIF
    ON PVE_DOCIDENTIF.PVE_DOCIDENTIF = MIG.PVE_DOCIDENTIF
    '
    ;
    
    COMMIT;
  
    
    /*
    EXECUTE IMMEDIATE '
    DELETE 
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG
    WHERE EXISTS (
      SELECT 1 FROM PVE_NOT_EXISTS WHERE MIG.PVE_DOCIDENTIF = PVE_DOCIDENTIF
    )
    '
    ;
    
    COMMIT;
	*/
	
  END IF;
  
	DBMS_OUTPUT.PUT_LINE('[INFO] ['||V_TABLA||'] COMPROBANDO TRABAJOS...');
  
	V_SENTENCIA := '
	SELECT COUNT(TBJ_NUM_TRABAJO) 
	FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG 
	WHERE NOT EXISTS (
		SELECT 1 FROM '||V_ESQUEMA||'.ACT_TBJ_TRABAJO TBJ WHERE MIG.TBJ_NUM_TRABAJO = TBJ.TBJ_NUM_TRABAJO
	)
	'
	;
	EXECUTE IMMEDIATE V_SENTENCIA INTO TABLE_COUNT_2;
  
	IF TABLE_COUNT_2 = 0 THEN
  
    DBMS_OUTPUT.PUT_LINE('[INFO] TODOS LOS TRABAJOS EXISTEN EN ACT_TBJ_TRABAJO');
    
	ELSE
  
	DBMS_OUTPUT.PUT_LINE('[INFO] SE HAN INFORMADO '||TABLE_COUNT_2||' TRABAJOS INEXISTENTES EN ACT_TBJ_TRABAJO. SE DERIVARÁN A LA TABLA '||V_ESQUEMA||'.TBJ_NOT_EXISTS.');
    
    --BORRAMOS LOS REGISTROS QUE HAYA EN NOT_EXISTS REFERENTES A ESTA INTERFAZ
    
    EXECUTE IMMEDIATE '
    DELETE FROM '||V_ESQUEMA||'.TBJ_NOT_EXISTS
    WHERE TABLA_MIG = '''||V_TABLA_MIG||'''
    '
    ;
    
    COMMIT;
  
    EXECUTE IMMEDIATE '
    INSERT INTO '||V_ESQUEMA||'.TBJ_NOT_EXISTS (
    TBJ_NUM_TRABAJO,
    TABLA_MIG,
    FECHA_COMPROBACION
    )
    WITH TBJ_NUM_TRABAJO AS (
    SELECT DISTINCT
    MIG.TBJ_NUM_TRABAJO 
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG 
    WHERE NOT EXISTS (
      SELECT 1 FROM '||V_ESQUEMA||'.ACT_TBJ_TRABAJO TBJ WHERE MIG.TBJ_NUM_TRABAJO = TBJ.TBJ_NUM_TRABAJO
    )
    )
    SELECT
    MIG.TBJ_NUM_TRABAJO                              							 TBJ_NUM_TRABAJO,
    '''||V_TABLA_MIG||'''                                                        TABLA_MIG,
    SYSDATE                                                                      FECHA_COMPROBACION
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG  
    INNER JOIN TBJ_NUM_TRABAJO
    ON TBJ_NUM_TRABAJO.TBJ_NUM_TRABAJO = MIG.TBJ_NUM_TRABAJO
    '
    ;
    
    COMMIT;
    
    /*
    EXECUTE IMMEDIATE '
    DELETE 
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG
    WHERE EXISTS (
      SELECT 1 FROM TBJ_NOT_EXISTS WHERE MIG.TBJ_NUM_TRABAJO = TBJ_NUM_TRABAJO
    )
    '
    ;
    
    COMMIT;
*/
  END IF;
  
  EXECUTE IMMEDIATE ('
  INSERT INTO '||V_ESQUEMA||'.'||V_TABLA||' (
	PRT_ID,
	TBJ_ID,
	PVE_ID,
	DD_ESP_ID,
	PRT_IMPORTE,
	PRT_FECHA,
	PRT_REPARTIR_PROPORCIONAL,
	PRT_COMENTARIOS,
	VERSION,
	USUARIOCREAR,
	FECHACREAR,
	BORRADO
	)
  WITH PERIMETRO AS (
    SELECT 
    DISTINCT
    MIGAPT.PVE_DOCIDENTIF,
    PVE.PVE_ID,
    MIGAPT.TBJ_NUM_TRABAJO,
    ATT.TBJ_ID,
    MIGAPT.PRT_IMPORTE,
    MIGAPT.PRT_FECHA,
    MIGAPT.ESTADO_PRESUPUESTO,
    MIGAPT.PRT_REPARTIR_PROPORCIONAL,
    MIGAPT.PRT_COMENTARIOS
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIGAPT
    LEFT JOIN '||V_ESQUEMA||'.ACT_TBJ_TRABAJO ATT
      ON ATT.TBJ_NUM_TRABAJO = MIGAPT.TBJ_NUM_TRABAJO	
    LEFT JOIN '||V_ESQUEMA||'.ACT_PVE_PROVEEDOR PVE
      ON MIGAPT.PVE_DOCIDENTIF = PVE.PVE_DOCIDENTIF
    WHERE PVE.PVE_DOCIDENTIF IS NOT NULL
    AND ATT.TBJ_NUM_TRABAJO IS NOT NULL
  )
	SELECT
	S_ACT_PRT_PRESUPUESTO_TRABAJO.NEXTVAL	PRT_ID,
	MIG.TBJ_ID     		TBJ_ID,	
	MIG.PVE_ID     			PVE_ID,
	(SELECT DD_ESP_ID
	FROM '||V_ESQUEMA||'.DD_ESP_ESTADO_PRESUPUESTO 
	WHERE DD_ESP_CODIGO = MIG.ESTADO_PRESUPUESTO)			DD_ESP_ID,
	MIG.PRT_IMPORTE											PRT_IMPORTE,
	MIG.PRT_FECHA											PRT_FECHA,
	MIG.PRT_REPARTIR_PROPORCIONAL							PRT_REPARTIR_PROPORCIONAL,
	MIG.PRT_COMENTARIOS										PRT_COMENTARIOS,
	''0''                                                 	VERSION,
	''MIGRAREM01BNK''                                               	USUARIOCREAR,
	SYSDATE                                               	FECHACREAR,
	0                                                     	BORRADO
	FROM PERIMETRO MIG
  ')
  ;
	
  
  DBMS_OUTPUT.PUT_LINE('[INFO] - '||to_char(sysdate,'HH24:MI:SS')||'  '||V_ESQUEMA||'.'||V_TABLA||' cargada. '||SQL%ROWCOUNT||' Filas.');
  
  COMMIT;
  
  EXECUTE IMMEDIATE('ANALYZE TABLE '||V_ESQUEMA||'.'||V_TABLA||' COMPUTE STATISTICS');
  
  DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_TABLA||' ANALIZADA.');
  
  -- INFORMAMOS A LA TABLA INFO
  
  -- Registros MIG
  V_SENTENCIA := '
	SELECT COUNT(PVE_DOCIDENTIF) FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||'
  '
  ;
  
  EXECUTE IMMEDIATE V_SENTENCIA INTO V_REG_MIG;
  
  -- Registros insertados en REM
  V_SENTENCIA := '
	SELECT COUNT(TBJ_ID) FROM '||V_ESQUEMA||'.'||V_TABLA||' WHERE USUARIOCREAR = ''MIGRAREM01BNK''
  '
  ;
  
  EXECUTE IMMEDIATE V_SENTENCIA INTO V_REG_INSERTADOS;
  
  -- Total registros rechazados
  V_REJECTS := V_REG_MIG - V_REG_INSERTADOS;	
  
  -- Diccionarios rechazados
  V_SENTENCIA := '
  SELECT COUNT(1) FROM '||V_ESQUEMA||'.DD_COD_NOT_EXISTS 
	WHERE DICCIONARIO IN (''DD_ESP_ESTADO_PRESUPUESTO'')
	AND FICHERO_ORIGEN = ''PRESUPUESTO_TRABAJO.dat''
	AND CAMPO_ORIGEN IN (''ESTADO_PRESUPUESTO'')
  '
  ;
  
  EXECUTE IMMEDIATE V_SENTENCIA INTO V_COD;
  
  -- Observaciones
  IF V_REJECTS != 0 THEN
   V_OBSERVACIONES := 'Del total de registros rechazados, '||TABLE_COUNT||' han sido por PROVEEDORES inexistentes y '||TABLE_COUNT_2||' por TRABAJOS inexistentes.';
  END IF; 
  
  EXECUTE IMMEDIATE ('
	INSERT INTO '||V_ESQUEMA||'.MIG_INFO_TABLE (
	TABLA_MIG,
	TABLA_REM,
	REGISTROS_TABLA_MIG,
	REGISTROS_INSERTADOS,
	REGISTROS_RECHAZADOS,
	DD_COD_INEXISTENTES,
	FECHA,
	OBSERVACIONES
	)
	SELECT
	'''||V_TABLA_MIG||''',
	'''||V_TABLA||''',
	'||V_REG_MIG||',
	'||V_REG_INSERTADOS||',
	'||V_REJECTS||',
	'||V_COD||',
	SYSDATE,
	'''||V_OBSERVACIONES||'''
	FROM DUAL
  ')
  ;
  
  COMMIT;
  
  
  EXCEPTION

    WHEN OTHERS THEN
        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion:'||TO_CHAR(SQLCODE));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------');
        DBMS_OUTPUT.put_line(SQLERRM);
        ROLLBACK;
        RAISE;
END;
/

EXIT;
