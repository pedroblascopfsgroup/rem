--/*
--#########################################
--## AUTOR=CLV
--## FECHA_CREACION=20160803
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.1
--## INCIDENCIA_LINK=HREOS-719
--## PRODUCTO=NO
--## 
--## Finalidad: Proceso de migración 'MIG_APR_PROVEEDORES' -> 'ACT_PVE_PROVEEDOR'
--##			
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;


DECLARE

TABLE_COUNT NUMBER(10,0) := 0;
V_ESQUEMA VARCHAR2(10 CHAR) := 'REM01';
V_ESQUEMA_MASTER VARCHAR2(15 CHAR) := 'REMMASTER';
V_TABLA VARCHAR2(40 CHAR) := 'ACT_PVE_PROVEEDOR';
V_TABLA_MIG VARCHAR2(40 CHAR) := 'MIG_APR_PROVEEDORES_BNK';
V_SENTENCIA VARCHAR2(2000 CHAR);
V_REG_MIG NUMBER(10,0) := 0;
V_REG_INSERTADOS NUMBER(10,0) := 0;
V_REJECTS NUMBER(10,0) := 0;
V_COD NUMBER(10,0) := 0;
V_OBSERVACIONES VARCHAR2(3000 CHAR) := '';

BEGIN

  DBMS_OUTPUT.PUT_LINE('[INFO] COMIENZA EL PROCESO DE MIGRACION SOBRE LA TABLA '||V_ESQUEMA||'.'||V_TABLA||'.');
  
	EXECUTE IMMEDIATE ('
	INSERT INTO '||V_ESQUEMA||'.'||V_TABLA||' (
	PVE_ID,
	DD_TPR_ID,
	PVE_COD_UVEM,
	PVE_NOMBRE,
	PVE_NOMBRE_COMERCIAL,
	DD_TDI_ID,
	PVE_DOCIDENTIF,
	DD_ZNG_ID,
	DD_PRV_ID,
	DD_LOC_ID,
	PVE_CP,
	PVE_DIRECCION,
	PVE_TELF1,
	PVE_TELF2,
	PVE_FAX,
	PVE_EMAIL,
	PVE_PAGINA_WEB,
	PVE_FRANQUICIA,
	PVE_IVA_CAJA,
	PVE_NUM_CUENTA,
	VERSION,
	USUARIOCREAR,
	FECHACREAR,
	BORRADO
	)
	WITH PVE_DOCIDENTIF AS (
		SELECT 
    DISTINCT 
    PVE_DOCIDENTIF,
    PVE_COD_UVEM,
    TIPO_PROVEEDOR,
    PVE_NOMBRE,
    PVE_NOMBRE_COMERCIAL,
    TIPO_DOCUMENTO,
    ZONA_GEOGRAFICA,
    PVE_PROVINCIA,
    PVE_LOCALIDAD,
    PVE_CP,
    PVE_DIRECCION,
    PVE_TELF1,
    PVE_TELF2,
    PVE_FAX,
    PVE_EMAIL,
    PVE_PAGINA_WEB,
    PVE_FRANQUICIA,
    PVE_IVA_CAJA,
    PVE_NUM_CUENTA
		FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG
		WHERE NOT EXISTS(
		  SELECT 1 
		  FROM '||V_ESQUEMA||'.'||V_TABLA||' PRV
		  WHERE PRV.PVE_DOCIDENTIF = MIG.PVE_DOCIDENTIF
		  AND PRV.DD_TPR_ID = (SELECT DD_TPR_ID FROM '||V_ESQUEMA||'.DD_TPR_TIPO_PROVEEDOR WHERE DD_TPR_CODIGO = MIG.TIPO_PROVEEDOR)
			)
	)
	SELECT
	'||V_ESQUEMA||'.S_ACT_PVE_PROVEEDOR.NEXTVAL				PVE_ID,
	(SELECT DD_TPR_ID
	FROM '||V_ESQUEMA||'.DD_TPR_TIPO_PROVEEDOR 
	WHERE DD_TPR_CODIGO = MIG.TIPO_PROVEEDOR)	     		DD_TPR_ID,
	MIG.PVE_COD_UVEM										              PVE_COD_UVEM,
	MIG.PVE_NOMBRE											              PVE_NOMBRE,
	MIG.PVE_NOMBRE_COMERCIAL								          PVE_NOMBRE_COMERCIAL,
	(SELECT DD_TDI_ID
	FROM '||V_ESQUEMA||'.DD_TDI_TIPO_DOCUMENTO_ID 
	WHERE DD_TDI_CODIGO = MIG.TIPO_DOCUMENTO)				  DD_TDI_ID,
	MIG.PVE_DOCIDENTIF										            PVE_DOCIDENTIF,
	(SELECT DD_ZNG_ID
	FROM '||V_ESQUEMA||'.DD_ZNG_ZONA_GEOGRAFICA 
	WHERE DD_ZNG_CODIGO = MIG.ZONA_GEOGRAFICA)				DD_ZNG_ID,
	(SELECT DD_PRV_ID
	FROM '||V_ESQUEMA_MASTER||'.DD_PRV_PROVINCIA 
	WHERE DD_PRV_CODIGO = MIG.PVE_PROVINCIA)				  DD_PRV_ID,
	(SELECT DD_LOC_ID
	FROM '||V_ESQUEMA_MASTER||'.DD_LOC_LOCALIDAD 
	WHERE DD_LOC_CODIGO = MIG.PVE_LOCALIDAD)				  DD_LOC_ID,
	MIG.PVE_CP		                                    PVE_CP,
	MIG.PVE_DIRECCION                                 PVE_DIRECCION,
	MIG.PVE_TELF1                                     PVE_TELF1,
	MIG.PVE_TELF2                                     PVE_TELF2,
	MIG.PVE_FAX                           					  PVE_FAX,
	MIG.PVE_EMAIL             								        PVE_EMAIL,
	MIG.PVE_PAGINA_WEB		                            PVE_PAGINA_WEB,
	MIG.PVE_FRANQUICIA			                          PVE_FRANQUICIA,
	MIG.PVE_IVA_CAJA										              PVE_IVA_CAJA,
	MIG.PVE_NUM_CUENTA										            PVE_NUM_CUENTA,
	''0'' 													                  VERSION,
	''MIGRAREM01BNK''													                  USUARIOCREAR,
  SYSDATE                                           FECHACREAR,
	0                                                 BORRADO
	FROM PVE_DOCIDENTIF MIG
	')
	;

	
  DBMS_OUTPUT.PUT_LINE('[INFO] - '||to_char(sysdate,'HH24:MI:SS')||'  '||V_ESQUEMA||'.'||V_TABLA||' cargada. '||SQL%ROWCOUNT||' Filas.');
  
  COMMIT;
  
  EXECUTE IMMEDIATE('ANALYZE TABLE '||V_ESQUEMA||'.'||V_TABLA||' COMPUTE STATISTICS');
  
  DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_TABLA||' ANALIZADA.');
  
  -- INFORMAMOS A LA TABLA INFO
  
  -- Registros MIG
  V_SENTENCIA := '
	SELECT COUNT(PVE_DOCIDENTIF) FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||'
  '
  ;
  
  EXECUTE IMMEDIATE V_SENTENCIA INTO V_REG_MIG;
  
  -- Registros insertados en REM
  V_SENTENCIA := '
	SELECT COUNT(PVE_ID) FROM '||V_ESQUEMA||'.'||V_TABLA||'
	WHERE PVE_DOCIDENTIF IS NOT NULL
  AND USUARIOCREAR = ''MIGRAREM01BNK''
  '
  ;
  
  EXECUTE IMMEDIATE V_SENTENCIA INTO V_REG_INSERTADOS;
  
  -- Total registros rechazados
  V_REJECTS := V_REG_MIG - V_REG_INSERTADOS;	
  
  -- Diccionarios rechazados
  V_SENTENCIA := '
  SELECT COUNT(1) FROM '||V_ESQUEMA||'.DD_COD_NOT_EXISTS 
	WHERE DICCIONARIO IN (''DD_TPR_TIPO_PROVEEDOR'',''DD_TDI_TIPO_DOCUMENTO_ID'',''DD_ZNG_ZONA_GEOGRAFICA'',''DD_PRV_PROVINCIA'',''DD_LOC_LOCALIDAD'')
	AND FICHERO_ORIGEN = ''PROVEEDORES.dat''
	AND CAMPO_ORIGEN IN (''TIPO_PROVEEDOR'',''TIPO_DOCUMENTO'',''ZONA_GEOGRAFICA'',''PVE_PROVINCIA'',''PVE_LOCALIDAD'')
  '
  ;
  
  EXECUTE IMMEDIATE V_SENTENCIA INTO V_COD;
  
  -- Observaciones
  IF V_REJECTS != 0 THEN
   V_OBSERVACIONES := 'Se han rechazado '||V_REJECTS||' PROVEEDORES, comprobar integridad de los campos.';
  END IF;
  
  EXECUTE IMMEDIATE ('
	INSERT INTO '||V_ESQUEMA||'.MIG_INFO_TABLE (
	TABLA_MIG,
	TABLA_REM,
	REGISTROS_TABLA_MIG,
	REGISTROS_INSERTADOS,
	REGISTROS_RECHAZADOS,
	DD_COD_INEXISTENTES,
	FECHA,
	OBSERVACIONES
	)
	SELECT
	'''||V_TABLA_MIG||''',
	'''||V_TABLA||''',
	'||V_REG_MIG||',
	'||V_REG_INSERTADOS||',
	'||V_REJECTS||',
	'||V_COD||',
	SYSDATE,
	'''||V_OBSERVACIONES||'''
	FROM DUAL
  ')
  ;
  
  COMMIT;
  
  
  EXCEPTION

    WHEN OTHERS THEN
        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion:'||TO_CHAR(SQLCODE));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------');
        DBMS_OUTPUT.put_line(SQLERRM);
        ROLLBACK;
        RAISE;
END;
/

EXIT;

