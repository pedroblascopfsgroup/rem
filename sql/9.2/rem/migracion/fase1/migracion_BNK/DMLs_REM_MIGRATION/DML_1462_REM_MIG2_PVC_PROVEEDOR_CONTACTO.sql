--/*
--#########################################
--## AUTOR=Pablo Meseguer
--## FECHA_CREACION=20161010
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.1
--## INCIDENCIA_LINK=HREOS-855
--## PRODUCTO=NO
--## 
--## Finalidad: Proceso de migración MIG2_PVC_PROVEEDOR_CONTACTO -> ACT_PVC_PROVEEDOR_CONTACTO
--##			
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;


DECLARE

TABLE_COUNT NUMBER(10,0) := 0;
TABLE_COUNT_2 NUMBER(10,0) := 0;
V_ESQUEMA VARCHAR2(10 CHAR) := '#ESQUEMA#';
V_ESQUEMA_MASTER VARCHAR2(15 CHAR) := '#ESQUEMA_MASTER#';
V_TABLA VARCHAR2(40 CHAR) := 'ACT_PVC_PROVEEDOR_CONTACTO';
V_TABLA_MIG VARCHAR2(40 CHAR) := 'MIG2_PVC_PROVEEDOR_CONTACTO';
V_SENTENCIA VARCHAR2(32000 CHAR);
V_REG_MIG NUMBER(10,0) := 0;
V_REG_INSERTADOS NUMBER(10,0) := 0;
V_REJECTS NUMBER(10,0) := 0;
V_COD NUMBER(10,0) := 0;
V_OBSERVACIONES VARCHAR2(3000 CHAR) := '';

BEGIN
  
  --COMPROBACIONES PREVIAS - PROVEEDOR 
  DBMS_OUTPUT.PUT_LINE('[INFO] ['||V_TABLA||'] COMPROBANDO PROVEEDOR...');
  
  V_SENTENCIA := '
  SELECT COUNT(1) 
  FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG 
  WHERE NOT EXISTS (
    SELECT 1 FROM '||V_ESQUEMA||'.ACT_PVE_PROVEEDOR PVE WHERE PVE.PVE_COD_UVEM = MIG.PVE_COD_UVEM
  )
  '
  ;
  
  EXECUTE IMMEDIATE V_SENTENCIA INTO TABLE_COUNT;
  
  IF TABLE_COUNT = 0 THEN
  
    DBMS_OUTPUT.PUT_LINE('[INFO] TODOS LOS PROVEEDORES EXISTEN EN ACT_PVE_PROVEEDOR');
    
  ELSE
  
    DBMS_OUTPUT.PUT_LINE('[INFO] SE HAN INFORMADO '||TABLE_COUNT||' PROVEEDOR INEXISTENTES EN ACT_PVE_PROVEEDOR. SE DERIVARÁN A LA TABLA '||V_ESQUEMA||'.MIG2_PVE_NOT_EXISTS.');
    
    --BORRAMOS LOS REGISTROS QUE HAYA EN NOT_EXISTS REFERENTES A ESTA INTERFAZ
    
    EXECUTE IMMEDIATE '
    DELETE FROM '||V_ESQUEMA||'.MIG2_PVE_NOT_EXISTS
    WHERE TABLA_MIG = '''||V_TABLA_MIG||'''
    '
    ;
    
    COMMIT;
  
    EXECUTE IMMEDIATE '
    INSERT INTO '||V_ESQUEMA||'.MIG2_PVE_NOT_EXISTS (
    PVE_COD_UVEM,
    TABLA_MIG,
    FECHA_COMPROBACION
    )
    WITH PVE_COD_UVEM AS (
		SELECT
		MIG.PVE_COD_UVEM 
		FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG 
		WHERE NOT EXISTS (
		  SELECT 1 FROM '||V_ESQUEMA||'.ACT_PVE_PROVEEDOR PVE WHERE MIG.PVE_COD_UVEM = PVE.PVE_COD_UVEM
		)
    )
    SELECT DISTINCT
    MIG.PVE_COD_UVEM                              							PVE_COD_UVEM,
    '''||V_TABLA_MIG||'''                                                   TABLA_MIG,
    SYSDATE                                                                 FECHA_COMPROBACION
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG  
    INNER JOIN PVE_COD_UVEM
    ON PVE_COD_UVEM.PVE_COD_UVEM = MIG.PVE_COD_UVEM
    '
    ;
    
    COMMIT;

  END IF;

	  --Inicio del proceso de volcado sobre ACT_PVC_PROVEEDOR_CONTACTO
      DBMS_OUTPUT.PUT_LINE('[INFO] COMIENZA EL PROCESO DE MIGRACION SOBRE LA TABLA '||V_ESQUEMA||'.'||V_TABLA||'.');
      
      V_SENTENCIA := '
        MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' PVC
        USING ( SELECT
				PVE.PVE_ID,
				PRV.DD_PRV_ID,
				USU.USU_ID,
				TDI.DD_TDI_ID,
				MIG.PVC_DOCUMENTO,
				MIG.PVC_NOMBRE,
				MIG.PVC_APELLIDO1,
				MIG.PVC_APELLIDO2,
				MIG.PVC_CP,
				MIG.PVC_DIRECCION,
				MIG.PVC_TELF1,
				MIG.PVC_TELF2,
				MIG.PVC_FAX,
				MIG.PVC_EMAIL,
				MIG.PVC_IND_PRINCIPAL,
				CPC.DD_CPC_ID,
				MIG.PVC_CARGO,
				MIG.PVC_FECHA_ALTA,
				MIG.PVC_FECHA_BAJA,
				MIG.PVC_OBSERVACIONES,
				PRD.PRD_ID	
				FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG
				INNER JOIN '||V_ESQUEMA||'.ACT_PVE_PROVEEDOR PVE
					ON PVE.PVE_COD_UVEM = MIG.PVE_COD_UVEM
				LEFT JOIN '||V_ESQUEMA_MASTER||'.DD_PRV_PROVINCIA PRV
					ON PRV.DD_PRV_CODIGO = MIG.PVC_PROVINCIA
				LEFT JOIN '||V_ESQUEMA_MASTER||'.USU_USUARIOS USU
					ON USU.USU_USERNAME = MIG.PVC_COD_USUARIO 					
				LEFT JOIN '||V_ESQUEMA||'.DD_TDI_TIPO_DOCUMENTO_ID TDI
					ON TDI.DD_TDI_CODIGO = MIG.PVC_TIPO_DOCUMENTO
				LEFT JOIN '||V_ESQUEMA||'.DD_CPC_CARGO_PROV_CONTACTO CPC
					ON CPC.DD_CPC_CODIGO = MIG.PVC_COD_CARGO
				LEFT JOIN '||V_ESQUEMA||'.ACT_PRD_PROVEEDOR_DIRECCION PRD
					ON PRD.PVE_COD_DIRECC_UVEM = MIG.PVC_COD_DIRECCION
			  ) AUX
		ON (PVC.PVE_ID = AUX.PVE_ID)
		WHEN MATCHED THEN UPDATE SET
		  PRD_ID = AUX.PRD_ID
		  ,PVC_PRINCIPAL = AUX.PVC_IND_PRINCIPAL
		  ,DD_CPC_ID = AUX.DD_CPC_ID
		  ,PVC_CARGO = AUX.PVC_CARGO
		  ,PVC_FECHA_ALTA = AUX.PVC_FECHA_ALTA
		  ,PVC_FECHA_BAJA = AUX.PVC_FECHA_BAJA
		  ,PVC_OBSERVACIONES = AUX.PVC_OBSERVACIONES
          ,PVC.USUARIOMODIFICAR = ''MIG2''
          ,PVC.FECHAMODIFICAR = SYSDATE
      WHEN NOT MATCHED THEN INSERT (
			PVC_ID
			,PVC.PVE_ID
			,PVC.DD_PRV_ID
			,PVC.USU_ID
			,PVC.DD_TDI_ID
			,PVC.PVC_DOCIDENTIF
			,PVC.PVC_NOMBRE
			,PVC.PVC_APELLID01
			,PVC.PVC_APELLID02
			,PVC.PVC_CP
			,PVC.PVC_DIRECCION
			,PVC.PVC_TELF1
			,PVC.PVC_TELF2
			,PVC.PVC_FAX
			,PVC.PVC_EMAIL	
			,PVC.PVC_PRINCIPAL
			,PVC.DD_CPC_ID
			,PVC.PVC_CARGO
			,PVC.PVC_FECHA_ALTA
			,PVC.PVC_FECHA_BAJA
			,PVC.PVC_OBSERVACIONES
			,PVC.VERSION
			,PVC.USUARIOCREAR
			,PVC.FECHACREAR
			,PVC.BORRADO)
      VALUES (
				'||V_ESQUEMA||'.S_'||V_TABLA||'.NEXTVAL,
				AUX.PVE_ID,
				AUX.DD_PRV_ID,
				AUX.USU_ID,
				AUX.DD_TDI_ID,
				AUX.PVC_DOCUMENTO,
				AUX.PVC_NOMBRE,
				AUX.PVC_APELLIDO1,
				AUX.PVC_APELLIDO2,
				AUX.PVC_CP,
				AUX.PVC_DIRECCION,
				AUX.PVC_TELF1,
				AUX.PVC_TELF2,
				AUX.PVC_FAX,
				AUX.PVC_EMAIL,
				AUX.PVC_IND_PRINCIPAL,
				AUX.DD_CPC_ID,
				AUX.PVC_CARGO,
				AUX.PVC_FECHA_ALTA,
				AUX.PVC_FECHA_BAJA,
				AUX.PVC_OBSERVACIONES,
				''0'',
				''MIG2'',
          		SYSDATE,
          		0)
      '
      ;
      EXECUTE IMMEDIATE V_SENTENCIA	;
      
      DBMS_OUTPUT.PUT_LINE('[INFO] - '||to_char(sysdate,'HH24:MI:SS')||'  '||V_ESQUEMA||'.'||V_TABLA||' cargada. '||SQL%ROWCOUNT||' Filas.');
      
      COMMIT;
      
      EXECUTE IMMEDIATE('ANALYZE TABLE '||V_ESQUEMA||'.'||V_TABLA||' COMPUTE STATISTICS');
      
      DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_TABLA||' ANALIZADA.');
      
      -- INFORMAMOS A LA TABLA INFO
      
      -- Registros MIG
      V_SENTENCIA := 'SELECT COUNT(1) FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||'';  
      EXECUTE IMMEDIATE V_SENTENCIA INTO V_REG_MIG;
      
      -- Registros insertados en REM
      V_SENTENCIA := 'SELECT COUNT(1) FROM '||V_ESQUEMA||'.'||V_TABLA||' WHERE USUARIOMODIFICAR = ''MIG2'' OR USUARIOCREAR = ''MIG2''';  
      EXECUTE IMMEDIATE V_SENTENCIA INTO V_REG_INSERTADOS;
      
      -- Total registros rechazados
      V_REJECTS := V_REG_MIG - V_REG_INSERTADOS;	
      
      -- Observaciones
	  IF V_REJECTS != 0 THEN
	  
		IF TABLE_COUNT != 0 THEN
		
		  V_OBSERVACIONES := 'Del total de registros rechazados, '||TABLE_COUNT||' han sido por PROVEEDOR inexistentes. ';
		
		END IF;
      END IF;
        
      V_SENTENCIA := '
      INSERT INTO '||V_ESQUEMA||'.MIG_INFO_TABLE (
        TABLA_MIG,
        TABLA_REM,
        REGISTROS_TABLA_MIG,
        REGISTROS_INSERTADOS,
        REGISTROS_RECHAZADOS,
        DD_COD_INEXISTENTES,
        FECHA,
        OBSERVACIONES
      )
      SELECT
      '''||V_TABLA_MIG||''',
      '''||V_TABLA||''',
      '||V_REG_MIG||',
      '||V_REG_INSERTADOS||',
      '||V_REJECTS||',
      '||V_COD||',
      SYSDATE,
      '''||V_OBSERVACIONES||'''
      FROM DUAL
      '
      ;
      EXECUTE IMMEDIATE V_SENTENCIA;
      
      COMMIT;  

EXCEPTION
      WHEN OTHERS THEN
            DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion:'||TO_CHAR(SQLCODE));
            DBMS_OUTPUT.put_line('-----------------------------------------------------------');
            DBMS_OUTPUT.put_line(SQLERRM);
            ROLLBACK;
            RAISE;
END;

/

EXIT;
