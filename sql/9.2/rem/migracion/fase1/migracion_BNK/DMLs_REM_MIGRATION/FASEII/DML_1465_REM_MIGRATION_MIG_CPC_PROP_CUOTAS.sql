--/*
--#########################################
--## AUTOR=CLV
--## FECHA_CREACION=20160803
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.1
--## INCIDENCIA_LINK=HREOS-719
--## PRODUCTO=NO
--## 
--## Finalidad: Proceso de migración 'MIG_CPC_PROP_CUOTAS' -> 'ACT_CCP_CUOTA_COM_PROP'
--##			
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;


DECLARE

TABLE_COUNT NUMBER(10,0) := 0;
V_ESQUEMA VARCHAR2(10 CHAR) := '#ESQUEMA#';
V_ESQUEMA_MASTER VARCHAR2(15 CHAR) := '#ESQUEMA_MASTER#';
V_TABLA VARCHAR2(40 CHAR) := 'ACT_CCP_CUOTA_COM_PROP';
V_TABLA_MIG VARCHAR2(40 CHAR) := 'MIG_CPC_PROP_CUOTAS_BNK';
V_SENTENCIA VARCHAR2(2000 CHAR);

BEGIN
  
  DBMS_OUTPUT.PUT_LINE('[INFO] ['||V_TABLA||'] COMPROBANDO COMUNIDADES DE PROPIETARIOS...');
  
  --COMPROBAMOS QUE PARA LAS COMUNIDADES DE PROPIETARIOS QUE NOS VIENEN APROVISIONADAS EXISTEN REGISTROS EN LA TABLA DE COMUNIDADES DE PROPIETARIOS
  
  V_SENTENCIA := '
  SELECT COUNT(CPR_COD_COM_PROP_UVEM) 
  FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG 
  WHERE NOT EXISTS (
    SELECT 1 FROM '||V_ESQUEMA||'.ACT_CPR_COM_PROPIETARIOS WHERE MIG.CPR_COD_COM_PROP_UVEM = CPR_COD_COM_PROP_UVEM
  )
  '
  ;
  
  EXECUTE IMMEDIATE V_SENTENCIA INTO TABLE_COUNT;
  
  IF TABLE_COUNT = 0 THEN
  
    DBMS_OUTPUT.PUT_LINE('[INFO] TODOS LAS COMUNIDADES DE PROPIETARIOS EXISTEN EN ACT_CPR_COM_PROPIETARIOS');
    
  ELSE
  
    DBMS_OUTPUT.PUT_LINE('[INFO] SE HAN INFORMADO '||TABLE_COUNT||' COMUNIDADES DE PROPIETARIOS INEXISTENTES EN ACT_CPR_COM_PROPIETARIOS. SE DERIVARÁN A LA TABLA '||V_ESQUEMA||'.CPR_NOT_EXISTS.');
    
    --BORRAMOS LOS REGISTROS QUE HAYA EN NOT_EXISTS REFERENTES A ESTA INTERFAZ
    
    EXECUTE IMMEDIATE '
    DELETE FROM '||V_ESQUEMA||'.CPR_NOT_EXISTS
    WHERE TABLA_MIG = '''||V_TABLA_MIG||'''
    '
    ;
    
    COMMIT;
  
    EXECUTE IMMEDIATE '
    INSERT INTO '||V_ESQUEMA||'.CPR_NOT_EXISTS (
    CPR_COD_COM_PROP_UVEM,
    TABLA_MIG,
    FECHA_COMPROBACION
    )
    WITH CPR_COD_COM_PROP_UVEM AS (
		SELECT
		MIG.CPR_COD_COM_PROP_UVEM 
		FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG 
		WHERE NOT EXISTS (
		  SELECT 1 FROM '||V_ESQUEMA||'.ACT_CPR_COM_PROPIETARIOS WHERE MIG.CPR_COD_COM_PROP_UVEM = CPR_COD_COM_PROP_UVEM
		)
    )
    SELECT DISTINCT
    MIG.CPR_COD_COM_PROP_UVEM                              						CPR_COD_COM_PROP_UVEM,
    '''||V_TABLA_MIG||'''                                                        TABLA_MIG,
    SYSDATE                                                                      FECHA_COMPROBACION
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG  
    INNER JOIN CPR_COD_COM_PROP_UVEM
    ON CPR_COD_COM_PROP_UVEM.CPR_COD_COM_PROP_UVEM = MIG.CPR_COD_COM_PROP_UVEM
    '
    ;
    
    DBMS_OUTPUT.PUT_LINE('[INFO] SE BORRARÁN DE '||V_ESQUEMA||'.'||V_TABLA_MIG||' LAS COMUNIDADES DE PROPIETARIOS INEXISTENTES. MIRAR '||V_ESQUEMA||'.CPR_NOT_EXISTS.');
    
    /*
    --SI ESTAS COMUNIDADES DE PROPIETARIOS NO EXISTEN EN LA TABLA DE COMUNIDADES DE PROPIETARIOS, SE HABRAN INFORMADO EN CPR_NOT_EXISTS Y SE BORRARAN DE LA INTERFAZ PARA NO SER INSERTADOS
    
    EXECUTE IMMEDIATE '
    DELETE 
    FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG
    WHERE EXISTS (
      SELECT 1 FROM CPR_NOT_EXISTS WHERE MIG.CPR_COD_COM_PROP_UVEM = CPR_COD_COM_PROP_UVEM
    )
    '
    ;
    */
    COMMIT;
    

  END IF;
  
    DBMS_OUTPUT.PUT_LINE('[INFO] COMIENZA EL PROCESO DE MIGRACION SOBRE LA TABLA '||V_ESQUEMA||'.'||V_TABLA||'.');
  
	EXECUTE IMMEDIATE ('
	INSERT INTO '||V_ESQUEMA||'.'||V_TABLA||' (
	CCP_ID,
	CPR_ID,
	CCP_COD_CUOTA_UVEM,
	DD_TPC_ID,
	CCP_CONCEPTO_CUOTA,
	CCP_FECHA_EMISION,
	CCP_PAGADA,
	CCP_OBSERVACIONES,
	VERSION,
	USUARIOCREAR,
	FECHACREAR,
	BORRADO
	)
	WITH CPR_COD_COM_PROP_UVEM AS (
		SELECT CPR_COD_COM_PROP_UVEM 
		FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG
		WHERE CPR_COD_COM_PROP_UVEM NOT IN (
		  SELECT CPR_COD_COM_PROP_UVEM 
		  FROM '||V_ESQUEMA||'.'||V_TABLA||' 
			)
	)
	SELECT
	'||V_ESQUEMA||'.S_ACT_CCP_CUOTA_COM_PROP.NEXTVAL						CCP_ID,
	(SELECT CPR_ID
	FROM '||V_ESQUEMA||'.ACT_CPR_COM_PROPIETARIOS ACT
	WHERE ACT.CPR_COD_COM_PROP_UVEM = MIG.CPR_COD_COM_PROP_UVEM)     	CPR_ID,
	MIG.CCP_COD_CUOTA_UVEM							  		CCP_COD_CUOTA_UVEM,
	(SELECT DD_TCP_ID
	FROM '||V_ESQUEMA||'.DD_TCP_TIPO_COBRO_PAGO
	WHERE DD_TCP_CODIGO = MIG.TIPO_CUOTA)				  	DD_TPC_ID,
	MIG.CCP_CONCEPTO_CUOTA                                  CCP_CONCEPTO_CUOTA,
	MIG.CCP_FECHA_EMISION                            		CCP_FECHA_EMISION,
	MIG.CCP_PAGADA                             		  		CCP_PAGADA,
	MIG.CCP_OBSERVACIONES                             		CCP_OBSERVACIONES,
	''0''                                                 	VERSION,
	''MIGRAREM01BNK''                                               	USUARIOCREAR,
	SYSDATE                                               	FECHACREAR,
	0                                                     	BORRADO
	FROM '||V_ESQUEMA||'.'||V_TABLA_MIG||' MIG
	LEFT JOIN '||V_ESQUEMA||'.CPR_NOT_EXISTS NOTT
	ON NOTT.CPR_COD_COM_PROP_UVEM = MIG.CPR_COD_COM_PROP_UVEM
	INNER JOIN CPR_COD_COM_PROP_UVEM CPR
	ON CPR.CPR_COD_COM_PROP_UVEM = MIG.CPR_COD_COM_PROP_UVEM
	WHERE NOTT.CPR_COD_COM_PROP_UVEM IS NULL
	')
	;

	
  
  DBMS_OUTPUT.PUT_LINE('[INFO] - '||to_char(sysdate,'HH24:MI:SS')||'  '||V_ESQUEMA||'.'||V_TABLA||' cargada. '||SQL%ROWCOUNT||' Filas.');
  
  COMMIT;
  
  EXECUTE IMMEDIATE('ANALYZE TABLE '||V_ESQUEMA||'.'||V_TABLA||' COMPUTE STATISTICS');
  
  DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_TABLA||' ANALIZADA.');
  
  
  EXCEPTION

    WHEN OTHERS THEN
        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion:'||TO_CHAR(SQLCODE));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------');
        DBMS_OUTPUT.put_line(SQLERRM);
        ROLLBACK;
        RAISE;
END;
/

EXIT;
