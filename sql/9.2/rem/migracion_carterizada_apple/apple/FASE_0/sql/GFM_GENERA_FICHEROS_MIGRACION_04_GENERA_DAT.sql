--/*
--##########################################
--## AUTOR= Miguel Sanchez
--## FECHA_CREACION=20181204
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=MIGRACION-APPLE
--## INCIDENCIA_LINK=HREOS-4932
--## PRODUCTO=NO
--## 
--## Finalidad: GFM
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;
SET LINESIZE 32767;
SET PAGESIZE 32767;
SET LONG 32767;

DECLARE
/* ESTE SQL DEBE DEVOLVER UNA PLANTILLA COMO ESTA

[FILADAT][SL]
valor1[SL]
valor2[SL]
valor3[SL]
valor..[SL]
[FILADAT]

Donde FILADAT es el inicio y final de la linea generada, y SL indica un salto de linea generado por sql que debe de ser borrado mediante shell
*/ 
V_INPUT VARCHAR2(32767 CHAR);
V_INPUT_VALOR VARCHAR2(32767 CHAR);
V_INPUT_TIPO VARCHAR2(32767 CHAR);
V_INPUT_TIPO_CAMPO VARCHAR2(32767 CHAR);
V_INPUT_INTERFAZ VARCHAR2(32767 CHAR);
V_INPUT_CAMPO VARCHAR2(32767 CHAR);
V_SQL VARCHAR2(32767 CHAR);
V_VALOR_SQL VARCHAR2(32767 CHAR);
V_VALOR VARCHAR2(32767 CHAR);
V_INPUT_TAMANO VARCHAR2(32767 CHAR);

--CURSOR QUE DEVUELVE POR CADA CAMPO DE LA TABLA UN VALOR Y SU TIPO DE CAMPO. SI ES DUP, DEF, DD O DEP DEVUELVE LOS DATOS NECESARIOS PARA PASAR LA VALIDACION, EN CASO DE NO ESTAR EN LAS VALIDACIONES GENERA UN VALOR SEGUN SU TIPO DE CAMPO
CURSOR C IS
WITH TAMANO AS (
    SELECT ORDEN,
        CASE 
            WHEN TIPO_CAMPO LIKE '%NUMBER%' AND TIPO_CAMPO LIKE '%,%' THEN 
                to_char(REPLACE(REPLACE(SUBSTR(TIPO_CAMPO, 1, INSTR(REPLACE(TIPO_CAMPO,'NUMBER (',''),',')-1),'NUMBER(',''),')','')+1)
            WHEN TIPO_CAMPO LIKE '%NUMBER%' THEN 
                to_char(REPLACE(REPLACE(REPLACE(TIPO_CAMPO,'NUMBER (',''),'NUMBER(',''),')','')+1)
            WHEN TIPO_CAMPO LIKE '%CHAR%' THEN 
                REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TIPO_CAMPO,'VARCHAR (',''),'VARCHAR2(',''),'VARCHAR(',''),'CHAR(',''),')',''),' CHAR','')
            WHEN TIPO_CAMPO LIKE '%DATE%' THEN 
                '8' 
        END AS TAMANO,
        CASE 
            WHEN TIPO_CAMPO LIKE '%NUMBER%' AND TIPO_CAMPO LIKE '%,%' THEN  
            REPLACE(SUBSTR(TIPO_CAMPO, (INSTR(TIPO_CAMPO,',')+1),LENGTH(TIPO_CAMPO)),')','')
        END AS DECI
    FROM GFM_GENERA_FICHEROS_MIGRACION
)
SELECT 
    CASE WHEN DUP.VALIDACION_ID IS NOT NULL THEN
        '[DUP]'|| DUP.NOMBRE_PRODUCCION ||'.'||DUP.CAMPOS_PRODUCCION||'[DUP]'
    WHEN DEF.VALIDACION_ID IS NOT NULL THEN
        CASE WHEN DEF.NOMBRE_CAMPO='BIE_ADJ_OCUPADO' and DEF.NOMBRE_INTERFAZ='MIG_ADJ_JUDICIAL' THEN
            '2'
        ELSE DEF.VALOR_DEFECTO
        END
    WHEN DD.VALIDACION_ID IS NOT NULL THEN
        '[DD]'|| DD.NOMBRE_DICCIONARIO || '.' ||DD.NOMBRE_CODIGO ||'[DD]'
    WHEN DEP.VALIDACION_ID IS NOT NULL THEN
        '[DEP]'|| DEP.NOMBRE_INTERFAZ_DEPENDIENTE || '.' || DEP.CAMPO_DEPENDIENTE ||'[DEP]'
    ELSE 
        CASE 
            WHEN UPPER(TIPO_CAMPO) LIKE '%CHAR%' THEN SUBSTR('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',1,ROUND(TAM.TAMANO/2)) 
            WHEN UPPER(TIPO_CAMPO) LIKE '%NUMBER%'AND (TAM.DECI IS NULL OR TAM.DECI=0)THEN SUBSTR('012345678909876543210',1,round(TAM.TAMANO/2)) 
            WHEN UPPER(TIPO_CAMPO) LIKE '%NUMBER%'AND TAM.DECI>0 THEN SUBSTR('01234567890987654321012345678909876543210',1,round(((TAM.TAMANO-TAM.DECI)/2)+TAM.DECI)) 
            WHEN UPPER(TIPO_CAMPO) LIKE '%DATE%' THEN '20181225' 
            WHEN UPPER(TIPO_CAMPO) LIKE '%DATE%' AND UPPER(TIPO_CAMPO) LIKE '%YYYMMDD%'  THEN '20181225' 
            WHEN UPPER(TIPO_CAMPO) LIKE '%DATE%' AND UPPER(TIPO_CAMPO) LIKE '%DDMMYYYY%'  THEN '25122018'             
        END
    END AS VALOR_CAMPO
    , GFM.TIPO_CAMPO AS TIPO_CAMPO
FROM GFM_GENERA_FICHEROS_MIGRACION GFM
    JOIN GFM_MAPEO MAP ON GFM.INTERFAZ=MAP.INTERFAZ
    JOIN TAMANO TAM ON TAM.ORDEN=GFM.ORDEN
    LEFT JOIN VALIDACIONES_VALORESDEF DEF ON DEF.NOMBRE_INTERFAZ=REPLACE(MAP.TABLA,'REM01.','')  AND GFM.NOMBRE_CAMPO=DEF.NOMBRE_CAMPO
    LEFT JOIN VALIDACIONES_DEPENDENCIAS DEP ON DEP.NOMBRE_INTERFAZ=REPLACE(MAP.TABLA,'REM01.','')  AND GFM.NOMBRE_CAMPO=DEP.CAMPO_ORIGEN
    LEFT JOIN VALIDACIONES_DUPLICADOS DUP ON DUP.NOMBRE_INTERFAZ=REPLACE(MAP.TABLA,'REM01.','') AND GFM.NOMBRE_CAMPO=DUP.CAMPOS_INTERFAZ
    LEFT JOIN VALIDACIONES_DICCIONARIOS DD ON DD.NOMBRE_INTERFAZ=REPLACE(MAP.TABLA,'REM01.','') AND DD.NOMBRE_CAMPO=GFM.NOMBRE_CAMPO
ORDER BY GFM.ORDEN;
  --POR CADA CAMPO DEVUELTO POR EL CURSOR
BEGIN
 DBMS_OUTPUT.PUT_LINE('[FILADAT][SL]');
    OPEN C;
    LOOP
        FETCH C INTO V_INPUT,V_INPUT_TIPO_CAMPO;
        EXIT WHEN C%NOTFOUND;
        V_INPUT_VALOR:=REPLACE(REPLACE(REPLACE(REPLACE(V_INPUT,'[DD]',''),'[DUP]',''),'[DEP]',''),'[V_INPUT]','');

--OBTENEMOS EL TIPO Y EL TAMAÑO DEPENDIENDO DE SU TIPO DE DATO
        IF UPPER(V_INPUT_TIPO_CAMPO) LIKE '%NUMBER%' THEN
            V_INPUT_TIPO:='NUMBER';
            IF UPPER(V_INPUT_TIPO_CAMPO) LIKE '%,%' THEN
                V_INPUT_TAMANO:=SUBSTR(V_INPUT_TIPO_CAMPO, 1, INSTR(V_INPUT_TIPO_CAMPO,',')-1);
            ELSE
                V_INPUT_TAMANO:=SUBSTR(V_INPUT_TIPO_CAMPO, 1, INSTR(V_INPUT_TIPO_CAMPO,')')-1);
            END IF;
            V_INPUT_TAMANO:=REPLACE(REPLACE(V_INPUT_TAMANO,'NUMBER (',''),'NUMBER(','');
        ELSIF UPPER(V_INPUT_TIPO_CAMPO) LIKE '%CHAR%' THEN
            V_INPUT_TIPO:='CHAR';
            V_INPUT_TAMANO:=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(V_INPUT_TIPO_CAMPO,'VARCHAR (',''),'CHAR)',''),')',''),'VARCHAR(',''),'CHAR(',''),'VARCHAR2(','');                       
        ELSIF UPPER(V_INPUT_TIPO_CAMPO) LIKE '%DATE%' THEN 
            V_INPUT_TIPO:='DATE';
            V_INPUT_TAMANO:=8;
        END IF;
    
-- SUSTITUIMOS LAS DEPENDENCIAS POR UN VALOR ALEATORIO DE LA TABLA CORRESPONDIENTE       
        IF V_INPUT LIKE '%[DEP]%' THEN
            V_INPUT_INTERFAZ:=SUBSTR(V_INPUT_VALOR, 1, INSTR(V_INPUT_VALOR,'.')-1);
            V_INPUT_CAMPO:=SUBSTR(V_INPUT_VALOR, INSTR(V_INPUT_VALOR,'.')+1,LENGTH(V_INPUT_VALOR) );  
            
            V_SQL := ' SELECT '||V_INPUT_CAMPO||' AS CAMPO
            FROM ( SELECT '||V_INPUT_CAMPO||' FROM '||V_INPUT_INTERFAZ||' ORDER BY DBMS_RANDOM.VALUE) WHERE  rownum = 1'; 
            EXECUTE IMMEDIATE V_SQL INTO V_VALOR_SQL;
                        
            IF UPPER(V_INPUT_TIPO) =  'NUMBER' THEN
                V_SQL := ' SELECT LPAD('''||V_VALOR_SQL||''','||V_INPUT_TAMANO||',''0'') FROM DUAL'; 
                EXECUTE IMMEDIATE V_SQL INTO V_VALOR_SQL;
                V_VALOR:='+'||V_VALOR_SQL;
            ELSE
                 V_SQL := ' SELECT LPAD('''||V_VALOR_SQL||''','||V_INPUT_TAMANO||',''/'') FROM DUAL'; 
                EXECUTE IMMEDIATE V_SQL INTO V_VALOR_SQL;
                V_VALOR:=V_VALOR_SQL;
            END if;
            DBMS_OUTPUT.PUT_LINE(V_VALOR||'[SL]');
-- SUSTITUIMOS LOS duplicados POR UN VALOR NUEVO DE LA TABLA CORRESPONDIENTE
        ELSIF V_INPUT LIKE '%[DUP]%' THEN
          case when (length(V_INPUT_VALOR) - length(replace(V_INPUT_VALOR,'.',''))) > 1 then
            V_INPUT_INTERFAZ:=SUBSTR(V_INPUT_VALOR, 1, INSTR(V_INPUT_VALOR,'.',1,2)-1);
            V_INPUT_CAMPO:=SUBSTR(V_INPUT_VALOR, INSTR(V_INPUT_VALOR,'.')+1,LENGTH(V_INPUT_VALOR) ); 
            WHEN (length(V_INPUT_VALOR) - length(replace(V_INPUT_VALOR,'.',''))) =1 Then
            V_INPUT_INTERFAZ:=SUBSTR(V_INPUT_VALOR, 1, INSTR(V_INPUT_VALOR,'.',1,1)-1);
            V_INPUT_CAMPO:=SUBSTR(V_INPUT_VALOR, INSTR(V_INPUT_VALOR,'.')+1,LENGTH(V_INPUT_VALOR) ); 
            END case ;
            CASE 
                 WHEN V_INPUT_INTERFAZ='ACT_ACTIVO' THEN
                    V_SQL := ' SELECT max('||V_INPUT_CAMPO||')+1 FROM '||V_INPUT_INTERFAZ||''; 
                    EXECUTE IMMEDIATE V_SQL INTO V_VALOR_SQL;
                WHEN V_INPUT_INTERFAZ='ACT_CPR_COM_PROPIETARIOS' THEN
                    V_VALOR_SQL:='Z999999999';
                WHEN V_INPUT_INTERFAZ='ACT_PRO_PROPIETARIO' THEN
                    V_VALOR_SQL:='999999999';
                WHEN V_INPUT_INTERFAZ='REMMASTER.USU_USUARIOS' THEN
                    V_VALOR_SQL:='MIGRA_APPLE';
                WHEN V_INPUT_INTERFAZ='ACT_AGR_AGRUPACION' THEN
                    V_VALOR_SQL:='2222222';
             END CASE;
                        
            IF UPPER(V_INPUT_TIPO) =  'NUMBER' THEN
                V_SQL := ' SELECT LPAD('''||V_VALOR_SQL||''','||V_INPUT_TAMANO||',''0'') FROM DUAL'; 
                EXECUTE IMMEDIATE V_SQL INTO V_VALOR_SQL;
                V_VALOR:='+'||V_VALOR_SQL;
            ELSE
                V_SQL := ' SELECT LPAD('''||V_VALOR_SQL||''','||V_INPUT_TAMANO||',''/'') FROM DUAL'; 
                EXECUTE IMMEDIATE V_SQL INTO V_VALOR_SQL;
                V_VALOR:=V_VALOR_SQL;
            END if;
            DBMS_OUTPUT.PUT_LINE(V_VALOR||'[SL]');    

-- SUSTITUIMOS LOS DICCIONARIOS POR UN VALOR ALEATORIO DE LA TABLA CORRESPONDIENTE 
           ELSIF V_INPUT LIKE '%[DD]%' THEN
            case when (length(V_INPUT_VALOR) - length(replace(V_INPUT_VALOR,'.',''))) > 1 then
                V_INPUT_INTERFAZ:=SUBSTR(V_INPUT_VALOR, 1, INSTR(V_INPUT_VALOR,'.',1,2)-1);
                V_INPUT_CAMPO:=SUBSTR(V_INPUT_VALOR, INSTR(V_INPUT_VALOR,'.',1,2)+1,LENGTH(V_INPUT_VALOR) );  
            WHEN (length(V_INPUT_VALOR) - length(replace(V_INPUT_VALOR,'.',''))) =1 Then
                V_INPUT_INTERFAZ:=SUBSTR(V_INPUT_VALOR, 1, INSTR    (V_INPUT_VALOR,'.')-1);
                V_INPUT_CAMPO:=SUBSTR(V_INPUT_VALOR, INSTR(V_INPUT_VALOR,'.')+1,LENGTH(V_INPUT_VALOR) );  
            END case ;
           
            V_SQL := ' SELECT '||V_INPUT_CAMPO||' AS CAMPO
            FROM ( SELECT '||V_INPUT_CAMPO||' FROM '||V_INPUT_INTERFAZ||' WHERE BORRADO=0 ORDER BY DBMS_RANDOM.VALUE) WHERE  rownum = 1'; 
            EXECUTE IMMEDIATE V_SQL INTO V_VALOR_SQL;
                        
            IF UPPER(V_INPUT_TIPO) =  'NUMBER' THEN
                V_SQL := ' SELECT LPAD('''||V_VALOR_SQL||''','||V_INPUT_TAMANO||',''0'') FROM DUAL'; 
                EXECUTE IMMEDIATE V_SQL INTO V_VALOR_SQL;
                V_VALOR:='+'||V_VALOR_SQL;
            ELSE
                 V_SQL := ' SELECT LPAD('''||V_VALOR_SQL||''','||V_INPUT_TAMANO||',''/'') FROM DUAL'; 
                EXECUTE IMMEDIATE V_SQL INTO V_VALOR_SQL;
                V_VALOR:=V_VALOR_SQL;
            END if;
            DBMS_OUTPUT.PUT_LINE(V_VALOR||'[SL]');    
-- EN CASO DE NO SER NINGUNO DE LOS ANTERIORES TRANSFORMA EL DATO OPTENIDO EN EL CURSOR DEPENDIENDO DE SU TIPO.                      
        ELSIF  UPPER(V_INPUT_TIPO) =  'CHAR' THEN
                IF V_INPUT_VALOR = '' THEN
                V_INPUT_VALOR:=' ';
                END IF;
                V_SQL := ' SELECT LPAD(NVL('''||V_INPUT_VALOR||''',''/''),'||V_INPUT_TAMANO||',''/'') FROM DUAL';  
                EXECUTE IMMEDIATE V_SQL INTO V_VALOR;
                            DBMS_OUTPUT.PUT_LINE(V_VALOR||'[SL]');
        ELSIF UPPER(V_INPUT_TIPO) =  'NUMBER' THEN
               CASE WHEN V_INPUT_VALOR IS NULL THEN
                    V_SQL := ' SELECT LPAD(NVL('''||V_INPUT_VALOR||''',''/''),'||V_INPUT_TAMANO||',''/'') FROM DUAL'; 
                    EXECUTE IMMEDIATE V_SQL INTO V_VALOR;
                    V_VALOR:='/'||V_VALOR;
                ELSE
                    V_SQL := ' SELECT LPAD(NVL('''||V_INPUT_VALOR||''',''0''),'||V_INPUT_TAMANO||',''0'') FROM DUAL'; 
                    EXECUTE IMMEDIATE V_SQL INTO V_VALOR;
                    V_VALOR:='+'||V_VALOR;
                END CASE ;
                DBMS_OUTPUT.PUT_LINE(V_VALOR||'[SL]');
        ELSIF UPPER(V_INPUT_TIPO) =  'DATE'   THEN
            IF V_INPUT_VALOR = '' or V_INPUT_VALOR is null THEN
                V_VALOR:='////////';
            ELSE
                V_VALOR:=V_INPUT_VALOR;
            END IF;
                        DBMS_OUTPUT.PUT_LINE(V_VALOR||'[SL]');
        END IF;


    END LOOP;
 DBMS_OUTPUT.PUT_LINE('[FILADAT]');

  EXCEPTION

    -- Opcional: Excepciones particulares que se quieran tratar
    -- Como esta, por ejemplo:
    -- WHEN TABLE_EXISTS_EXCEPTION THEN
        -- DBMS_OUTPUT.PUT_LINE('Ya se ha realizado la copia en la tabla TMP_MOV_'||TODAY);

    -- SIEMPRE DEBE HABER UN OTHERS
    WHEN OTHERS THEN
        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(SQLCODE));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------');
        DBMS_OUTPUT.put_line(SQLERRM);
        ROLLBACK;
        RAISE;
END;
/

EXIT;
