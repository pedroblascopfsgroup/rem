create or replace PROCEDURE SP_001_VALIDACION_DUPLICADOS IS

  V_ESQUEMA VARCHAR2(25 CHAR):= 'REM01'; 	-- '#ESQUEMA#'; -- Configuracion Esquema
  V_ESQUEMA_M VARCHAR2(25 CHAR):= 'REMMASTER'; 	-- '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
  err_num NUMBER; 													-- Numero de errores
  err_msg VARCHAR2(2048); 											-- Mensaje de error
  V_MSQL VARCHAR2(4000 CHAR);
  V_MSQL2 VARCHAR2(4000 CHAR);
  TYPE valCurTyp IS REF CURSOR;
  v_val_cursor valCurTyp;
  v_stmt_val VARCHAR2(4000 CHAR);
  V_SEC VARCHAR2(30 CHAR) := 'S_VALIDACIONES_RESULTADOS';
  TABLA_VALIDACION VARCHAR2(30 CHAR) := 'VALIDACIONES_RESULTADOS';
  V_EXIST_MIG NUMBER(1);
  V_EXIST_PRO NUMBER(1);
  CLAVE_DATO VARCHAR2(1024 CHAR);
  NOMBRE_INTERFAZ VARCHAR2(30 CHAR);
  TABLA_FINAL VARCHAR2(30 CHAR);

  vID REM01.VALIDACIONES_DUPLICADOS.VALIDACION_ID%TYPE;
  vTABLA_MIG REM01.VALIDACIONES_DUPLICADOS.NOMBRE_INTERFAZ%TYPE;
  vCLAVE_MIG REM01.VALIDACIONES_DUPLICADOS.CAMPOS_INTERFAZ%TYPE;
  vTABLA_PRO REM01.VALIDACIONES_DUPLICADOS.NOMBRE_PRODUCCION%TYPE;
  vCLAVE_PRO REM01.VALIDACIONES_DUPLICADOS.CAMPOS_PRODUCCION%TYPE;

  vCLAVE VARCHAR2(240 CHAR);
  vCLAVE2 VARCHAR2(240 CHAR);
  CAMPO_CLAVE_DATO VARCHAR2(240 CHAR);
  vRECHAZO_DUP_PRO REM01.VALIDACIONES_TIPOS.MOTIVO_RECHAZO%TYPE := '1';
  vRECHAZO_DUP_MIG REM01.VALIDACIONES_TIPOS.MOTIVO_RECHAZO%TYPE := '1';
  
BEGIN

    DBMS_OUTPUT.PUT_LINE('[INICIO] Inicio del proceso');

    --BORRAMOS LAS VALIDACIONES QUE PUDIErA HABER PARA ESTE TIPO DE VALIDACION
    V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.'||TABLA_VALIDACION||' WHERE COD_RECHAZO = '''||vRECHAZO_DUP_PRO||'''';
    EXECUTE IMMEDIATE V_MSQL;
    COMMIT;
    
    --******************************************
    --*** DUPLICADOS EN TABLAS DE PRODUCCION ***
    --******************************************

    DBMS_OUTPUT.PUT_LINE('[INFO] PROCESO DE BUSQUEDA DE DUPLICADOS EN TABLAS DE PRODUCCION INICIADO');

    v_stmt_val := 'SELECT VALIDACION_ID, NOMBRE_INTERFAZ, NOMBRE_PRODUCCION, CAMPOS_INTERFAZ, CAMPOS_PRODUCCION
        FROM '||V_ESQUEMA||'.VALIDACIONES_DUPLICADOS
        WHERE BORRADO = 0';

    OPEN v_val_cursor FOR v_stmt_val;
        LOOP
        FETCH v_val_cursor INTO vID, vTABLA_MIG, vTABLA_PRO, vCLAVE_MIG, vCLAVE_PRO;
        EXIT WHEN v_val_cursor%NOTFOUND;
        
        V_EXIST_MIG := 0;
        V_EXIST_PRO := 0;
        
        V_MSQL := 'SELECT COUNT(1) FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = '''||vTABLA_MIG||''' AND COLUMN_NAME = ''VALIDACION'' ';
        EXECUTE IMMEDIATE V_MSQL INTO V_EXIST_MIG;

        V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = '''||vTABLA_PRO||''' ';
        EXECUTE IMMEDIATE V_MSQL INTO V_EXIST_PRO;

        IF V_EXIST_MIG > 0 AND V_EXIST_PRO > 0 THEN
                    
          --INSERTAMOS UN REGISTRO EN LA TABLA DE VALIDACIONES POR CADA REGISTROS DUPLICADO EN LAS TABLAS FINALES
          V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.'||TABLA_VALIDACION||' (VALIDACION_ID, NOMBRE_INTERFAZ, CLAVE_DATO, COD_RECHAZO, MOTIVO_RECHAZO, CAMPO_CLAVE_DATO)
              SELECT '||V_ESQUEMA||'.'||V_SEC||'.NEXTVAL VALIDACION_ID, '''||vTABLA_MIG||''' NOMBRE_INTERFAZ, NI.'||vCLAVE_MIG||' CLAVE_DATO
                  , DR.CODIGO_RECHAZO COD_RECHAZO, ''[DUPLICADO] [PROD] '||vTABLA_MIG||'.'||vCLAVE_MIG||' duplicado en produccion. Encontrado en '||vTABLA_PRO||'.'||vCLAVE_PRO||'.'' MOTIVO_RECHAZO
                  , '''||vCLAVE_MIG||''' CAMPO_CLAVE_DATO
              FROM '||V_ESQUEMA||'.'||vTABLA_MIG||' NI
              JOIN '||V_ESQUEMA||'.VALIDACIONES_TIPOS DR ON DR.CODIGO_RECHAZO = '''||vRECHAZO_DUP_PRO||'''
              INNER JOIN '||vTABLA_PRO||' FIN ON NI.'||vCLAVE_MIG||' = FIN.'||vCLAVE_PRO||' AND FIN.BORRADO = 0
              WHERE FIN.'||vCLAVE_PRO||' IS NOT NULL AND NI.'||vCLAVE_MIG||' IS NOT NULL';
              
          V_MSQL2 := 'INSERT INTO '||V_ESQUEMA||'.'||TABLA_VALIDACION||' (VALIDACION_ID, NOMBRE_INTERFAZ, CLAVE_DATO, COD_RECHAZO, MOTIVO_RECHAZO, CAMPO_CLAVE_DATO, QUERY_VALIDACION)
              SELECT '||V_ESQUEMA||'.'||V_SEC||'.NEXTVAL VALIDACION_ID, '''||vTABLA_MIG||''' NOMBRE_INTERFAZ, NI.'||vCLAVE_MIG||' CLAVE_DATO
                  , DR.CODIGO_RECHAZO COD_RECHAZO, ''[DUPLICADO] [PROD] '||vTABLA_MIG||'.'||vCLAVE_MIG||' duplicado en produccion. Encontrado en '||vTABLA_PRO||'.'||vCLAVE_PRO||'.'' MOTIVO_RECHAZO
                  , '''||vCLAVE_MIG||''' CAMPO_CLAVE_DATO
                  , q''['||V_MSQL||']'' QUERY_VALIDACION
              FROM '||V_ESQUEMA||'.'||vTABLA_MIG||' NI
              JOIN '||V_ESQUEMA||'.VALIDACIONES_TIPOS DR ON DR.CODIGO_RECHAZO = '''||vRECHAZO_DUP_PRO||'''
              INNER JOIN '||vTABLA_PRO||' FIN ON NI.'||vCLAVE_MIG||' = FIN.'||vCLAVE_PRO||' AND FIN.BORRADO = 0
              WHERE FIN.'||vCLAVE_PRO||' IS NOT NULL AND NI.'||vCLAVE_MIG||' IS NOT NULL';    
              
          EXECUTE IMMEDIATE V_MSQL2;
          
          --ACTUALIZAMOS EL CAMPO VALIDACION DE LAS TABLAS MIG
      		V_MSQL := 'UPDATE '||vTABLA_MIG||' MIG
      			SET
      				MIG.VALIDACION='''||vRECHAZO_DUP_PRO||'''
      			WHERE EXISTS
      				(SELECT 1 FROM '||vTABLA_PRO||' PRO WHERE MIG.'||vCLAVE_MIG||' = PRO.'||vCLAVE_PRO||')';
      		DBMS_OUTPUT.PUT_LINE('  [INFO] Validando cÃ³digo, '||vCLAVE_MIG||', en tabla, '||vTABLA_MIG||', contra codigo, '||vCLAVE_PRO||', en tabla, '||vTABLA_PRO||'.');
              EXECUTE IMMEDIATE V_MSQL;
        END IF;

        END LOOP;

    CLOSE v_val_cursor;

    COMMIT;

    --********************************
    --*** DUPLICADOS EN TABLAS MIG ***
    --********************************

    DBMS_OUTPUT.PUT_LINE('[INFO] PROCESO DE BUSQUEDA DE DUPLICADOS EN TABLAS DE MIGRACION INICIADO');

   /* v_stmt_val := 'SELECT VALIDACION_ID, NOMBRE_INTERFAZ_PRODUCCION, NOMBRE_PRODUCCION, CAMPOS_INTERFAZ, CAMPOS_PRODUCCION
        FROM '||V_ESQUEMA||'.VALIDACIONES_DUPLICADOS
        WHERE BORRADO = 0';*/

   v_stmt_val := 'SELECT DISTINCT NOMBRE_INTERFAZ
        FROM '||V_ESQUEMA||'.INTERFAZ_CLAVE';

    OPEN v_val_cursor FOR v_stmt_val;
        LOOP
        FETCH v_val_cursor INTO vTABLA_MIG;
        EXIT WHEN v_val_cursor%NOTFOUND;

		BEGIN
            
            V_EXIST_MIG := 0;
            
            V_MSQL := 'SELECT COUNT(1) FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = '''||vTABLA_MIG||''' AND COLUMN_NAME = ''VALIDACION'' ';
            EXECUTE IMMEDIATE V_MSQL INTO V_EXIST_MIG;
            
            IF V_EXIST_MIG > 0 THEN
                V_MSQL := 'SELECT LISTAGG(CLAVE_DATO, ''||''''|''''||'') WITHIN GROUP (ORDER BY CLAVE_POSICION) CLAVE_DATO
                                , LISTAGG(CLAVE_DATO, ''||''''|''''||T1.'') WITHIN GROUP (ORDER BY CLAVE_POSICION) CLAVE_DATO2
                                , LISTAGG(CLAVE_DATO, ''|'') WITHIN GROUP (ORDER BY CLAVE_POSICION) CAMPO_CLAVE_DATO
                    FROM '||V_ESQUEMA||'.INTERFAZ_CLAVE
                    WHERE NOMBRE_INTERFAZ = REPLACE('''||vTABLA_MIG||''',''REMMASTER.'','''')
                    GROUP BY NOMBRE_INTERFAZ';
                EXECUTE IMMEDIATE V_MSQL INTO vCLAVE, vCLAVE2, CAMPO_CLAVE_DATO;
    
                --INSERTAMOS UN REGISTRO EN LA TABLA DE VALIDACIONES POR CADA REGISTROS DUPLICADO EN LAS TABLAS MIG
                V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.'||TABLA_VALIDACION||' (VALIDACION_ID, NOMBRE_INTERFAZ, CLAVE_DATO, COD_RECHAZO, MOTIVO_RECHAZO, CAMPO_CLAVE_DATO)
                    SELECT '||V_ESQUEMA||'.'||V_SEC||'.NEXTVAL VALIDACION_ID, NOMBRE_INTERFAZ, CLAVE_DATO, COD_RECHAZO, MOTIVO_RECHAZO, CAMPO_CLAVE_DATO
                    FROM (
                    SELECT '''||vTABLA_MIG||''' NOMBRE_INTERFAZ, '||vCLAVE||' CLAVE_DATO
                        , DR.CODIGO_RECHAZO COD_RECHAZO, ''[DUPLICADO] [MIG] '||vTABLA_MIG||'.'||CAMPO_CLAVE_DATO||' duplicado en la tabla migra.'' MOTIVO_RECHAZO
                        , '''||CAMPO_CLAVE_DATO||''' CAMPO_CLAVE_DATO
                    FROM '||V_ESQUEMA||'.'||vTABLA_MIG||' NI
                    JOIN '||V_ESQUEMA||'.VALIDACIONES_TIPOS DR ON DR.CODIGO_RECHAZO = '''||vRECHAZO_DUP_MIG||'''
                    GROUP BY '||vCLAVE||', DR.CODIGO_RECHAZO, DR.MOTIVO_RECHAZO
                    HAVING COUNT(1)>1)';
                    
                V_MSQL2 := 'INSERT INTO '||V_ESQUEMA||'.'||TABLA_VALIDACION||' (VALIDACION_ID, NOMBRE_INTERFAZ, CLAVE_DATO, COD_RECHAZO, MOTIVO_RECHAZO, CAMPO_CLAVE_DATO, QUERY_VALIDACION)
                    SELECT '||V_ESQUEMA||'.'||V_SEC||'.NEXTVAL VALIDACION_ID, NOMBRE_INTERFAZ, CLAVE_DATO, COD_RECHAZO, MOTIVO_RECHAZO, CAMPO_CLAVE_DATO, QUERY_VALIDACION
                    FROM (
                    SELECT '''||vTABLA_MIG||''' NOMBRE_INTERFAZ, '||vCLAVE||' CLAVE_DATO
                        , DR.CODIGO_RECHAZO COD_RECHAZO, ''[DUPLICADO] [MIG] '||vTABLA_MIG||'.'||CAMPO_CLAVE_DATO||' duplicado en la tabla migra.'' MOTIVO_RECHAZO
                        , '''||CAMPO_CLAVE_DATO||''' CAMPO_CLAVE_DATO
                        , q''['||V_MSQL||']'' QUERY_VALIDACION
                    FROM '||V_ESQUEMA||'.'||vTABLA_MIG||' NI
                    JOIN '||V_ESQUEMA||'.VALIDACIONES_TIPOS DR ON DR.CODIGO_RECHAZO = '''||vRECHAZO_DUP_MIG||'''
                    GROUP BY '||vCLAVE||', DR.CODIGO_RECHAZO, DR.MOTIVO_RECHAZO
                    HAVING COUNT(1)>1)';
                
                EXECUTE IMMEDIATE V_MSQL2;
    
                --ACTUALIZAMOS EL CAMPO VALIDACION DE LAS TABLAS MIG
                V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||vTABLA_MIG||' T1
                    USING (SELECT DISTINCT CLAVE_DATO
                        FROM '||V_ESQUEMA||'.'||TABLA_VALIDACION||'
                        WHERE NOMBRE_INTERFAZ = '''||vTABLA_MIG||'''
                            AND COD_RECHAZO = '''||vRECHAZO_DUP_MIG||''') T2
                    ON (TO_CHAR(T2.CLAVE_DATO) = TO_CHAR(T1.'||vCLAVE2||'))
                    WHEN MATCHED THEN UPDATE SET
                        T1.VALIDACION = '''||vRECHAZO_DUP_MIG||'''
                    WHERE T1.VALIDACION = 0';
                DBMS_OUTPUT.PUT_LINE('  [INFO] Validando clave/s, '||vCLAVE_MIG||', en tabla, '||vTABLA_MIG||', contra si misma.');
                EXECUTE IMMEDIATE V_MSQL;
            END IF;

        EXCEPTION
            WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('No se encuentra la clave para '||vTABLA_MIG||'.');
        END;

        END LOOP;

    CLOSE v_val_cursor;

    DBMS_OUTPUT.PUT_LINE('[INFO] PROCESO DE BUSQUEDA DE DUPLICADOS EN TABLAS DE MIGRACION INICIADO');

    COMMIT;

    DBMS_OUTPUT.PUT_LINE('[FIN] Validaciones de duplicados ejecutadas.');

EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecuciÃ³n:'||TO_CHAR(SQLCODE));
    DBMS_OUTPUT.put_line('-----------------------------------------------------------');
    DBMS_OUTPUT.put_line(SQLERRM);
    DBMS_OUTPUT.put_line(V_MSQL);
    ROLLBACK;
    RAISE;

END;
/
EXIT
