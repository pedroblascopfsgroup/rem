--/*
--###########################################
--## AUTOR=Oscar Diestre Perez
--## FECHA_CREACION=20191017
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.2
--## INCIDENCIA_LINK=REMVIP-5486
--## PRODUCTO=NO
--## 
--## Finalidad: Proceso Revisar cuadre ASPRO
--##			
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--###########################################
----*/


WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE

  V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar     
  V_ESQUEMA VARCHAR2(25 CHAR):= 'REM01'; -- Configuracion Esquemas
  V_ESQUEMA_M VARCHAR2(25 CHAR):= 'REMMASTER'; -- Configuracion Esquema Master
  V_ESQUEMA_3 VARCHAR2(20 CHAR) := 'REM_QUERY';  
  V_ESQUEMA_4 VARCHAR2(20 CHAR) := 'PFSREM';
  V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
  V_NUM_ACT NUMBER(16); -- Vble. para validar la existencia de una tabla.   
  V_COUNT1 NUMBER(16);
  V_COUNT2 NUMBER(16);
  ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
  ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
  V_USUARIOMODIFICAR VARCHAR2(100 CHAR) := 'REMVIP-5486';
  TABLE_COUNT NUMBER(1,0) := 0;
  
    
BEGIN	
	
    DBMS_OUTPUT.PUT_LINE('[INICIO] ');
	 
    DBMS_OUTPUT.PUT_LINE('[INFO]: ACTUALIZAR AUX_REMVIP_5486 dejando a null las fechas ' );

                V_MSQL := ' 							
 			 UPDATE '||V_ESQUEMA||'.AUX_REMVIP_5486 T1
       			 SET FECHA_CONTABILIZACION = NULL
			 WHERE FECHA_CONTABILIZACION = ''NULL'' ' ;	
  
    	  	EXECUTE IMMEDIATE V_MSQL;

	        DBMS_OUTPUT.PUT_LINE('[INFO]: ACTUALIZADOS ' || SQL%ROWCOUNT || ' REGISTROS DE AUX_REMVIP_5486 con FECHA_CONTABILIZACION = null ' );

                V_MSQL := ' 							
 			 UPDATE '||V_ESQUEMA||'.AUX_REMVIP_5486 T1
       			 SET FECHA_PAGO = NULL
			 WHERE FECHA_PAGO = ''NULL'' ' ;	
  
    	  	EXECUTE IMMEDIATE V_MSQL;

	        DBMS_OUTPUT.PUT_LINE('[INFO]: ACTUALIZADOS ' || SQL%ROWCOUNT || ' REGISTROS DE AUX_REMVIP_5486 con FECHA_PAGO = null ' );
           
--*******************************************************************************************************************************


  SELECT COUNT(1) INTO TABLE_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'AUX_REMVIP_5486_GPV' AND OWNER= ''||V_ESQUEMA||'';

  IF TABLE_COUNT > 0 THEN

    DBMS_OUTPUT.PUT_LINE('[INFO] TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_GPV YA EXISTENTE. SE PROCEDE A BORRAR Y CREAR DE NUEVO.');
    EXECUTE IMMEDIATE 'DROP TABLE '||V_ESQUEMA||'.AUX_REMVIP_5486_GPV';
    
  END IF;

    DBMS_OUTPUT.PUT_LINE('[INFO]: Creación de copias de los registros modificados ' );


    DBMS_OUTPUT.PUT_LINE('[INFO]: Copia de GPV_GASTOS_PROVEEDOR ' );

                V_MSQL := ' 							
			CREATE TABLE '||V_ESQUEMA||'.AUX_REMVIP_5486_GPV AS
			SELECT *
			FROM '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR
			WHERE GPV_ID IN
			(
			SELECT GPV.GPV_ID
			FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
			WHERE 1 = 1
			AND AUX.NUFREM = GPV.GPV_NUM_GASTO_HAYA
			AND TIPO = ''GASTO''
			AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
			AND GPV.BORRADO = 0
			UNION
			SELECT GPV.GPV_ID
			FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
			WHERE 1 = 1
			AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
			AND GPV.PRG_ID = PRG.PRG_ID
			AND TIPO = ''PROVISION''
			AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
			AND GPV.BORRADO = 0
			)
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Creada AUX_REMVIP_5486_GPV ' );

	IF V_ESQUEMA_3 != V_ESQUEMA THEN

		EXECUTE IMMEDIATE 'GRANT ALL ON "'||V_ESQUEMA||'"."AUX_REMVIP_5486_GPV" TO "'||V_ESQUEMA_3||'" WITH GRANT OPTION';
		DBMS_OUTPUT.PUT_LINE('[INFO] PERMISOS SOBRE LA TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_GPV OTORGADOS A '||V_ESQUEMA_3||''); 

	END IF;

	IF V_ESQUEMA_4 != V_ESQUEMA THEN
	
		EXECUTE IMMEDIATE 'GRANT ALL ON "'||V_ESQUEMA||'"."AUX_REMVIP_5486_GPV" TO "'||V_ESQUEMA_4||'" WITH GRANT OPTION';
		DBMS_OUTPUT.PUT_LINE('[INFO] PERMISOS SOBRE LA TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_GPV OTORGADOS A '||V_ESQUEMA_4||''); 

	END IF;


  SELECT COUNT(1) INTO TABLE_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'AUX_REMVIP_5486_GIC' AND OWNER= ''||V_ESQUEMA||'';

  IF TABLE_COUNT > 0 THEN

    DBMS_OUTPUT.PUT_LINE('[INFO] TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_GIC YA EXISTENTE. SE PROCEDE A BORRAR Y CREAR DE NUEVO.');
    EXECUTE IMMEDIATE 'DROP TABLE '||V_ESQUEMA||'.AUX_REMVIP_5486_GIC';
    
  END IF;


    DBMS_OUTPUT.PUT_LINE('[INFO]: Copia de GIC_GASTOS_INFO_CONTABILIDAD ' );

                V_MSQL := ' 							
			CREATE TABLE '||V_ESQUEMA||'.AUX_REMVIP_5486_GIC AS
			SELECT *
			FROM '||V_ESQUEMA||'.GIC_GASTOS_INFO_CONTABILIDAD
			WHERE GPV_ID IN
			(
			SELECT GPV.GPV_ID
			FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
			WHERE 1 = 1
			AND AUX.NUFREM = GPV.GPV_NUM_GASTO_HAYA
			AND TIPO = ''GASTO''
			AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
			AND GPV.BORRADO = 0
			UNION
			SELECT GPV.GPV_ID
			FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
			WHERE 1 = 1
			AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
			AND GPV.PRG_ID = PRG.PRG_ID
			AND TIPO = ''PROVISION''
			AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
			AND GPV.BORRADO = 0
			)
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Creada AUX_REMVIP_5486_GIC ' );

	IF V_ESQUEMA_3 != V_ESQUEMA THEN

		EXECUTE IMMEDIATE 'GRANT ALL ON "'||V_ESQUEMA||'"."AUX_REMVIP_5486_GIC" TO "'||V_ESQUEMA_3||'" WITH GRANT OPTION';
		DBMS_OUTPUT.PUT_LINE('[INFO] PERMISOS SOBRE LA TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_GIC OTORGADOS A '||V_ESQUEMA_3||''); 

	END IF;

	IF V_ESQUEMA_4 != V_ESQUEMA THEN
	
		EXECUTE IMMEDIATE 'GRANT ALL ON "'||V_ESQUEMA||'"."AUX_REMVIP_5486_GIC" TO "'||V_ESQUEMA_4||'" WITH GRANT OPTION';
		DBMS_OUTPUT.PUT_LINE('[INFO] PERMISOS SOBRE LA TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_GIC OTORGADOS A '||V_ESQUEMA_4||''); 

	END IF;


  SELECT COUNT(1) INTO TABLE_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'AUX_REMVIP_5486_GDE' AND OWNER= ''||V_ESQUEMA||'';

  IF TABLE_COUNT > 0 THEN

    DBMS_OUTPUT.PUT_LINE('[INFO] TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_GDE YA EXISTENTE. SE PROCEDE A BORRAR Y CREAR DE NUEVO.');
    EXECUTE IMMEDIATE 'DROP TABLE '||V_ESQUEMA||'.AUX_REMVIP_5486_GDE';
    
  END IF;

    DBMS_OUTPUT.PUT_LINE('[INFO]: Copia de GDE_GASTOS_DETALLE_ECONOMICO ' );

                V_MSQL := ' 							
			CREATE TABLE '||V_ESQUEMA||'.AUX_REMVIP_5486_GDE AS
			SELECT *
			FROM '||V_ESQUEMA||'.GDE_GASTOS_DETALLE_ECONOMICO
			WHERE GPV_ID IN
			(
			SELECT GPV.GPV_ID
			FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
			WHERE 1 = 1
			AND AUX.NUFREM = GPV.GPV_NUM_GASTO_HAYA
			AND TIPO = ''GASTO''
			AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
			AND GPV.BORRADO = 0
			UNION
			SELECT GPV.GPV_ID
			FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
			WHERE 1 = 1
			AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
			AND GPV.PRG_ID = PRG.PRG_ID
			AND TIPO = ''PROVISION''
			AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
			AND GPV.BORRADO = 0
			)
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Creada AUX_REMVIP_5486_GDE ' );

	IF V_ESQUEMA_3 != V_ESQUEMA THEN

		EXECUTE IMMEDIATE 'GRANT ALL ON "'||V_ESQUEMA||'"."AUX_REMVIP_5486_GDE" TO "'||V_ESQUEMA_3||'" WITH GRANT OPTION';
		DBMS_OUTPUT.PUT_LINE('[INFO] PERMISOS SOBRE LA TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_GDE OTORGADOS A '||V_ESQUEMA_3||''); 

	END IF;

	IF V_ESQUEMA_4 != V_ESQUEMA THEN
	
		EXECUTE IMMEDIATE 'GRANT ALL ON "'||V_ESQUEMA||'"."AUX_REMVIP_5486_GDE" TO "'||V_ESQUEMA_4||'" WITH GRANT OPTION';
		DBMS_OUTPUT.PUT_LINE('[INFO] PERMISOS SOBRE LA TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_GDE OTORGADOS A '||V_ESQUEMA_4||''); 

	END IF;

  SELECT COUNT(1) INTO TABLE_COUNT FROM ALL_TABLES WHERE TABLE_NAME = 'AUX_REMVIP_5486_PRG' AND OWNER= ''||V_ESQUEMA||'';

  IF TABLE_COUNT > 0 THEN

    DBMS_OUTPUT.PUT_LINE('[INFO] TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_PRG YA EXISTENTE. SE PROCEDE A BORRAR Y CREAR DE NUEVO.');
    EXECUTE IMMEDIATE 'DROP TABLE '||V_ESQUEMA||'.AUX_REMVIP_5486_PRG';
    
  END IF;

    DBMS_OUTPUT.PUT_LINE('[INFO]: Copia de PRG_PROVISION_GASTOS ' );

                V_MSQL := ' 							
			CREATE TABLE '||V_ESQUEMA||'.AUX_REMVIP_5486_PRG AS
			SELECT *
			FROM '||V_ESQUEMA||'.PRG_PROVISION_GASTOS
			WHERE PRG_ID IN
			(
			SELECT PRG.PRG_ID
			FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
			WHERE 1 = 1
			AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
			AND GPV.PRG_ID = PRG.PRG_ID
			AND TIPO = ''PROVISION''
			AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
			AND GPV.BORRADO = 0
			)
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Creada AUX_REMVIP_5486_PRG ' );


	IF V_ESQUEMA_3 != V_ESQUEMA THEN

		EXECUTE IMMEDIATE 'GRANT ALL ON "'||V_ESQUEMA||'"."AUX_REMVIP_5486_PRG" TO "'||V_ESQUEMA_3||'" WITH GRANT OPTION';
		DBMS_OUTPUT.PUT_LINE('[INFO] PERMISOS SOBRE LA TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_PRG OTORGADOS A '||V_ESQUEMA_3||''); 

	END IF;

	IF V_ESQUEMA_4 != V_ESQUEMA THEN
	
		EXECUTE IMMEDIATE 'GRANT ALL ON "'||V_ESQUEMA||'"."AUX_REMVIP_5486_PRG" TO "'||V_ESQUEMA_4||'" WITH GRANT OPTION';
		DBMS_OUTPUT.PUT_LINE('[INFO] PERMISOS SOBRE LA TABLA '||V_ESQUEMA||'.AUX_REMVIP_5486_PRG OTORGADOS A '||V_ESQUEMA_4||''); 

	END IF;


--*******************************************************************************************************************************

    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar fecha de contabilización en gastos no agrupados' );
            
                V_MSQL := ' 							
			MERGE INTO '||V_ESQUEMA||'.GIC_GASTOS_INFO_CONTABILIDAD T1
       			 USING (

				SELECT DISTINCT GPV.GPV_ID, AUX.FECHA_CONTABILIZACION
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
				WHERE 1 = 1
				AND AUX.NUFREM = GPV.GPV_NUM_GASTO_HAYA
				AND TIPO = ''GASTO''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0

       			       ) T2 
		        ON ( T1.GPV_ID = T2.GPV_ID )
			WHEN MATCHED THEN UPDATE
			SET T1.GIC_FECHA_CONTABILIZACION = T2.FECHA_CONTABILIZACION,
			    T1.USUARIOMODIFICAR =  '''||V_USUARIOMODIFICAR|| ''',
			    T1.FECHAMODIFICAR = SYSDATE
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GIC_GASTOS_INFO_CONTABILIDAD con gastos no agrupados ' );



    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar fecha de contabilización en gastos agrupados' );
            
                V_MSQL := ' 							
			MERGE INTO '||V_ESQUEMA||'.GIC_GASTOS_INFO_CONTABILIDAD T1
       			 USING (

				SELECT DISTINCT GPV.GPV_ID, AUX.FECHA_CONTABILIZACION
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
				WHERE 1 = 1
				AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
				AND GPV.PRG_ID = PRG.PRG_ID
				AND TIPO = ''PROVISION''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0

       			       ) T2 
		        ON ( T1.GPV_ID = T2.GPV_ID )
			WHEN MATCHED THEN UPDATE
			SET T1.GIC_FECHA_CONTABILIZACION = T2.FECHA_CONTABILIZACION,
			    T1.USUARIOMODIFICAR =  '''||V_USUARIOMODIFICAR|| ''',
			    T1.FECHAMODIFICAR = SYSDATE
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GIC_GASTOS_INFO_CONTABILIDAD con gastos agrupados ' );

--*******************************************************************************************************************************


    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar fecha de pago en gastos no agrupados' );
            
                V_MSQL := ' 							
			MERGE INTO '||V_ESQUEMA||'.GDE_GASTOS_DETALLE_ECONOMICO T1
       			 USING (

				SELECT DISTINCT GPV.GPV_ID, AUX.FECHA_PAGO
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
				WHERE 1 = 1
				AND AUX.NUFREM = GPV.GPV_NUM_GASTO_HAYA
				AND TIPO = ''GASTO''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0
	
      			       ) T2 
		        ON ( T1.GPV_ID = T2.GPV_ID )
			WHEN MATCHED THEN UPDATE
			SET T1.GDE_FECHA_PAGO = T2.FECHA_PAGO,
			    T1.USUARIOMODIFICAR =  '''||V_USUARIOMODIFICAR|| ''',
			    T1.FECHAMODIFICAR = SYSDATE
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GDE_GASTOS_DETALLE_ECONOMICO con gastos no agrupados ' );



    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar fecha de pago en gastos agrupados de Apple de CCPP' );
            
                V_MSQL := ' 							
			MERGE INTO '||V_ESQUEMA||'.GDE_GASTOS_DETALLE_ECONOMICO T1
       			 USING (

				SELECT DISTINCT GPV.GPV_ID, AUX.FECHA_PAGO
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
				WHERE 1 = 1
				AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
				AND GPV.PRG_ID = PRG.PRG_ID
				AND TIPO = ''PROVISION''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0
			        AND     0 < ( SELECT COUNT(1)
		                      		FROM '||V_ESQUEMA||'.GPV_ACT, '||V_ESQUEMA||'.ACT_ACTIVO ACT
		                      		WHERE 1 = 1
		                      		AND GPV_ACT.ACT_ID = ACT.ACT_ID
		                      		AND GPV_ACT.GPV_ID = GPV.GPV_ID
		                      		AND DD_CRA_ID = ( SELECT DD_CRA_ID FROM '||V_ESQUEMA||'.DD_CRA_CARTERA WHERE DD_CRA_CODIGO  = ''07'' )
		                      		AND DD_SCR_ID = ( SELECT DD_SCR_ID FROM '||V_ESQUEMA||'.DD_SCR_SUBCARTERA WHERE DD_SCR_CODIGO = ''138'' ) )
			        AND 0 < ( SELECT COUNT(1)
		                      	FROM '||V_ESQUEMA||'.DD_TGA_TIPOS_GASTO TGA
		                      	WHERE 1 = 1
		                      	AND TGA.DD_TGA_CODIGO = ''05''
		                      	AND TGA.DD_TGA_ID = GPV.DD_TGA_ID )

       			       ) T2 
		        ON ( T1.GPV_ID = T2.GPV_ID )
			WHEN MATCHED THEN UPDATE
			SET T1.GDE_FECHA_PAGO = T2.FECHA_PAGO,
			    T1.USUARIOMODIFICAR =  '''||V_USUARIOMODIFICAR|| ''',
			    T1.FECHAMODIFICAR = SYSDATE
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GDE_GASTOS_DETALLE_ECONOMICO con gastos agrupados de CCPP de apple ' );

--*******************************************************************************************************************************

    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar estado de gastos a Pagado en gastos agrupados' );

                V_MSQL := ' 	
			MERGE INTO '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
			USING (
			  SELECT DISTINCT GPV.GPV_ID
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG, '||V_ESQUEMA||'.GDE_GASTOS_DETALLE_ECONOMICO GDE
				WHERE 1 = 1
				AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
				AND GPV.PRG_ID = PRG.PRG_ID
				AND GDE.GPV_ID = GPV.GPV_ID
				AND TIPO = ''PROVISION''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0
				AND GDE.GDE_FECHA_PAGO IS NOT NULL
				AND GPV.DD_EGA_ID <> ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''05'' ) 			
			) GPV_TO_UPDATE
			ON (GPV.GPV_ID = GPV_TO_UPDATE.GPV_ID)
			WHEN MATCHED THEN UPDATE SET 
			    GPV.DD_EGA_ID = (SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''05'')
			  , GPV.USUARIOMODIFICAR = '''||V_USUARIOMODIFICAR|| '''
			  , GPV.FECHAMODIFICAR = sysdate  
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GPV_GASTOS_PROVEEDOR cambiados a Pagados en gastos agrupados ' );


    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar estado de gastos a Contabilizado en gastos agrupados' );

                V_MSQL := ' 	

			MERGE INTO '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
			USING (

				SELECT DISTINCT GPV.GPV_ID
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG, '||V_ESQUEMA||'.GDE_GASTOS_DETALLE_ECONOMICO GDE, '||V_ESQUEMA||'.GIC_GASTOS_INFO_CONTABILIDAD GIC
				WHERE 1 = 1
				AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
				AND GPV.PRG_ID = PRG.PRG_ID
				AND GDE.GPV_ID = GPV.GPV_ID
				AND GIC.GPV_ID = GPV.GPV_ID
				AND TIPO = ''PROVISION''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0
				AND GDE.GDE_FECHA_PAGO IS NULL
				AND GIC.GIC_FECHA_CONTABILIZACION IS NOT NULL
				AND GPV.DD_EGA_ID <> ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''04'' ) 	
			) GPV_TO_UPDATE
			ON (GPV.GPV_ID = GPV_TO_UPDATE.GPV_ID)
			WHEN MATCHED THEN UPDATE SET 
			    GPV.DD_EGA_ID = (SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''04'')
			  , GPV.USUARIOMODIFICAR = '''||V_USUARIOMODIFICAR|| '''
			  , GPV.FECHAMODIFICAR = sysdate 

		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GPV_GASTOS_PROVEEDOR cambiados a Contabilizados en gastos agrupados ' );

--*******************************************************************************************************************************


    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar estado de gastos a Pagado en gastos no agrupados' );

                V_MSQL := ' 	

			MERGE INTO '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
			USING (
				SELECT DISTINCT
				GPV.GPV_ID
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV,  '||V_ESQUEMA||'.GDE_GASTOS_DETALLE_ECONOMICO GDE, '||V_ESQUEMA||'.GIC_GASTOS_INFO_CONTABILIDAD GIC
				WHERE 1 = 1
				AND AUX.NUFREM = GPV.GPV_NUM_GASTO_HAYA
				AND GDE.GPV_ID = GPV.GPV_ID
				AND GIC.GPV_ID = GPV.GPV_ID
				AND TIPO = ''GASTO''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0
  				AND GDE.GDE_FECHA_PAGO IS NOT NULL
				AND GPV.DD_EGA_ID <> ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''05'' ) 	
				) GPV_TO_UPDATE
			ON (GPV.GPV_ID = GPV_TO_UPDATE.GPV_ID)
			WHEN MATCHED THEN UPDATE SET 
			    GPV.DD_EGA_ID = (SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''05'')
			  , GPV.USUARIOMODIFICAR = '''||V_USUARIOMODIFICAR|| '''
			  , GPV.FECHAMODIFICAR = sysdate  

		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GPV_GASTOS_PROVEEDOR cambiados a Pagados en gastos no agrupados ' );


    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar estado de gastos a Contabilizado en gastos no agrupados' );

                V_MSQL := ' 	

			MERGE INTO '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
			USING (

				SELECT DISTINCT
				GPV.GPV_ID
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.GDE_GASTOS_DETALLE_ECONOMICO GDE, '||V_ESQUEMA||'.GIC_GASTOS_INFO_CONTABILIDAD GIC
				WHERE 1 = 1
				AND AUX.NUFREM = GPV.GPV_NUM_GASTO_HAYA
				AND GDE.GPV_ID = GPV.GPV_ID
				AND GIC.GPV_ID = GPV.GPV_ID
				AND TIPO = ''GASTO''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0
				AND GDE.GDE_FECHA_PAGO IS NULL
				AND GIC.GIC_FECHA_CONTABILIZACION IS NOT NULL
				AND GPV.DD_EGA_ID <> ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''04'' ) 
			) GPV_TO_UPDATE
			ON (GPV.GPV_ID = GPV_TO_UPDATE.GPV_ID)
			WHEN MATCHED THEN UPDATE SET 
			    GPV.DD_EGA_ID = (SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''04'')
			  , GPV.USUARIOMODIFICAR = '''||V_USUARIOMODIFICAR|| '''
			  , GPV.FECHAMODIFICAR = sysdate  
		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GPV_GASTOS_PROVEEDOR cambiados a Contabilizados en gastos no agrupados ' );

--*******************************************************************************************************************************

    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar estado de autorización de propietario de los que han modificado a <Contabilizados> de gastos agrupados' );

                V_MSQL := ' 	

			MERGE INTO '||V_ESQUEMA||'.GGE_GASTOS_GESTION GGE
			USING (
				SELECT DISTINCT
				GPV.GPV_ID
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
				WHERE 1 = 1
				AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
				AND GPV.PRG_ID = PRG.PRG_ID
				AND TIPO = ''PROVISION''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0
				AND GPV.DD_EGA_ID = ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''04'' ) 	
				AND EXISTS ( SELECT 1 FROM '||V_ESQUEMA||'.AUX_REMVIP_5486_GPV AUX_GPV
					     WHERE AUX_GPV.GPV_ID = GPV.GPV_ID 
					     AND AUX_GPV.DD_EGA_ID <> ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''04'' ) 	
					   ) 
				) GPV_TO_UPDATE
			ON (GGE.GPV_ID = GPV_TO_UPDATE.GPV_ID)
			WHEN MATCHED THEN UPDATE SET 
			    GGE.DD_EAP_ID = (SELECT DD_EAP_ID FROM '||V_ESQUEMA||'.DD_EAP_ESTADOS_AUTORIZ_PROP WHERE DD_EAP_CODIGO = ''07'')
			  , GGE.USUARIOMODIFICAR = '''||V_USUARIOMODIFICAR|| '''
			  , GGE.FECHAMODIFICAR = sysdate  

		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GGE_GASTOS_GESTION cambiados a <Autorizado por Propietario> de gastos agrupados' );




    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar estado de autorización de propietario de los que han modificado a <Contabilizados> de gastos no agrupados' );

                V_MSQL := ' 	

			MERGE INTO '||V_ESQUEMA||'.GGE_GASTOS_GESTION GGE
			USING (
				SELECT DISTINCT
				GPV.GPV_ID
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
				WHERE 1 = 1
				AND AUX.NUFREM = GPV.GPV_NUM_GASTO_HAYA
				AND TIPO = ''GASTO''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0
				AND GPV.DD_EGA_ID = ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''04'' ) 	
				AND EXISTS ( SELECT 1 FROM '||V_ESQUEMA||'.AUX_REMVIP_5486_GPV AUX_GPV
					     WHERE AUX_GPV.GPV_ID = GPV.GPV_ID 
					     AND AUX_GPV.DD_EGA_ID <> ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''04'' ) 	
					   ) 
				) GPV_TO_UPDATE
			ON (GGE.GPV_ID = GPV_TO_UPDATE.GPV_ID)
			WHEN MATCHED THEN UPDATE SET 
			    GGE.DD_EAP_ID = (SELECT DD_EAP_ID FROM '||V_ESQUEMA||'.DD_EAP_ESTADOS_AUTORIZ_PROP WHERE DD_EAP_CODIGO = ''07'')
			  , GGE.USUARIOMODIFICAR = '''||V_USUARIOMODIFICAR|| '''
			  , GGE.FECHAMODIFICAR = sysdate  

		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' GGE_GASTOS_GESTION cambiados a <Autorizado por Propietario> de gastos no agrupados' );

--*******************************************************************************************************************************

    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar estado de la provisión a <Contabilizada> si todos los gastos están contabilizados' );

                V_MSQL := ' 	

			MERGE INTO '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
			USING (
				SELECT
				DISTINCT PRG.PRG_ID
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX,  '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
				WHERE 1 = 1
				AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
				AND TIPO = ''PROVISION''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND PRG.BORRADO = 0
				AND  ( SELECT COUNT(1) 
				       FROM '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
				       WHERE GPV.PRG_ID = PRG.PRG_ID
				       AND GPV.DD_EGA_ID = ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''04'' ) 	
				     ) = 
				    ( SELECT COUNT(1) 
				       FROM '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
				       WHERE GPV.PRG_ID = PRG.PRG_ID
				     )
			     ) AUX
			ON ( PRG.PRG_ID = AUX.PRG_ID )
			WHEN MATCHED THEN UPDATE SET 
			    PRG.DD_EPR_ID = (SELECT DD_EPR_ID FROM '||V_ESQUEMA||'.DD_EPR_ESTADOS_PROVISION_GASTO WHERE DD_EPR_CODIGO = ''06'')
			  , PRG.USUARIOMODIFICAR = '''||V_USUARIOMODIFICAR|| '''
			  , PRG.FECHAMODIFICAR = sysdate  

		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' PRG_PROVISION_FONDOS cambiados a <Contabilizado> ' );


    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar estado de la provisión a <Pagado> si todos los gastos están pagados' );

                V_MSQL := ' 	

			MERGE INTO '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
			USING (
				SELECT
				DISTINCT PRG.PRG_ID
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX,  '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
				WHERE 1 = 1
				AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
				AND TIPO = ''PROVISION''
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND PRG.BORRADO = 0
				AND  ( SELECT COUNT(1) 
				       FROM '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
				       WHERE GPV.PRG_ID = PRG.PRG_ID
				       AND GPV.DD_EGA_ID = ( SELECT DD_EGA_ID FROM '||V_ESQUEMA||'.DD_EGA_ESTADOS_GASTO WHERE DD_EGA_CODIGO = ''05'' ) 	
				     ) = 
				    ( SELECT COUNT(1) 
				       FROM '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
				       WHERE GPV.PRG_ID = PRG.PRG_ID
				     )
			     ) AUX
			ON ( PRG.PRG_ID = AUX.PRG_ID )
			WHEN MATCHED THEN UPDATE SET 
			    PRG.DD_EPR_ID = (SELECT DD_EPR_ID FROM '||V_ESQUEMA||'.DD_EPR_ESTADOS_PROVISION_GASTO WHERE DD_EPR_CODIGO = ''07'')
			  , PRG.USUARIOMODIFICAR = '''||V_USUARIOMODIFICAR|| '''
			  , PRG.FECHAMODIFICAR = sysdate  

		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' PRG_PROVISION_FONDOS cambiados a <Pagado> ' );

--*******************************************************************************************************************************


    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar el histórico de la cabecera de envios a ASPRO' );

                V_MSQL := ' 	
			MERGE INTO '||V_ESQUEMA||'.H_ASPRO_10_CABECERA HCAB USING
			(


			SELECT DISTINCT CAB.IDNOPE, CAB.CODREG, CAB.COENTV, REPLACE( AUX.FECHA_CONTABILIZACION, ''/'', '''' ) AS FECTBL, REPLACE( AUX.FECHA_PAGO, ''/'', '''' ) AS FEPAGA, CAB.COTIFA
			FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.H_ASPRO_10_CABECERA CAB
			WHERE 1 = 1
			AND AUX.NUFREM = GPV.GPV_NUM_GASTO_HAYA
			AND TIPO = ''GASTO''
			AND CAB.NUFREM = GPV.GPV_NUM_GASTO_HAYA
			AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
			AND GPV.BORRADO = 0
			UNION
			SELECT DISTINCT CAB.IDNOPE, CAB.CODREG, CAB.COENTV, REPLACE( AUX.FECHA_CONTABILIZACION, ''/'', '''' ) AS FECTBL, REPLACE( AUX.FECHA_PAGO, ''/'', '''' ) AS FEPAGA, CAB.COTIFA
			FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.H_ASPRO_10_CABECERA CAB, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
			WHERE 1 = 1
			AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
			AND GPV.PRG_ID = PRG.PRG_ID
			AND TIPO = ''PROVISION''
			AND CAB.NUFREM = PRG.PRG_NUM_PROVISION
			AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
			AND GPV.BORRADO = 0

			) AUXH
			ON (HCAB.IDNOPE = AUXH.IDNOPE
			    AND HCAB.CODREG = AUXH.CODREG
			    AND HCAB.COENTV = AUXH.COENTV)
			WHEN MATCHED THEN UPDATE SET 
			     HCAB.FEPAGA = CASE WHEN AUXH.COTIFA = ''R'' THEN AUXH.FEPAGA ELSE HCAB.FEPAGA END
			   , HCAB.FECTBL = AUXH.FECTBL
			   , HCAB.USUARIO_RECEPCION = '''||V_USUARIOMODIFICAR|| '''
			   , HCAB.FECHA_RECEPCION = sysdate

		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' registros del histórico de envios a ASPRO ' );



    DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizar el histórico de la cabecera de envios a ASPRO de agrupaciones de CCPP de apple' );

                V_MSQL := ' 	
			MERGE INTO '||V_ESQUEMA||'.H_ASPRO_10_CABECERA HCAB USING
			(

				SELECT DISTINCT CAB.IDNOPE, CAB.CODREG, CAB.COENTV, REPLACE( AUX.FECHA_CONTABILIZACION, ''/'', '''' ) AS FECTBL, REPLACE( AUX.FECHA_PAGO, ''/'', '''' ) AS FEPAGA, CAB.COTIFA
				FROM '||V_ESQUEMA||'.AUX_REMVIP_5486 AUX, '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV, '||V_ESQUEMA||'.H_ASPRO_10_CABECERA CAB, '||V_ESQUEMA||'.PRG_PROVISION_GASTOS PRG
				WHERE 1 = 1
				AND AUX.NUFREM = PRG.PRG_NUM_PROVISION
				AND GPV.PRG_ID = PRG.PRG_ID
				AND TIPO = ''PROVISION''
				AND CAB.NUFREM = PRG.PRG_NUM_PROVISION
				AND ESTADO IN ( ''CONTABILIZADO'', ''PAGADO'' )
				AND GPV.BORRADO = 0
			        AND     0 < ( SELECT COUNT(1)
		                      		FROM '||V_ESQUEMA||'.GPV_ACT, '||V_ESQUEMA||'.ACT_ACTIVO ACT
		                      		WHERE 1 = 1
		                      		AND GPV_ACT.ACT_ID = ACT.ACT_ID
		                      		AND GPV_ACT.GPV_ID = GPV.GPV_ID
		                      		AND DD_CRA_ID = ( SELECT DD_CRA_ID FROM '||V_ESQUEMA||'.DD_CRA_CARTERA WHERE DD_CRA_CODIGO  = ''07'' )
		                      		AND DD_SCR_ID = ( SELECT DD_SCR_ID FROM '||V_ESQUEMA||'.DD_SCR_SUBCARTERA WHERE DD_SCR_CODIGO = ''138'' ) )
			        AND 0 < ( SELECT COUNT(1)
		                      	FROM '||V_ESQUEMA||'.DD_TGA_TIPOS_GASTO TGA
		                      	WHERE 1 = 1
		                      	AND TGA.DD_TGA_CODIGO = ''05''
		                      	AND TGA.DD_TGA_ID = GPV.DD_TGA_ID )
			) AUXH
			ON (HCAB.IDNOPE = AUXH.IDNOPE
			    AND HCAB.CODREG = AUXH.CODREG
			    AND HCAB.COENTV = AUXH.COENTV)
			WHEN MATCHED THEN UPDATE SET 
			     HCAB.FEPAGA = AUXH.FEPAGA
			   , HCAB.USUARIO_RECEPCION = '''||V_USUARIOMODIFICAR|| '''
			   , HCAB.FECHA_RECEPCION = sysdate

		';

	EXECUTE IMMEDIATE V_MSQL;

        DBMS_OUTPUT.PUT_LINE('[INFO]: Actualizados ' || SQL%ROWCOUNT || ' registros del histórico de envios a ASPRO de CCPP de apple' );

--*******************************************************************************************************************************

  	COMMIT;

    	DBMS_OUTPUT.PUT_LINE('[FIN] ');



EXCEPTION

   WHEN OTHERS THEN
        err_num := SQLCODE;
        err_msg := SQLERRM;

        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
        DBMS_OUTPUT.put_line(err_msg);

        ROLLBACK;
        RAISE;          

END;
/
EXIT;
