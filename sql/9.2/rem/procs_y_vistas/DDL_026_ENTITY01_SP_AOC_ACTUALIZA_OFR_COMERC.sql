--/*
--##########################################
--## AUTOR=David Gonzalez
--## FECHA_CREACION=20161007
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.1
--## INCIDENCIA_LINK=HREOS-789
--## PRODUCTO=NO
--## Finalidad: Stored Procedure que actualiza ofertas en REM.
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE


WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


create or replace PROCEDURE SP_AOC_ACTUALIZA_OFR_COMERC (
      V_USUARIO VARCHAR2 DEFAULT 'SP_AOC_OFR',
      PL_OUTPUT       OUT VARCHAR2
)
AS
--David González
--HREOS-789
--07-10-2016
--V0.1

V_ESQUEMA VARCHAR2(15 CHAR) := 'REM01';
V_ESQUEMA_MASTER VARCHAR2(15 CHAR) := 'REMMASTER';
V_SQL VARCHAR2(4000 CHAR);
V_COUNT NUMBER(16);

BEGIN

  PL_OUTPUT := ' ';

  DBMS_OUTPUT.PUT_LINE('[INFO] INICIO DEL PROCESO DE ACTUALIZACIÓN DE OFERTAS.');
  DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------');

  DBMS_OUTPUT.PUT_LINE('[INFO] -BLOQUE ANULACIONES-');
  PL_OUTPUT := '[INFO] -BLOQUE ANULACIONES-'||CHR(10)||CHR(10);

  EXECUTE IMMEDIATE '
  SELECT COUNT(*) FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC WHERE COACHY = ''1''
  '
  INTO V_COUNT
  ;

  IF V_COUNT > 0 THEN

  	DBMS_OUTPUT.PUT_LINE('[INFO] Existen '||V_COUNT||' ofertas que anular.');
    PL_OUTPUT := PL_OUTPUT||'[INFO] Existen '||V_COUNT||' ofertas que anular.'||CHR(10)||CHR(10);

  ELSE

  	DBMS_OUTPUT.PUT_LINE('[INFO] No hay ofertas que anular.');
    PL_OUTPUT := PL_OUTPUT||'[INFO] No hay ofertas que anular.'||CHR(10)||CHR(10);

  END IF;

  DBMS_OUTPUT.PUT_LINE('[INFO] Anulando Expedientes Comerciales.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Anulando Expedientes Comerciales.'||CHR(10)||CHR(10);

  --ACTUALIZAMOS
	-- ESTADO EXPEDIENTE COMERCIAL -> ANULADO
	-- ECO_FECHA_ANULACION, Anulamos el expediente comercial.
	-- ECO_MOTIVO_ANULACION, Exponemos el motivo.
  EXECUTE IMMEDIATE '
	MERGE INTO '||V_ESQUEMA||'.ECO_EXPEDIENTE_COMERCIAL ECO USING
	(
	  SELECT DISTINCT
	  APR.ACT_NUMERO_UVEM,
	  ACT.ACT_ID,
	  APR.OFERTA_REM,
	  OFR.OFR_ID,
	  ECO.ECO_ID,
	  (SELECT DD_EEC_ID FROM '||V_ESQUEMA||'.DD_EEC_EST_EXP_COMERCIAL WHERE DD_EEC_CODIGO = ''02'') AS DD_EEC_ID,
	  APR.FEC_BAJA AS ECO_FECHA_ANULACION,
	  APR.FEC_INFO AS OFR_FECHA_ACCION, 
	  APR.COD_MOT_ANULA_DENEGA, 
	  EQV.DD_DESCRIPCION_BANKIA AS eco_motivo_anulacion
	  FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC APR
	  INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	    ON ACT.ACT_NUM_ACTIVO_UVEM = APR.ACT_NUMERO_UVEM
	  INNER JOIN '||V_ESQUEMA||'.ACT_OFR
	    ON ACT_OFR.ACT_ID = ACT.ACT_ID
	  INNER JOIN '||V_ESQUEMA||'.OFR_OFERTAS OFR
	    ON OFR.OFR_ID = ACT_OFR.OFR_ID
	    and ofr.ofr_id = apr.oferta_rem
	  LEFT JOIN '||V_ESQUEMA||'.ECO_EXPEDIENTE_COMERCIAL ECO
	    ON ECO.OFR_ID = OFR.OFR_ID
	  LEFT JOIN '||V_ESQUEMA||'.DD_EQV_BANKIA_REM EQV
	    ON EQV.DD_NOMBRE_BANKIA = ''DD_COD_MOT_ANULA_DENEGA''
	    AND EQV.DD_CODIGO_BANKIA = APR.COD_MOT_ANULA_DENEGA
	  WHERE CORTOH = 0
	  AND COACHY = ''1''
	) TMP
	ON (ECO.ECO_ID = TMP.ECO_ID)
	WHEN MATCHED THEN UPDATE
	SET
	ECO.DD_EEC_ID = TMP.DD_EEC_ID,
	ECO.ECO_FECHA_ANULACION = TMP.ECO_FECHA_ANULACION,
  ECO.ECO_MOTIVO_ANULACION = TMP.ECO_MOTIVO_ANULACION,
	ECO.USUARIOMODIFICAR = '''||V_USUARIO||''',
	ECO.FECHAMODIFICAR = SYSDATE
	WHERE ECO.DD_EEC_ID = (SELECT DD_EEC_ID FROM '||V_ESQUEMA||'.DD_EEC_EST_EXP_COMERCIAL WHERE DD_EEC_CODIGO = ''01'')
	'
	;
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han anulado '||V_COUNT||' expedientes comerciales.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Se han anulado '||V_COUNT||' expedientes comerciales.'||CHR(10)||CHR(10);

	DBMS_OUTPUT.PUT_LINE('[INFO] Descongelando Ofertas.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Descongelando Ofertas.'||CHR(10)||CHR(10);

  --DESCONGELAMOS OFERTAS DEL ACTIVO
	-- ESTADO OFERTA -> PENDIENTE
	EXECUTE IMMEDIATE '
	MERGE INTO '||V_ESQUEMA||'.OFR_OFERTAS OFR USING
	(
	    SELECT DISTINCT
	    ACT.ACT_ID,
	    OFR.OFR_ID,
	    OFR.DD_EOF_ID,
	    (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''04'') AS DD_EOF_ID_NEW
	    FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC APR
	    INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	      ON ACT.ACT_NUM_ACTIVO_UVEM = APR.ACT_NUMERO_UVEM
	    INNER JOIN '||V_ESQUEMA||'.ACT_OFR AOF
	      ON AOF.ACT_ID = ACT.ACT_ID
	    INNER JOIN '||V_ESQUEMA||'.OFR_OFERTAS OFR
	      ON OFR.OFR_ID = AOF.OFR_ID
	    WHERE APR.CORTOH = 0
	    AND APR.COACHY = ''1''
	    AND (OFR.DD_EOF_ID = (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''01'')
	    OR OFR.DD_EOF_ID = (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''04''))
	) TMP
	ON (OFR.OFR_ID = TMP.OFR_ID)
	WHEN MATCHED THEN UPDATE SET
	OFR.DD_EOF_ID = TMP.DD_EOF_ID_NEW,
	OFR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	OFR.FECHAMODIFICAR = SYSDATE
  WHERE OFR.DD_EOF_ID != (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''03'')
  AND OFR.DD_EOF_ID != (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''02'')
	'
	;
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han descongelado '||V_COUNT||' ofertas relacionadas con la anulación.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Se han descongelado '||V_COUNT||' ofertas relacionadas con la anulación.'||CHR(10)||CHR(10);
  
  --ANULAMOS LA OFERTA A TRATAR
	-- ESTADO OFERTA -> ANULADA
  EXECUTE IMMEDIATE '
	MERGE INTO '||V_ESQUEMA||'.OFR_OFERTAS OFR USING
	(
	    SELECT DISTINCT
	    OFR.OFR_ID,
	    (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''05'') AS DD_EOF_ID_NEW,
      APR.FEC_INFO AS OFR_FECHA_ACCION
	    FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC APR
	    INNER JOIN '||V_ESQUEMA||'.OFR_OFERTAS OFR
	      ON OFR.OFR_ID = APR.OFERTA_REM
	    WHERE APR.CORTOH = 0
	    AND APR.COACHY = ''1''
	) TMP
	ON (OFR.OFR_ID = TMP.OFR_ID)
	WHEN MATCHED THEN UPDATE SET
	OFR.DD_EOF_ID = TMP.DD_EOF_ID_NEW,
  OFR.OFR_FECHA_ACCION = TMP.OFR_FECHA_ACCION,
	OFR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	OFR.FECHAMODIFICAR = SYSDATE
  WHERE OFR.DD_EOF_ID != (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''05'')
	'
	;
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han anulado '||V_COUNT||' ofertas.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Se han anulado '||V_COUNT||' ofertas.'||CHR(10)||CHR(10);
  
  PL_OUTPUT := PL_OUTPUT||'---------------------------------------------------------------------'||CHR(10)||CHR(10);
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

  DBMS_OUTPUT.PUT_LINE('[INFO] -BLOQUE DENEGACIONES-');
  PL_OUTPUT := PL_OUTPUT||'[INFO] -BLOQUE DENEGACIONES-'||CHR(10)||CHR(10);

  EXECUTE IMMEDIATE '
  SELECT COUNT(*) FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC WHERE COACHY = ''2''
  '
  INTO V_COUNT
  ;

  IF V_COUNT > 0 THEN

  	DBMS_OUTPUT.PUT_LINE('[INFO] Existen '||V_COUNT||' ofertas que denegar.');
    PL_OUTPUT := PL_OUTPUT||'[INFO] Existen '||V_COUNT||' ofertas que denegar.'||CHR(10)||CHR(10);

  ELSE

  	DBMS_OUTPUT.PUT_LINE('[INFO] No hay ofertas que denegar.');
    PL_OUTPUT := PL_OUTPUT||'[INFO] No hay ofertas que denegar.'||CHR(10)||CHR(10);

  END IF;

  DBMS_OUTPUT.PUT_LINE('[INFO] Denegando Expedientes Comerciales.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Denegando Expedientes Comerciales.'||CHR(10)||CHR(10);

  --ACTUALIZAMOS
  -- ESTADO EXPEDIENTE COMERCIAL -> DENEGADO
  EXECUTE IMMEDIATE '
    MERGE INTO '||V_ESQUEMA||'.ECO_EXPEDIENTE_COMERCIAL ECO USING
  (
    SELECT DISTINCT
    APR.ACT_NUMERO_UVEM,
    ACT.ACT_ID,
    APR.OFERTA_REM,
    OFR.OFR_ID,
    ECO.ECO_ID,
    (SELECT DD_EEC_ID FROM '||V_ESQUEMA||'.DD_EEC_EST_EXP_COMERCIAL WHERE DD_EEC_CODIGO = ''12'') AS DD_EEC_ID,
    APR.COD_MOT_ANULA_DENEGA, 
    EQV.DD_DESCRIPCION_BANKIA AS eco_motivo_anulacion
    FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC APR
    INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
      ON ACT.ACT_NUM_ACTIVO_UVEM = APR.ACT_NUMERO_UVEM
    INNER JOIN '||V_ESQUEMA||'.ACT_OFR 
      ON ACT_OFR.ACT_ID = ACT.ACT_ID
    INNER JOIN '||V_ESQUEMA||'.OFR_OFERTAS OFR
      ON OFR.OFR_ID = ACT_OFR.OFR_ID
      and ofr.ofr_id = apr.oferta_rem
    LEFT JOIN '||V_ESQUEMA||'.ECO_EXPEDIENTE_COMERCIAL ECO
      ON ECO.OFR_ID = OFR.OFR_ID
    LEFT JOIN '||V_ESQUEMA||'.DD_EQV_BANKIA_REM EQV
      ON EQV.DD_NOMBRE_BANKIA = ''DD_COD_MOT_ANULA_DENEGA''
      AND EQV.DD_CODIGO_BANKIA = APR.COD_MOT_ANULA_DENEGA
    WHERE CORTOH = 0
    AND COACHY = ''2''
  ) TMP
  ON (ECO.ECO_ID = TMP.ECO_ID) 
  WHEN MATCHED THEN UPDATE 
  SET
  ECO.DD_EEC_ID = TMP.DD_EEC_ID,
  ECO.USUARIOMODIFICAR = '''||V_USUARIO||''',
  ECO.FECHAMODIFICAR = SYSDATE
  WHERE ECO.DD_EEC_ID = (SELECT DD_EEC_ID FROM DD_EEC_EST_EXP_COMERCIAL WHERE DD_EEC_CODIGO = ''01'')
	'
	;
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han denegado '||V_COUNT||' expedientes comerciales.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Se han denegado '||V_COUNT||' expedientes comerciales.'||CHR(10)||CHR(10);

	DBMS_OUTPUT.PUT_LINE('[INFO] Descongelando Ofertas.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Descongelando Ofertas.'||CHR(10)||CHR(10);

  --DESCONGELAMOS OFERTAS DEL ACTIVO
	-- ESTADO OFERTA -> PENDIENTE
	EXECUTE IMMEDIATE '
	MERGE INTO '||V_ESQUEMA||'.OFR_OFERTAS OFR USING
	(
	    SELECT DISTINCT
	    ACT.ACT_ID,
	    OFR.OFR_ID,
	    OFR.DD_EOF_ID,
	    (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''04'') AS DD_EOF_ID_NEW
	    FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC APR
	    INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	      ON ACT.ACT_NUM_ACTIVO_UVEM = APR.ACT_NUMERO_UVEM
	    INNER JOIN '||V_ESQUEMA||'.ACT_OFR AOF
	      ON AOF.ACT_ID = ACT.ACT_ID
	    INNER JOIN '||V_ESQUEMA||'.OFR_OFERTAS OFR
	      ON OFR.OFR_ID = AOF.OFR_ID
	    WHERE APR.CORTOH = 0
	    AND APR.COACHY = ''2''
	    AND (OFR.DD_EOF_ID = (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''01'')
	    OR OFR.DD_EOF_ID = (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''04''))
	) TMP
	ON (OFR.OFR_ID = TMP.OFR_ID)
	WHEN MATCHED THEN UPDATE SET
	OFR.DD_EOF_ID = TMP.DD_EOF_ID_NEW,
	OFR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	OFR.FECHAMODIFICAR = SYSDATE
  WHERE OFR.DD_EOF_ID != (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''03'')
  AND OFR.DD_EOF_ID != (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''02'')
	'
	;
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han descongelado '||V_COUNT||' ofertas relacionadas con la denegación.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Se han descongelado '||V_COUNT||' ofertas relacionadas con la denegación.'||CHR(10)||CHR(10);
  
  --ANULAMOS LA OFERTA A TRATAR
	-- ESTADO OFERTA -> ANULADA
  EXECUTE IMMEDIATE '
	MERGE INTO '||V_ESQUEMA||'.OFR_OFERTAS OFR USING
	(
	    SELECT DISTINCT
	    OFR.OFR_ID,
	    (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''02'') AS DD_EOF_ID_NEW,
      APR.FEC_INFO AS OFR_FECHA_ACCION
	    FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC APR
	    INNER JOIN '||V_ESQUEMA||'.OFR_OFERTAS OFR
	      ON OFR.OFR_ID = APR.OFERTA_REM
	    WHERE APR.CORTOH = 0
	    AND APR.COACHY = ''2''
	) TMP
	ON (OFR.OFR_ID = TMP.OFR_ID)
	WHEN MATCHED THEN UPDATE SET
	OFR.DD_EOF_ID = TMP.DD_EOF_ID_NEW,
  OFR.OFR_FECHA_ACCION = TMP.OFR_FECHA_ACCION,
	OFR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	OFR.FECHAMODIFICAR = SYSDATE
  WHERE OFR.DD_EOF_ID != (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''05'')
	'
	;
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han rechazado '||V_COUNT||' ofertas.');
  PL_OUTPUT := PL_OUTPUT||'[INFO] Se han rechazado '||V_COUNT||' ofertas.'||CHR(10)||CHR(10);
  
  DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------');
  PL_OUTPUT := PL_OUTPUT||'---------------------------------------------------------------------'||CHR(10)||CHR(10);
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
/*
  DBMS_OUTPUT.PUT_LINE('[INFO] -BLOQUE DEVOLUCIONES-');

  EXECUTE IMMEDIATE '
  SELECT COUNT(*) FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC WHERE COACHY = ''3''
  '
  INTO V_COUNT
  ;

  IF V_COUNT > 0 THEN

  	DBMS_OUTPUT.PUT_LINE('[INFO] Existen '||V_COUNT||' devoluciones.');

  ELSE

  	DBMS_OUTPUT.PUT_LINE('[INFO] No hay devoluciones.');

  END IF;

  DBMS_OUTPUT.PUT_LINE('[INFO] Informando devoluciones.');

  EXECUTE IMMEDIATE '
 	--ACTUALIZAMOS
  -- ESTADO EXPEDIENTE COMERCIAL -> DENEGADO
    MERGE INTO ECO_EXPEDIENTE_COMERCIAL ECO USING
  (
    SELECT DISTINCT
    APR.ACT_NUMERO_UVEM,
    ACT.ACT_ID,
    APR.OFERTA_REM,
    OFR.OFR_ID,
    ECO.ECO_ID,
    (SELECT DD_EEC_ID FROM DD_EEC_EST_EXP_COMERCIAL WHERE DD_EEC_CODIGO = ''12'') AS DD_EEC_ID,
    APR.COD_MOT_ANULA_DENEGA, --eco.eco_motivo_anulacion
    EQV.DD_DESCRIPCION_BANKIA AS eco_motivo_anulacion
    FROM APR_AUX_URCOMERC APR
    INNER JOIN ACT_ACTIVO ACT
      ON ACT.ACT_NUM_ACTIVO_UVEM = APR.ACT_NUMERO_UVEM
    INNER JOIN ACT_OFR 
      ON ACT_OFR.ACT_ID = ACT.ACT_ID
    INNER JOIN OFR_OFERTAS OFR
      ON OFR.OFR_ID = ACT_OFR.OFR_ID
      and ofr.ofr_id = apr.oferta_rem
    LEFT JOIN ECO_EXPEDIENTE_COMERCIAL ECO
      ON ECO.OFR_ID = OFR.OFR_ID
    LEFT JOIN DD_EQV_BANKIA_REM EQV
      ON EQV.DD_NOMBRE_BANKIA = ''DD_COD_MOT_ANULA_DENEGA''
      AND EQV.DD_CODIGO_BANKIA = APR.COD_MOT_ANULA_DENEGA
    WHERE CORTOH = 0
    AND COACHY = ''2''
  ) TMP
  ON (ECO.ECO_ID = TMP.ECO_ID) 
  WHEN MATCHED THEN UPDATE 
  SET
  ECO.DD_EEC_ID = TMP.DD_EEC_ID,
  ECO.USUARIOMODIFICAR = '''||V_USUARIO||''',
  ECO.FECHAMODIFICAR = SYSDATE
  WHERE ECO.DD_EEC_ID = (SELECT DD_EEC_ID FROM DD_EEC_EST_EXP_COMERCIAL WHERE DD_EEC_CODIGO = ''01'')
	'
	;
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han denegado '||V_COUNT||' expedientes comerciales.');

	DBMS_OUTPUT.PUT_LINE('[INFO] Descongelando Ofertas.');

	EXECUTE IMMEDIATE '
	--DESCONGELAMOS OFERTAS DEL ACTIVO
	-- ESTADO OFERTA -> PENDIENTE
	MERGE INTO OFR_OFERTAS OFR USING
	(
	    SELECT DISTINCT
	    ACT.ACT_ID,
	    OFR.OFR_ID,
	    OFR.DD_EOF_ID,
	    (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''04'') AS DD_EOF_ID_NEW
	    FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC APR
	    INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT
	      ON ACT.ACT_NUM_ACTIVO_UVEM = APR.ACT_NUMERO_UVEM
	    INNER JOIN '||V_ESQUEMA||'.ACT_OFR AOF
	      ON AOF.ACT_ID = ACT.ACT_ID
	    INNER JOIN '||V_ESQUEMA||'.OFR_OFERTAS OFR
	      ON OFR.OFR_ID = AOF.OFR_ID
	    WHERE APR.CORTOH = 0
	    AND APR.COACHY = ''2''
	    AND (OFR.DD_EOF_ID = (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''01'')
	    OR OFR.DD_EOF_ID = (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''04''))
	) TMP
	ON (OFR.OFR_ID = TMP.OFR_ID)
	WHEN MATCHED THEN UPDATE SET
	OFR.DD_EOF_ID = TMP.DD_EOF_ID_NEW,
	OFR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	OFR.FECHAMODIFICAR = SYSDATE
  WHERE OFR.DD_EOF_ID != (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''03'')
  AND OFR.DD_EOF_ID != (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''02'')
	'
	;
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han descongelado '||V_COUNT||' ofertas relacionadas con la denegación.');
  
  EXECUTE IMMEDIATE '
	--ANULAMOS LA OFERTA A TRATAR
	-- ESTADO OFERTA -> ANULADA
	MERGE INTO OFR_OFERTAS OFR USING
	(
	    SELECT DISTINCT
	    OFR.OFR_ID,
	    (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''02'') AS DD_EOF_ID_NEW,
      APR.FEC_INFO AS OFR_FECHA_ACCION, --OFR.OFR_FECHA_ACCION
	    FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC APR
	    INNER JOIN '||V_ESQUEMA||'.OFR_OFERTAS OFR
	      ON OFR.OFR_ID = APR.OFERTA_REM
	    WHERE APR.CORTOH = 0
	    AND APR.COACHY = ''2''
	) TMP
	ON (OFR.OFR_ID = TMP.OFR_ID)
	WHEN MATCHED THEN UPDATE SET
	OFR.DD_EOF_ID = TMP.DD_EOF_ID_NEW,
	OFR.USUARIOMODIFICAR = '''||V_USUARIO||''',
	OFR.FECHAMODIFICAR = SYSDATE
  WHERE OFR.DD_EOF_ID != (SELECT DD_EOF_ID FROM '||V_ESQUEMA||'.DD_EOF_ESTADOS_OFERTA WHERE DD_EOF_CODIGO = ''05'')
	'
	;
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han rechazado '||V_COUNT||' ofertas.');
  */
  DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------');
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

  DBMS_OUTPUT.PUT_LINE('[INFO] -BLOQUE FINANCIACIÓN-');

  EXECUTE IMMEDIATE '
  SELECT COUNT(*) FROM '||V_ESQUEMA||'.APR_AUX_URCOMERC WHERE COACHY = ''4''
  '
  INTO V_COUNT
  ;

  IF V_COUNT > 0 THEN

  	DBMS_OUTPUT.PUT_LINE('[INFO] Existen '||V_COUNT||' financiaciones.');

  ELSE

  	DBMS_OUTPUT.PUT_LINE('[INFO] No hay financiaciones.');

  END IF;

  DBMS_OUTPUT.PUT_LINE('[INFO] Informando financiaciones.');

  /*EXECUTE IMMEDIATE '
 	
	'
	;*/
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han informado '||V_COUNT||' financiaciones.');

	DBMS_OUTPUT.PUT_LINE('[INFO] Descongelando Ofertas.');

	/*EXECUTE IMMEDIATE '
	
	'
	;*/
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han descongelado '||V_COUNT||' ofertas relacionadas con la financiación.');
  
  /*EXECUTE IMMEDIATE '
	
	'
	;*/
  
  V_COUNT := SQL%ROWCOUNT;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] Se han informado '||V_COUNT||' financiaciones.');
  
  DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------');

  




    DBMS_OUTPUT.PUT_LINE('[OK] - PROCESO FINALIZADO.');

EXCEPTION

    WHEN OTHERS THEN

        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion: '||TO_CHAR(SQLCODE));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------');
        DBMS_OUTPUT.put_line(SQLERRM);

    ROLLBACK;
    RAISE;

END SP_AOC_ACTUALIZA_OFR_COMERC;
/
EXIT