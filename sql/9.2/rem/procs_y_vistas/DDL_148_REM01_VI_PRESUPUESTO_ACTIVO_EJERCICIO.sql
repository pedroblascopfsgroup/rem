  --/*
--##########################################
--## AUTOR=Daniel Algaba
--## FECHA_CREACION=20190331
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.2
--## INCIDENCIA_LINK=HREOS-5992
--## PRODUCTO=NO
--## Finalidad: Creación de vista auxiliar para calcular el presupuesto de una Activo Matriz
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 

DECLARE
    seq_count number(3); -- Vble. para validar la existencia de las Secuencias.
    table_count number(3); -- Vble. para validar la existencia de las Tablas.
    v_column_count number(3); -- Vble. para validar la existencia de las Columnas.    
    v_constraint_count number(3); -- Vble. para validar la existencia de las Constraints.
    err_num NUMBER; -- N?mero de errores
    err_msg VARCHAR2(2048); -- Mensaje de error
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquemas
    V_ESQUEMA_MASTER VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquemas
    V_MSQL VARCHAR2(4000 CHAR); 

    CUENTA NUMBER;
    
BEGIN

  SELECT COUNT(*) INTO CUENTA FROM ALL_OBJECTS WHERE OBJECT_NAME = 'V_PRESUPUESTO_ACTIVO_EJERCICIO' AND OWNER=V_ESQUEMA AND OBJECT_TYPE='MATERIALIZED VIEW';  
  IF CUENTA>0 THEN
    DBMS_OUTPUT.PUT_LINE('DROP MATERIALIZED VIEW '|| V_ESQUEMA ||'.V_PRESUPUESTO_ACTIVO_EJERCICIO...');
    EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW ' || V_ESQUEMA || '.V_PRESUPUESTO_ACTIVO_EJERCICIO';  
    DBMS_OUTPUT.PUT_LINE('DROP MATERIALIZED VIEW '|| V_ESQUEMA ||'.V_PRESUPUESTO_ACTIVO_EJERCICIO... borrada OK');
  END IF;

  SELECT COUNT(*) INTO CUENTA FROM ALL_OBJECTS WHERE OBJECT_NAME = 'V_PRESUPUESTO_ACTIVO_EJERCICIO' AND OWNER=V_ESQUEMA AND OBJECT_TYPE='VIEW';  
  IF CUENTA>0 THEN
    DBMS_OUTPUT.PUT_LINE('DROP VIEW '|| V_ESQUEMA ||'.V_PRESUPUESTO_ACTIVO_EJERCICIO...');
    EXECUTE IMMEDIATE 'DROP VIEW ' || V_ESQUEMA || '.V_PRESUPUESTO_ACTIVO_EJERCICIO';  
    DBMS_OUTPUT.PUT_LINE('DROP VIEW '|| V_ESQUEMA ||'.V_PRESUPUESTO_ACTIVO_EJERCICIO... borrada OK');
  END IF;

  DBMS_OUTPUT.PUT_LINE('CREATE VIEW '|| V_ESQUEMA ||'.V_PRESUPUESTO_ACTIVO_EJERCICIO...');
  EXECUTE IMMEDIATE 'CREATE VIEW ' || V_ESQUEMA || '.V_PRESUPUESTO_ACTIVO_EJERCICIO 
		
	AS	
  WITH INCREMENTO AS (
	    SELECT PTO.ACT_ID ACT1, NVL(SUM(NVL(INC.INP_IMPORTE_INCREMENTO,0)),0) INCREMENTOS, NVL(PTO.PTO_IMPORTE_INICIAL,0) INICIAL, EJE_ANYO
	    FROM '|| V_ESQUEMA ||'.ACT_PTO_PRESUPUESTO PTO
	    LEFT JOIN '|| V_ESQUEMA ||'.ACT_INP_INC_PRESUPUESTO INC ON PTO.PTO_ID = INC.PTO_ID AND INC.BORRADO = 0
	    INNER JOIN '|| V_ESQUEMA ||'.ACT_EJE_EJERCICIO EJE ON EJE.EJE_ID = PTO.EJE_ID AND EJE.BORRADO = 0
	    WHERE PTO.BORRADO = 0
	    GROUP BY PTO.ACT_ID, PTO.PTO_IMPORTE_INICIAL, EJE_ANYO, NVL(PTO.PTO_IMPORTE_INICIAL,0)
	),
	IMPORTE_TRABAJO AS (
	    SELECT ACTTBJ.ACT_ID ACT2, SUM(NVL(TBJ.TBJ_IMPORTE_TOTAL * ACTTBJ.ACT_TBJ_PARTICIPACION / 100 ,0)) IMPORTES_TRABAJOS, TO_CHAR(TBJ.TBJ_FECHA_SOLICITUD,''YYYY'') ANYO2
	    FROM ACT_TBJ ACTTBJ
	    INNER JOIN '|| V_ESQUEMA ||'.ACT_TBJ_TRABAJO TBJ ON ACTTBJ.TBJ_ID = TBJ.TBJ_ID AND TBJ.BORRADO = 0 AND TBJ.DD_EST_ID IN(SELECT DD_EST_ID FROM '|| V_ESQUEMA ||'.DD_EST_ESTADO_TRABAJO WHERE DD_EST_ESTADO_CONTABLE = 1)
	    INNER JOIN '|| V_ESQUEMA ||'.ACT_ACTIVO ACT ON ACTTBJ.ACT_ID = ACT.ACT_ID AND ACT.BORRADO=0
	    GROUP BY ACTTBJ.ACT_ID, TO_CHAR(TBJ.TBJ_FECHA_SOLICITUD,''YYYY'')
	),
	SALDO AS (
	    SELECT INCRE.ACT1 ACT3, NVL(INCRE.INICIAL + INCRE.INCREMENTOS - NVL(IMPTBJ2.IMPORTES_TRABAJOS,0),0) SALDO_DISPONIBLE, INCRE.EJE_ANYO AS ANYO3
	    FROM INCREMENTO INCRE
	    LEFT JOIN IMPORTE_TRABAJO IMPTBJ2 ON INCRE.ACT1 = IMPTBJ2.ACT2 AND IMPTBJ2.ANYO2 = INCRE.EJE_ANYO
	),
    IMPORTE_TRABAJO_PENDIENTE_PAGO AS (
	    SELECT ACTTBJ.ACT_ID ACT4, SUM(NVL(TBJ.TBJ_IMPORTE_TOTAL * ACTTBJ.ACT_TBJ_PARTICIPACION / 100 ,0)) IMPORTES_TRABAJO_PENDIENTE_PAGO, TO_CHAR(TBJ.TBJ_FECHA_SOLICITUD,''YYYY'') ANYO4
	    FROM ACT_TBJ ACTTBJ
	    INNER JOIN '|| V_ESQUEMA ||'.ACT_TBJ_TRABAJO TBJ ON ACTTBJ.TBJ_ID = TBJ.TBJ_ID AND TBJ.BORRADO = 0 AND TBJ.DD_EST_ID = (SELECT DD_EST_ID FROM '|| V_ESQUEMA ||'.DD_EST_ESTADO_TRABAJO WHERE DD_EST_CODIGO = 05)
	    INNER JOIN '|| V_ESQUEMA ||'.ACT_ACTIVO ACT ON ACTTBJ.ACT_ID = ACT.ACT_ID AND ACT.BORRADO=0
	    GROUP BY ACTTBJ.ACT_ID, TO_CHAR(TBJ.TBJ_FECHA_SOLICITUD,''YYYY'')
	)
	SELECT
	ACT.ACT_ID
	, INC.INICIAL
	, INC.INCREMENTOS
	, NVL(IMPTBJ.IMPORTES_TRABAJOS,0) IMPORTES_TRABAJOS
	, SAL.SALDO_DISPONIBLE
	, SUM(CASE  WHEN SAL.SALDO_DISPONIBLE < 0 THEN NVL(TBJ.TBJ_IMPORTE_TOTAL * ACTTBJ.ACT_TBJ_PARTICIPACION / 100 ,0)
	      WHEN SAL.SALDO_DISPONIBLE > 0 AND (NVL(TBJ.TBJ_IMPORTE_TOTAL * ACTTBJ.ACT_TBJ_PARTICIPACION / 100 ,0)) > (INC.INICIAL + INC.INCREMENTOS - NVL(IMPTBJ.IMPORTES_TRABAJOS,0)) THEN (NVL(TBJ.TBJ_IMPORTE_TOTAL * ACTTBJ.ACT_TBJ_PARTICIPACION / 100 ,0)) - (INC.INICIAL + INC.INCREMENTOS - NVL(IMPTBJ.IMPORTES_TRABAJOS,0))
	    ELSE 0
	    END) AS SALDO_NECESARIO
	, INC.EJE_ANYO
    ,NVL(IMPTBJPD.IMPORTES_TRABAJO_PENDIENTE_PAGO,0) IMPORTE_TRABAJO_PENDIENTE_PAGO
	FROM '|| V_ESQUEMA ||'.ACT_TBJ ACTTBJ
	INNER JOIN '|| V_ESQUEMA ||'.ACT_TBJ_TRABAJO TBJ ON ACTTBJ.TBJ_ID = TBJ.TBJ_ID AND TBJ.BORRADO = 0
	INNER JOIN '|| V_ESQUEMA ||'.ACT_ACTIVO ACT ON ACTTBJ.ACT_ID = ACT.ACT_ID AND ACT.BORRADO = 0
	LEFT JOIN INCREMENTO INC ON ACT.ACT_ID = INC.ACT1
	LEFT JOIN IMPORTE_TRABAJO IMPTBJ ON ACT.ACT_ID = IMPTBJ.ACT2 AND IMPTBJ.ANYO2 = INC.EJE_ANYO
	LEFT JOIN SALDO SAL ON ACT.ACT_ID = SAL.ACT3 AND SAL.ANYO3 = INC.EJE_ANYO
    LEFT JOIN IMPORTE_TRABAJO_PENDIENTE_PAGO IMPTBJPD ON ACT.ACT_ID = IMPTBJPD.ACT4 AND IMPTBJPD.ANYO4 = INC.EJE_ANYO
	GROUP BY
	ACT.ACT_ID
	, INC.INICIAL
	, INC.INCREMENTOS
	, NVL(IMPTBJ.IMPORTES_TRABAJOS,0)
	, SAL.SALDO_DISPONIBLE
	, INC.EJE_ANYO
    , NVL(IMPTBJPD.IMPORTES_TRABAJO_PENDIENTE_PAGO,0)';
      	
  DBMS_OUTPUT.PUT_LINE('CREATE VIEW '|| V_ESQUEMA ||'.V_PRESUPUESTO_ACTIVO_EJERCICIO...Creada OK');
  
END;
/

EXIT;