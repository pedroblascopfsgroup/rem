--/*
--#########################################
--## AUTOR=DAP
--## FECHA_CREACION=20170727
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.1
--## INCIDENCIA_LINK=HREOS-2719
--## PRODUCTO=NO
--## 
--## Finalidad: Proceso de borrado físico de ciertas tablas
--##            
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE

  V_ESQUEMA VARCHAR2(25 CHAR):= 'REM01';-- '#ESQUEMA#'; -- Configuracion Esquema
  V_ESQUEMA_M VARCHAR2(25 CHAR):= 'REMMASTER';-- '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
  ERR_NUM NUMBER;-- Numero de errores
  ERR_MSG VARCHAR2(2048);-- Mensaje de error
  V_MSQL VARCHAR2(4000 CHAR);
  TYPE VALCURTYP IS REF CURSOR;
  V_VAL_CURSOR VALCURTYP;
  V_STMT_VAL VARCHAR2(4000 CHAR);
  TABLA VARCHAR2(63 CHAR);
  CLAVE_TABLA VARCHAR(140 CHAR);
  TABLA_REF VARCHAR2(63 CHAR);
  CLAVE_REF VARCHAR(140 CHAR);
  CANTIDAD_INSERCIONES NUMBER (16);
  SIN_AUDITORIA EXCEPTION;
  PRAGMA EXCEPTION_INIT(SIN_AUDITORIA, -904);
  BORRADO_FK EXCEPTION;
  PRAGMA EXCEPTION_INIT(BORRADO_FK, -1407);
  ACTIVOS NUMBER(6);

  --Array que contiene las tablas que se van a borrar
  TYPE T_ARRAY is table of VARCHAR2(250);
  V_FUN T_ARRAY := T_ARRAY(
    -------------   TABLA  --------------
    39708,
46000,
54000,
53977,
53975,
53963,
53954,
54166,
54151,
54175,
54173,
54169,
54158,
54156,
54152,
54149,
54147,
54140,
54138,
54136,
54135,
54133,
54132,
54128,
54125,
54122,
54120,
54115,
54114,
54110,
54105,
54103,
54099,
54098,
54097,
54095,
54091,
54088,
54087,
54085,
54084,
54077,
54076,
54075,
54074,
54071,
54066,
54065,
54064,
54059,
54055,
54054,
54153,
53084,
54353,
53935,
52118,
51403,
51402,
51400,
51844,
51867,
51813,
51866,
51826,
51846,
54068,
54170,
51832,
54131,
54072,
54070,
54062,
51831,
54134,
51849,
54108,
54146,
54079);
  
  ORDEN NUMBER(2) := 2;

  PROCEDURE BORRADO (ORDEN IN NUMBER, NUMERO_INSERTADO OUT NUMBER) IS
  BEGIN
    V_STMT_VAL := '
         INSERT INTO ACTIVOS_A_BORRAR
            WITH DEPENDENCIAS AS (
            SELECT T1.OWNER ESQUEMA, T1.TABLE_NAME TABLE_NAME, T1.CONSTRAINT_NAME, T3.COLUMN_NAME COLUMN_NAME, T3.POSITION POSITION_KEY
             , T2.OWNER ESQUEMA_REF, T2.TABLE_NAME TABLE_REFERENCED, T2.CONSTRAINT_NAME CONSTRAINT_REFERENCED, T4.COLUMN_NAME COLUMN_REFERENCED, T4.POSITION POSITION_KEY_REFERENCED
            FROM ALL_CONSTRAINTS T1
            JOIN ALL_CONSTRAINTS T2 ON T2.CONSTRAINT_NAME = T1.R_CONSTRAINT_NAME
             AND T2.CONSTRAINT_TYPE IN (''P'', ''U'')
            JOIN ACTIVOS_A_BORRAR T5 ON T5.TABLA = T2.OWNER||''.''||T2.TABLE_NAME
            JOIN ALL_CONS_COLUMNS T3 ON T1.CONSTRAINT_NAME = T3.CONSTRAINT_NAME
            JOIN ALL_CONS_COLUMNS T4 ON T2.CONSTRAINT_NAME = T4.CONSTRAINT_NAME
            WHERE T1.CONSTRAINT_TYPE = ''R'' AND T1.STATUS = ''ENABLED''
                AND NOT EXISTS (SELECT 1 FROM ACTIVOS_A_BORRAR AUX WHERE AUX.TABLA_REF = T2.OWNER||''.''||T2.TABLE_NAME))        
            SELECT D.ESQUEMA||''.''||D.TABLE_NAME TABLA, ''T1.''||LISTAGG(D.COLUMN_NAME, ''||T1.'') WITHIN GROUP (ORDER BY D.POSITION_KEY) CLAVE_TABLA
            , '||ORDEN||' + 1
            , D.ESQUEMA_REF||''.''||D.TABLE_REFERENCED TABLA_REF, ''T2.''||LISTAGG(D.COLUMN_REFERENCED, ''||T2.'') WITHIN GROUP (ORDER BY D.POSITION_KEY_REFERENCED) CLAVE_REF
            , '||ORDEN||'
            FROM DEPENDENCIAS D
            GROUP BY D.ESQUEMA, D.TABLE_NAME, D.CONSTRAINT_NAME, D.ESQUEMA_REF, D.TABLE_REFERENCED, D.CONSTRAINT_REFERENCED';
    EXECUTE IMMEDIATE V_STMT_VAL;
    NUMERO_INSERTADO := SQL%ROWCOUNT;
  END;

BEGIN
    
    EXECUTE IMMEDIATE 'TRUNCATE TABLE ACTIVOS_A_BORRAR';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE ACTIVOS_A_BORRAR_2';
    
    DBMS_OUTPUT.PUT_LINE('[INICIO] Inicio del proceso de borrado físico de interfaces a cargar desde cero');
    DBMS_OUTPUT.PUT_LINE('');

    V_STMT_VAL := '
        INSERT INTO ACTIVOS_A_BORRAR
        WITH DEPENDENCIAS AS (
         SELECT T1.OWNER ESQUEMA, T1.TABLE_NAME TABLE_NAME, T1.CONSTRAINT_NAME, T3.COLUMN_NAME COLUMN_NAME, T3.POSITION POSITION_KEY
             , T2.OWNER ESQUEMA_REF, T2.TABLE_NAME TABLE_REFERENCED, T2.CONSTRAINT_NAME CONSTRAINT_REFERENCED, T4.COLUMN_NAME COLUMN_REFERENCED, T4.POSITION POSITION_KEY_REFERENCED
         FROM ALL_CONSTRAINTS T1
         JOIN ALL_CONSTRAINTS T2 ON T2.CONSTRAINT_NAME = T1.R_CONSTRAINT_NAME
             AND T2.CONSTRAINT_TYPE IN (''P'', ''U'')
             AND T2.TABLE_NAME IN (''ACT_ACTIVO'')
             AND T2.OWNER = ''REM01''
         JOIN ALL_CONS_COLUMNS T3 ON T1.CONSTRAINT_NAME = T3.CONSTRAINT_NAME
         JOIN ALL_CONS_COLUMNS T4 ON T2.CONSTRAINT_NAME = T4.CONSTRAINT_NAME
         WHERE T1.CONSTRAINT_TYPE = ''R'' AND T1.STATUS = ''ENABLED'')        
        SELECT D.ESQUEMA||''.''||D.TABLE_NAME TABLA, ''T1.''||LISTAGG(D.COLUMN_NAME, ''||T1.'') WITHIN GROUP (ORDER BY D.POSITION_KEY) CLAVE_TABLA
           , 1
           , D.ESQUEMA_REF||''.''||D.TABLE_REFERENCED TABLA_REF, ''T2.''||LISTAGG(D.COLUMN_REFERENCED, ''||T2.'') WITHIN GROUP (ORDER BY D.POSITION_KEY_REFERENCED) CLAVE_REF
           , 0
        FROM DEPENDENCIAS D
        GROUP BY D.ESQUEMA, D.TABLE_NAME, D.CONSTRAINT_NAME, D.ESQUEMA_REF, D.TABLE_REFERENCED, D.CONSTRAINT_REFERENCED';
    EXECUTE IMMEDIATE V_STMT_VAL;

    BORRADO(ORDEN, CANTIDAD_INSERCIONES);
    WHILE CANTIDAD_INSERCIONES > 0
    LOOP
       ORDEN := ORDEN + 2;
       BORRADO(ORDEN, CANTIDAD_INSERCIONES);
    END LOOP;
    
    COMMIT;

    FOR I IN V_FUN.FIRST .. V_FUN.LAST
      LOOP
      V_MSQL := 'UPDATE REM01.ACT_ACTIVO 
        SET USUARIOBORRAR = ''HREOS-2719'', BORRADO = 1
        WHERE ACT_ID = '||V_FUN(I);
      EXECUTE IMMEDIATE V_MSQL;
    END LOOP;
    
    V_MSQL := 'SELECT COUNT(1) FROM REM01.ACT_ACTIVO WHERE USUARIOBORRAR = ''HREOS-2719'' AND BORRADO = 1';
    EXECUTE IMMEDIATE V_MSQL INTO ACTIVOS;
    DBMS_OUTPUT.PUT_LINE('[CON_AUDITORIA {A   BORRAR}]: TABLA REM01.ACT_ACTIVO - '||ACTIVOS||' registros marcados para posterior borrado.');

    OPEN V_VAL_CURSOR FOR SELECT TABLA, CLAVE_TABLA, TABLA_REF, CLAVE_REF FROM ACTIVOS_A_BORRAR ORDER BY ORDEN;
        LOOP
        FETCH V_VAL_CURSOR INTO TABLA, CLAVE_TABLA, TABLA_REF, CLAVE_REF;
        EXIT WHEN V_VAL_CURSOR%NOTFOUND;
        
        DECLARE
            SIN_AUDITORIA EXCEPTION;
            PRAGMA EXCEPTION_INIT(SIN_AUDITORIA, -904);
        BEGIN
            V_MSQL := 'MERGE INTO '||TABLA||' T1 
                USING (SELECT '||CLAVE_REF||' 
                    FROM '||TABLA_REF||' T2 
                    WHERE T2.USUARIOBORRAR = ''HREOS-2719'' AND T2.BORRADO = 1) T2 
                ON ('||CLAVE_TABLA||' = '||CLAVE_REF||')
                WHEN MATCHED THEN UPDATE SET
                    T1.USUARIOBORRAR = ''HREOS-2719'', T1.BORRADO = 1';
            EXECUTE IMMEDIATE V_MSQL;
            DBMS_OUTPUT.PUT_LINE('[CON_AUDITORIA {A   BORRAR}]: TABLA '||TABLA||' - '||SQL%ROWCOUNT||' registros marcados para posterior borrado.');
        EXCEPTION
            WHEN SIN_AUDITORIA THEN
            DECLARE
                SIN_AUDITORIA EXCEPTION;
                PRAGMA EXCEPTION_INIT(SIN_AUDITORIA, -904);
            BEGIN
                V_MSQL := 'DELETE FROM '||TABLA||' T1 WHERE EXISTS (SELECT 1 FROM '||TABLA_REF||' T2 WHERE '||CLAVE_REF||' = '||CLAVE_TABLA||' AND T2.USUARIOBORRAR = ''HREOS-2719'' AND T2.BORRADO = 1)';
                EXECUTE IMMEDIATE V_MSQL;
                DBMS_OUTPUT.PUT_LINE('[SIN_AUDITORIA {A   BORRAR}]: TABLA '||TABLA||' - '||SQL%ROWCOUNT||' registros borrados directamente');
            EXCEPTION
                WHEN SIN_AUDITORIA THEN
                V_MSQL := 'MERGE INTO '||TABLA||' T1
                    USING (SELECT '||CLAVE_TABLA||'
                        FROM '||TABLA||' T1
                        LEFT JOIN '||TABLA_REF||' T2 ON '||CLAVE_REF||' = '||CLAVE_TABLA||'
                        WHERE '||CLAVE_REF||' IS NULL) T2
                    ON ('||CLAVE_TABLA||' = ''T2.''||SUBSTR('||CLAVE_TABLA||',4) )
                    WHEN MATCHED THEN UPDATE SET
                        T1.USUARIOBORRAR = ''HREOS-2719'', T1.BORRADO = 1';
                EXECUTE IMMEDIATE V_MSQL;
                DBMS_OUTPUT.PUT_LINE('[SIN_AUDITORIA {REFERENCIA}]: TABLA '||TABLA_REF||' - '||SQL%ROWCOUNT||' registros huérfanos borrados directamente.');
            END;
        END;

        END LOOP;
    CLOSE V_VAL_CURSOR;
    
    V_MSQL := 'INSERT INTO ACTIVOS_A_BORRAR_2
        SELECT DISTINCT TABLA, ORDEN_TABLA FROM ACTIVOS_A_BORRAR
        UNION SELECT DISTINCT TABLA_REF, ORDEN_TABLA_REF FROM ACTIVOS_A_BORRAR';
    EXECUTE IMMEDIATE V_MSQL;
    
    FOR I IN (SELECT TABLA FROM ACTIVOS_A_BORRAR_2 ORDER BY ORDEN_TABLA DESC)
        LOOP
        DECLARE
            BORRADO_FK EXCEPTION;
            PRAGMA EXCEPTION_INIT(BORRADO_FK, -1407);
        BEGIN
              V_MSQL := 'DELETE FROM '||I.TABLA||' WHERE USUARIOBORRAR = ''HREOS-2719'' AND BORRADO = 1';
              TABLA := I.TABLA;
              EXECUTE IMMEDIATE V_MSQL;
              DBMS_OUTPUT.PUT_LINE('[BORRADA]: TABLA '||I.TABLA||' - '||SQL%ROWCOUNT||' registros eliminados.');
            
        EXCEPTION
            WHEN BORRADO_FK THEN
                DBMS_OUTPUT.PUT_LINE('[NO BORRADA - PROBLEMA FK]: TABLA '||TABLA||'.');
            WHEN SIN_AUDITORIA THEN
                NULL;
        END;
    END LOOP;
    
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('');
    DBMS_OUTPUT.PUT_LINE('[FIN] Borrado físico de activos a cargar desde cero');

EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(SQLCODE));
      DBMS_OUTPUT.PUT_LINE('-----------------------------------------------------------');
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
      DBMS_OUTPUT.PUT_LINE(TABLA);
      ROLLBACK;
      RAISE;
END;
/
EXIT;