--/*
--#########################################
--## AUTOR=DAP
--## FECHA_CREACION=20171019
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=0.1
--## INCIDENCIA_LINK=HREOS-3044
--## PRODUCTO=NO
--## 
--## Finalidad: Proceso de borrado físico de ECO_NUM_EXPEDIENTE 18006
--##            
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE

  ERR_NUM NUMBER;-- Numero de errores
  ERR_MSG VARCHAR2(2048);-- Mensaje de error
  V_MSQL VARCHAR2(4000 CHAR);
  TYPE VALCURTYP IS REF CURSOR;
  V_VAL_CURSOR VALCURTYP;
  V_STMT_VAL VARCHAR2(4000 CHAR);
  ID NUMBER(16);
  TABLA VARCHAR2(63 CHAR);
  CLAVE_TABLA VARCHAR(140 CHAR);
  TABLA_REF VARCHAR2(63 CHAR);
  CLAVE_REF VARCHAR(140 CHAR);
  CANTIDAD_INSERCIONES NUMBER (16);
  SIN_AUDITORIA EXCEPTION;
  PRAGMA EXCEPTION_INIT(SIN_AUDITORIA, -904);
  BORRADO_FK EXCEPTION;
  PRAGMA EXCEPTION_INIT(BORRADO_FK, -1407);
  ACTIVOS NUMBER(6);
  NUMERO_BORRAR NUMBER(6) := 1000;--Numero de activos a borrar en una pasada
  ORDEN NUMBER(2) := 2;
  V_TABLA VARCHAR2(30 CHAR) := 'ECO_EXPEDIENTE_COMERCIAL'; -- Variable para tabla de salida para el borrado
  COD_ITEM VARCHAR2(10 CHAR) := 'HREOS-3044';
  V_ESQUEMA VARCHAR2(25 CHAR):= 'REM01'; -- Configuracion Esquema
  V_ESQUEMA_M VARCHAR2(25 CHAR):= 'REMMASTER'; -- Configuracion Esquema Master
  V_TABLESPACE_IDX VARCHAR2(25 CHAR):= 'REM_IDX'; -- Configuracion Tablespace de Indices
  V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
  V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
  V_COLUMN_NAME VARCHAR2(30 CHAR) := 'OFR_ID';


  PROCEDURE BORRADO (ORDEN IN NUMBER, NUMERO_INSERTADO OUT NUMBER) IS
  BEGIN
    V_STMT_VAL := '
        INSERT INTO '||V_ESQUEMA||'.ACTIVOS_A_BORRAR
        SELECT '||V_ESQUEMA||'.S_ACTIVOS_A_BORRAR.NEXTVAL, TABLA, CLAVE_TABLA, ORDEN, TABLA_REF, CLAVE_REF, ORDEN_REF 
        FROM (
            WITH DEPENDENCIAS AS (
            SELECT T1.OWNER ESQUEMA, T1.TABLE_NAME TABLE_NAME, T1.CONSTRAINT_NAME, T3.COLUMN_NAME COLUMN_NAME, T3.POSITION POSITION_KEY
             , T2.OWNER ESQUEMA_REF, T2.TABLE_NAME TABLE_REFERENCED, T2.CONSTRAINT_NAME CONSTRAINT_REFERENCED, T4.COLUMN_NAME COLUMN_REFERENCED, T4.POSITION POSITION_KEY_REFERENCED
            FROM ALL_CONSTRAINTS T1
            JOIN ALL_CONSTRAINTS T2 ON T2.CONSTRAINT_NAME = T1.R_CONSTRAINT_NAME
             AND T2.CONSTRAINT_TYPE IN (''P'', ''U'')
            JOIN ACTIVOS_A_BORRAR T5 ON T5.TABLA = T2.OWNER||''.''||T2.TABLE_NAME
            JOIN ALL_CONS_COLUMNS T3 ON T1.CONSTRAINT_NAME = T3.CONSTRAINT_NAME
            JOIN ALL_CONS_COLUMNS T4 ON T2.CONSTRAINT_NAME = T4.CONSTRAINT_NAME
            WHERE T1.CONSTRAINT_TYPE = ''R'' AND T1.STATUS = ''ENABLED''
                AND NOT EXISTS (SELECT 1 FROM ACTIVOS_A_BORRAR AUX WHERE AUX.TABLA_REF = T2.OWNER||''.''||T2.TABLE_NAME))        
            SELECT D.ESQUEMA||''.''||D.TABLE_NAME TABLA, ''T1.''||LISTAGG(D.COLUMN_NAME, ''||T1.'') WITHIN GROUP (ORDER BY D.POSITION_KEY) CLAVE_TABLA
            , '||ORDEN||' + 1 ORDEN
            , D.ESQUEMA_REF||''.''||D.TABLE_REFERENCED TABLA_REF, ''T2.''||LISTAGG(D.COLUMN_REFERENCED, ''||T2.'') WITHIN GROUP (ORDER BY D.POSITION_KEY_REFERENCED) CLAVE_REF
            , '||ORDEN||' ORDEN_REF
            FROM DEPENDENCIAS D
            WHERE D.ESQUEMA||''.''||D.TABLE_NAME <> D.ESQUEMA_REF||''.''||D.TABLE_REFERENCED
            GROUP BY D.ESQUEMA, D.TABLE_NAME, D.CONSTRAINT_NAME, D.ESQUEMA_REF, D.TABLE_REFERENCED, D.CONSTRAINT_REFERENCED)';
    EXECUTE IMMEDIATE V_STMT_VAL;
    NUMERO_INSERTADO := SQL%ROWCOUNT;
  END;

BEGIN
    
    DBMS_OUTPUT.PUT_LINE('[INICIO] Inicio del proceso de borrado físico del expediente comercial 18006');
    DBMS_OUTPUT.PUT_LINE('');
    
    EXECUTE IMMEDIATE 'TRUNCATE TABLE '||V_ESQUEMA||'.ACTIVOS_A_BORRAR';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE '||V_ESQUEMA||'.ACTIVOS_A_BORRAR_2';

    V_STMT_VAL := '
        INSERT INTO '||V_ESQUEMA||'.ACTIVOS_A_BORRAR
        SELECT '||V_ESQUEMA||'.S_ACTIVOS_A_BORRAR.NEXTVAL, TABLA, CLAVE_TABLA, ORDEN, TABLA_REF, CLAVE_REF, ORDEN_REF 
        FROM (
            WITH DEPENDENCIAS AS (
             SELECT T1.OWNER ESQUEMA, T1.TABLE_NAME TABLE_NAME, T1.CONSTRAINT_NAME, T3.COLUMN_NAME COLUMN_NAME, T3.POSITION POSITION_KEY
                 , T2.OWNER ESQUEMA_REF, T2.TABLE_NAME TABLE_REFERENCED, T2.CONSTRAINT_NAME CONSTRAINT_REFERENCED, T4.COLUMN_NAME COLUMN_REFERENCED, T4.POSITION POSITION_KEY_REFERENCED
             FROM ALL_CONSTRAINTS T1
             JOIN ALL_CONSTRAINTS T2 ON T2.CONSTRAINT_NAME = T1.R_CONSTRAINT_NAME
                 AND T2.CONSTRAINT_TYPE IN (''P'', ''U'')
                 AND T2.TABLE_NAME IN ('''||V_TABLA||''')
                 AND T2.OWNER = '''||V_ESQUEMA||'''
             JOIN ALL_CONS_COLUMNS T3 ON T1.CONSTRAINT_NAME = T3.CONSTRAINT_NAME
             JOIN ALL_CONS_COLUMNS T4 ON T2.CONSTRAINT_NAME = T4.CONSTRAINT_NAME
             WHERE T1.CONSTRAINT_TYPE = ''R'' AND T1.STATUS = ''ENABLED'')        
            SELECT D.ESQUEMA||''.''||D.TABLE_NAME TABLA, ''T1.''||LISTAGG(D.COLUMN_NAME, ''||T1.'') WITHIN GROUP (ORDER BY D.POSITION_KEY) CLAVE_TABLA
               , 1 ORDEN
               , D.ESQUEMA_REF||''.''||D.TABLE_REFERENCED TABLA_REF, ''T2.''||LISTAGG(D.COLUMN_REFERENCED, ''||T2.'') WITHIN GROUP (ORDER BY D.POSITION_KEY_REFERENCED) CLAVE_REF
               , 0 ORDEN_REF
            FROM DEPENDENCIAS D
            GROUP BY D.ESQUEMA, D.TABLE_NAME, D.CONSTRAINT_NAME, D.ESQUEMA_REF, D.TABLE_REFERENCED, D.CONSTRAINT_REFERENCED)';
    EXECUTE IMMEDIATE V_STMT_VAL;

    BORRADO(ORDEN, CANTIDAD_INSERCIONES);
    WHILE CANTIDAD_INSERCIONES > 0
    LOOP
       ORDEN := ORDEN + 2;
       BORRADO(ORDEN, CANTIDAD_INSERCIONES);
    END LOOP;

    V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ACTIVOS_A_BORRAR_2
      SELECT DISTINCT TABLA, ORDEN_TABLA FROM ACTIVOS_A_BORRAR
      UNION SELECT DISTINCT TABLA_REF, ORDEN_TABLA_REF FROM ACTIVOS_A_BORRAR';
    EXECUTE IMMEDIATE V_MSQL;
    
    COMMIT;
    
    LOOP
        V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
            USING (WITH DUPLICADOS AS 
                    (SELECT OFR_ID FROM '||V_ESQUEMA||'.'||V_TABLA||' GROUP BY OFR_ID HAVING COUNT(1) > 1)
                SELECT ECO.ECO_ID, ROW_NUMBER() OVER(PARTITION BY ECO.OFR_ID ORDER BY ECO.ECO_NUM_EXPEDIENTE) RN
                FROM '||V_ESQUEMA||'.'||V_TABLA||' ECO
                JOIN DUPLICADOS DUP ON DUP.OFR_ID = ECO.OFR_ID) T2
            ON (T1.ECO_ID = T2.ECO_ID AND T2.RN > 1)
            WHEN MATCHED THEN UPDATE SET
                T1.USUARIOBORRAR = '''||COD_ITEM||''', T1.FECHABORRAR = SYSDATE, T1.BORRADO = 1';
  
        EXECUTE IMMEDIATE V_MSQL;
  
        EXIT WHEN SQL%ROWCOUNT = 0;
        
        V_MSQL := 'SELECT COUNT(1) FROM '||V_ESQUEMA||'.'||V_TABLA||' WHERE USUARIOBORRAR = '''||COD_ITEM||''' AND BORRADO = 1';
  
        EXECUTE IMMEDIATE V_MSQL INTO ACTIVOS;
  
        DBMS_OUTPUT.PUT_LINE('[CON_AUDITORIA {A   BORRAR}]: TABLA '||V_ESQUEMA||'.'||V_TABLA||' - '||ACTIVOS||' registros marcados para posterior borrado.');
    
        OPEN V_VAL_CURSOR FOR SELECT ID, TABLA, CLAVE_TABLA, TABLA_REF, CLAVE_REF FROM REM01.ACTIVOS_A_BORRAR ORDER BY ID ASC;
            LOOP
            FETCH V_VAL_CURSOR INTO ID, TABLA, CLAVE_TABLA, TABLA_REF, CLAVE_REF;
            EXIT WHEN V_VAL_CURSOR%NOTFOUND;
            
            DECLARE
                SIN_AUDITORIA EXCEPTION;
                PRAGMA EXCEPTION_INIT(SIN_AUDITORIA, -904);
            BEGIN
                V_MSQL := 'MERGE INTO '||TABLA||' T1 
                    USING (SELECT '||CLAVE_REF||' 
                        FROM '||TABLA_REF||' T2 
                        WHERE T2.USUARIOBORRAR = '''||COD_ITEM||''' AND T2.BORRADO = 1) T2 
                    ON ('||CLAVE_TABLA||' = '||CLAVE_REF||')
                    WHEN MATCHED THEN UPDATE SET
                        T1.USUARIOBORRAR = '''||COD_ITEM||''', T1.BORRADO = 1, T1.FECHABORRAR = SYSDATE';
                EXECUTE IMMEDIATE V_MSQL;
          
                DBMS_OUTPUT.PUT_LINE('[CON_AUDITORIA {A   BORRAR} {ID '||ID||'}]: TABLA '||TABLA||' - '||SQL%ROWCOUNT||' registros marcados para posterior borrado.');
            EXCEPTION
                WHEN SIN_AUDITORIA THEN
                DECLARE
                    SIN_AUDITORIA EXCEPTION;
                    PRAGMA EXCEPTION_INIT(SIN_AUDITORIA, -904);
                BEGIN
                    V_MSQL := 'DELETE FROM '||TABLA||' T1 WHERE EXISTS (SELECT 1 FROM '||TABLA_REF||' T2 WHERE '||CLAVE_REF||' = '||CLAVE_TABLA||' AND T2.USUARIOBORRAR = '''||COD_ITEM||''' AND T2.BORRADO = 1)';
              
                    EXECUTE IMMEDIATE V_MSQL;
              
                    DBMS_OUTPUT.PUT_LINE('[SIN_AUDITORIA {A   BORRAR} {ID '||ID||'}]: TABLA '||TABLA||' - '||SQL%ROWCOUNT||' registros borrados directamente');
                EXCEPTION
                    WHEN SIN_AUDITORIA THEN
                    V_MSQL := 'MERGE INTO '||TABLA||' T1
                        USING (SELECT '||CLAVE_TABLA||'
                            FROM '||TABLA||' T1
                            LEFT JOIN '||TABLA_REF||' T2 ON '||CLAVE_REF||' = '||CLAVE_TABLA||'
                            WHERE '||CLAVE_REF||' IS NULL) T2
                        ON ('||CLAVE_TABLA||' = ''T2.''||SUBSTR('||CLAVE_TABLA||',4) )
                        WHEN MATCHED THEN UPDATE SET
                            T1.USUARIOBORRAR = '''||COD_ITEM||''', T1.BORRADO = 1, T1.FECHABORRAR = SYSDATE';
                    EXECUTE IMMEDIATE V_MSQL;
              
                    DBMS_OUTPUT.PUT_LINE('[SIN_AUDITORIA {REFERENCIA} {ID '||ID||'}]: TABLA '||TABLA_REF||' - '||SQL%ROWCOUNT||' registros huérfanos borrados directamente.');
                END;
            END;
    
            END LOOP;
        CLOSE V_VAL_CURSOR;
        
        FOR I IN (SELECT TABLA FROM ACTIVOS_A_BORRAR_2 ORDER BY ORDEN_TABLA DESC)
            LOOP
            DECLARE
                BORRADO_FK EXCEPTION;
                PRAGMA EXCEPTION_INIT(BORRADO_FK, -1407);
            BEGIN
                  V_MSQL := 'DELETE FROM '||I.TABLA||' WHERE USUARIOBORRAR = '''||COD_ITEM||''' AND BORRADO = 1';
                  TABLA := I.TABLA;
            
                  EXECUTE IMMEDIATE V_MSQL;
            
                  DBMS_OUTPUT.PUT_LINE('[BORRADA]: TABLA '||I.TABLA||' - '||SQL%ROWCOUNT||' registros eliminados.');
                
            EXCEPTION
                WHEN BORRADO_FK THEN
                    DBMS_OUTPUT.PUT_LINE('[NO BORRADA - PROBLEMA FK]: TABLA '||TABLA||'.');
                WHEN SIN_AUDITORIA THEN
                    NULL;
            END;
        END LOOP;
        
        COMMIT;
        
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('');
    DBMS_OUTPUT.PUT_LINE('[FIN] Borrado físico del expediente comercial 18006');

    DBMS_OUTPUT.PUT_LINE('********' ||V_TABLA|| '********'); 
    DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_TABLA||'... Comprobaciones previas');
    
    
    -- Verificar si la tabla y el campo ya existen
    V_MSQL := 'SELECT COUNT(1) FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = '''||V_TABLA||''' AND COLUMN_NAME = '''||V_COLUMN_NAME||''' AND OWNER = '''||V_ESQUEMA||''' ';
    EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS; 
    IF V_NUM_TABLAS = 1 THEN
      DBMS_OUTPUT.PUT_LINE('[INFO] La tabla ' || V_ESQUEMA || '.'||V_TABLA||'... existe.');
      -- Comprobamos si existe la clave única
      V_SQL := 'SELECT COUNT(1)
        FROM ALL_CONS_COLUMNS T1
        JOIN ALL_CONSTRAINTS T2 ON T1.CONSTRAINT_NAME = T2.CONSTRAINT_NAME AND T2.CONSTRAINT_TYPE = ''U''
        WHERE T1.COLUMN_NAME = '''||V_COLUMN_NAME||''' AND T1.TABLE_NAME = '''||V_TABLA||''' ';
      EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS; 
      IF V_NUM_TABLAS = 0 THEN
        V_SQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TABLA||'
          ADD CONSTRAINT UK_ECO_OFR_ID UNIQUE ('||V_COLUMN_NAME||')';
        EXECUTE IMMEDIATE V_SQL;
        DBMS_OUTPUT.PUT_LINE('[INFO] '|| V_ESQUEMA ||'.'||V_TABLA||'... Clave única creada para el campo '||V_COLUMN_NAME||'.');
      ELSE
        DBMS_OUTPUT.PUT_LINE('[INFO] '|| V_ESQUEMA ||'.'||V_TABLA||'... Ya tiene clave única para el campo '||V_COLUMN_NAME||'.');
      END IF;
      ELSE
          DBMS_OUTPUT.PUT_LINE('[INFO] La tabla ' || V_ESQUEMA || '.'||V_TABLA||'... no existe.');
    END IF; 
    
    DBMS_OUTPUT.PUT_LINE('[FIN]');

    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(SQLCODE));
      DBMS_OUTPUT.PUT_LINE('-----------------------------------------------------------');
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
      DBMS_OUTPUT.PUT_LINE(TABLA);
      ROLLBACK;
      RAISE;
END;
/
EXIT;