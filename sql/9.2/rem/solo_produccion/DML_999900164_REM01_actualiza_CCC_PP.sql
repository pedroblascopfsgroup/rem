--/*
--##########################################
--## AUTOR=GUSTAVO MORA
--## FECHA_CREACION=20171124
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.2
--## INCIDENCIA_LINK=HREOS-3203
--## PRODUCTO=NO
--##
--## Finalidad: Script ACTUALIZA Cuentas contables y partidas presupuestarias en tabla contabilidad para gastos de convivencia que no se han informado.
--## INSTRUCCIONES:
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE
    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar     
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.   
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
 
BEGIN   
 
DBMS_OUTPUT.PUT_LINE('[INICIO] PROCESO ACTUALIZACION CUENTAS CONTABLES'); 

-- ACTUALIZAMOS LA CUENTA CONTABLE
MERGE INTO REM01.GIC_GASTOS_INFO_CONTABILIDAD GIC_OLD
USING (
SELECT GPV.GPV_ID AS GPV_ID
  ,  CCC.CCC_CUENTA_CONTABLE AS CUENTA_CONTABLE_ESPECIAL
	, CPP.CPP_PARTIDA_PRESUPUESTARIA AS PARTIDA_PRESU_ESPECIAL
FROM REM01.GPV_GASTOS_PROVEEDOR GPV 
   inner join REM01.GIC_GASTOS_INFO_CONTABILIDAD GIC on gpv.gpv_id = GIC.GPV_ID
	 LEFT JOIN REM01.ACT_EJE_EJERCICIO EJE ON EJE.EJE_ANYO = TO_CHAR(GPV.GPV_FECHA_EMISION,'YYYY')
   LEFT JOIN REM01.CCC_CONFIG_CTAS_CONTABLES CCC on GPV.DD_STG_ID = CCC.DD_STG_ID AND CCC.EJE_ID  = EJE.EJE_ID AND NVL(CCC.CCC_ARRENDAMIENTO,0) = 0
   LEFT JOIN REM01.CPP_CONFIG_PTDAS_PREP CPP on GPV.DD_STG_ID = CPP.DD_STG_ID AND CPP.EJE_ID  = EJE.EJE_ID AND NVL(CPP.CPP_ARRENDAMIENTO,0) = 0
    where 
      gic.GIC_CUENTA_CONTABLE is null
      and gpv.usuariocrear = 'gestoria_gastos_gr'
) GIC_NEW
  ON ( GIC_OLD.GPV_ID = GIC_NEW.GPV_ID)
WHEN MATCHED THEN UPDATE 
  SET  GIC_OLD.GIC_CUENTA_CONTABLE = GIC_NEW.CUENTA_CONTABLE_ESPECIAL
       , GIC_OLD.USUARIOMODIFICAR = 'HREOS-3203'
       , GIC_OLD.FECHAMODIFICAR = SYSDATE
;

    dbms_output.put_line('Registros actualizados: '||sql%rowcount); 

    DBMS_OUTPUT.PUT_LINE('[FIN]: PROCESO ACTUALIZACION CUENTAS CONTABLES ');

    DBMS_OUTPUT.PUT_LINE('[INICIO]: PROCESO ACTUALIZACION PARTIDAS PRESUPUESTARIAS ');
    
COMMIT;    
    
-- ACTUALIZAMOS LA PARTIDA PRESUPUESTARIA
MERGE INTO REM01.GIC_GASTOS_INFO_CONTABILIDAD GIC_OLD
USING (
SELECT GPV.GPV_ID AS GPV_ID
  , CCC.CCC_CUENTA_CONTABLE AS CUENTA_CONTABLE_ESPECIAL
	, CPP.CPP_PARTIDA_PRESUPUESTARIA AS PARTIDA_PRESU_ESPECIAL
FROM REM01.GPV_GASTOS_PROVEEDOR GPV 
   inner join REM01.GIC_GASTOS_INFO_CONTABILIDAD GIC on gpv.gpv_id = GIC.GPV_ID
	 LEFT JOIN REM01.ACT_EJE_EJERCICIO EJE ON EJE.EJE_ANYO = TO_CHAR(GPV.GPV_FECHA_EMISION,'YYYY')
   LEFT JOIN REM01.CCC_CONFIG_CTAS_CONTABLES CCC on GPV.DD_STG_ID = CCC.DD_STG_ID AND CCC.EJE_ID  = EJE.EJE_ID AND NVL(CCC.CCC_ARRENDAMIENTO,0) = 0
   LEFT JOIN REM01.CPP_CONFIG_PTDAS_PREP CPP on GPV.DD_STG_ID = CPP.DD_STG_ID AND CPP.EJE_ID  = EJE.EJE_ID AND NVL(CPP.CPP_ARRENDAMIENTO,0) = 0
    where 
      gic.GIC_PTDA_PRESUPUESTARIA is null
      and gpv.usuariocrear = 'gestoria_gastos_gr'
) GIC_NEW
  ON ( GIC_OLD.GPV_ID = GIC_NEW.GPV_ID)
WHEN MATCHED THEN UPDATE 
  SET  GIC_OLD.GIC_PTDA_PRESUPUESTARIA = GIC_NEW.PARTIDA_PRESU_ESPECIAL
       , GIC_OLD.USUARIOMODIFICAR = 'HREOS-3203'
       , GIC_OLD.FECHAMODIFICAR = SYSDATE
;

    dbms_output.put_line('Registros actualizados: '||sql%rowcount); 
    
    DBMS_OUTPUT.PUT_LINE('[FIN]: PROCESO ACTUALIZACION PARTIDAS PRESUPUESTARIAS ');

COMMIT;    

   
EXCEPTION
     WHEN OTHERS THEN
          err_num := SQLCODE;
          err_msg := SQLERRM;

          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(err_msg);

          ROLLBACK;
          RAISE;          

END;
/

EXIT;

    