--/*
--##########################################
--## AUTOR=DAP
--## FECHA_CREACION=20180104
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=2.0.12
--## INCIDENCIA_LINK=HREOS-3591
--## PRODUCTO=NO
--##
--## Finalidad: Actualización de activos traspasados (TANGO).   
--## INSTRUCCIONES:
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;

DECLARE

    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
    V_MSQL VARCHAR2(2048 CHAR);
    V_TABLA VARCHAR2(30 CHAR) := 'AUX_ACTIVOS_TRASP_PRINEX';
    V_ESQUEMA VARCHAR2(15 CHAR) := 'REM01';
    V_EXISTS NUMBER(1);
    V_USUARIO VARCHAR2(30 CHAR) := 'HREOS-3591';

BEGIN

    DBMS_OUTPUT.PUT_LINE('[INICIO]');
    /*-Actualizar la situación comercial de todos los activos relacionados a "Vendido"
      -Modificar el estado de publicación de activos a no comercializable*/
    V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_ACTIVO T1
        USING '||V_ESQUEMA||'.'||V_TABLA||' T2
        ON (T1.ACT_NUM_ACTIVO_PRINEX = T2.ACT_NUM_ACTIVO_PRINEX)
        WHEN MATCHED THEN UPDATE SET
            T1.DD_SCM_ID = (SELECT DD_SCM_ID FROM REM01.DD_SCM_SITUACION_COMERCIAL WHERE DD_SCM_CODIGO = ''05'')
            , T1.DD_EPU_ID = (SELECT EPU.DD_EPU_ID FROM DD_EPU_ESTADO_PUBLICACION EPU WHERE EPU.DD_EPU_CODIGO = ''06'')
            , T1.ACT_FECHA_IND_PUBLICABLE = SYSDATE
            , T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
            , T1.FECHAMODIFICAR = SYSDATE
        WHERE T1.DD_SCM_ID <> (SELECT DD_SCM_ID FROM REM01.DD_SCM_SITUACION_COMERCIAL WHERE DD_SCM_CODIGO = ''05'')
            OR T1.DD_EPU_ID <> (SELECT EPU.DD_EPU_ID FROM DD_EPU_ESTADO_PUBLICACION EPU WHERE EPU.DD_EPU_CODIGO = ''06'')';
    EXECUTE IMMEDIATE V_MSQL;
    DBMS_OUTPUT.PUT_LINE('   [INFO] '||SQL%ROWCOUNT||' SITUACION COMERCIAL Y ESTADO DE PUBLICACION ACTUALIZADOS.');
    
    /*-Caducar el histórico de publicación de todos los activos relacionados */
    V_MSQL := 'MERGE INTO REM01.ACT_HEP_HIST_EST_PUBLICACION HEP
        USING (SELECT ACT.ACT_ID
            FROM '||V_ESQUEMA||'.ACT_ACTIVO ACT
            INNER JOIN '||V_ESQUEMA||'.'||V_TABLA||' AUX ON ACT.ACT_NUM_ACTIVO_PRINEX = AUX.ACT_NUM_ACTIVO_PRINEX) T2
        ON (HEP.ACT_ID = T2.ACT_ID)
        WHEN MATCHED THEN UPDATE SET
            HEP.HEP_FECHA_HASTA = SYSDATE, HEP.USUARIOMODIFICAR = '''||V_USUARIO||'''
            , HEP.FECHAMODIFICAR = SYSDATE
        WHERE HEP.HEP_FECHA_HASTA IS NULL
            AND HEP.DD_EPU_ID <> (SELECT EPU.DD_EPU_ID FROM '||V_ESQUEMA||'.DD_EPU_ESTADO_PUBLICACION EPU WHERE EPU.DD_EPU_CODIGO = ''06'')';
    EXECUTE IMMEDIATE V_MSQL;
    DBMS_OUTPUT.PUT_LINE('   [INFO] '||SQL%ROWCOUNT||' HISTORICOS DE PUBLICACION CADUCADO.');
    
    /*-Insertar una linea en el histórico de publicaciones como despublicado con la fecha del día a todos los que no estén actualmente despublicados*/
    V_MSQL := 'INSERT INTO REM01.ACT_HEP_HIST_EST_PUBLICACION (HEP_ID, ACT_ID, HEP_FECHA_DESDE, DD_EPU_ID
            , HEP_MOTIVO, USUARIOCREAR, FECHACREAR)
        SELECT REM01.S_ACT_HEP_HIST_EST_PUBLICACION.NEXTVAL, ACT.ACT_ID, SYSDATE, EPU.DD_EPU_ID
            , ''Activo traspasado'', '''||V_USUARIO||''', SYSDATE
        FROM '||V_ESQUEMA||'.ACT_ACTIVO ACT
        JOIN '||V_ESQUEMA||'.'||V_TABLA||' AUX ON ACT.ACT_NUM_ACTIVO_PRINEX = AUX.ACT_NUM_ACTIVO_PRINEX
        JOIN '||V_ESQUEMA||'.DD_EPU_ESTADO_PUBLICACION EPU ON EPU.DD_EPU_ID = ''06''
        WHERE NOT EXISTS (SELECT 1 FROM REM01.ACT_HEP_HIST_EST_PUBLICACION AUX WHERE AUX.ACT_ID = ACT.ACT_ID AND AUX.HEP_FECHA_HASTA IS NULL AND AUX.DD_EPU_ID = EPU.DD_EPU_ID)';
    EXECUTE IMMEDIATE V_MSQL;
    DBMS_OUTPUT.PUT_LINE('   [INFO] '||SQL%ROWCOUNT||' NUEVOS REGISTROS EN HISTORICO DE PUBLICACION (DESPUBLICADO).');
    
    /*-Modificar perímetros de todos los activos a fuera de perímetro.*/
    V_MSQL := 'MERGE INTO REM01.ACT_PAC_PERIMETRO_ACTIVO PAC
        USING (SELECT ACT_ID
            FROM '||V_ESQUEMA||'.ACT_ACTIVO ACT
            JOIN '||V_ESQUEMA||'.'||V_TABLA||' AUX ON ACT.ACT_NUM_ACTIVO_PRINEX = AUX.ACT_NUM_ACTIVO_PRINEX) T1
        ON (PAC.ACT_ID = T1.ACT_ID) 
        WHEN MATCHED THEN UPDATE SET
            PAC.PAC_INCLUIDO = 0, PAC.PAC_CHECK_TRA_ADMISION = 0, PAC.PAC_CHECK_GESTIONAR = 0
            , PAC.PAC_CHECK_ASIGNAR_MEDIADOR = 0, PAC.PAC_CHECK_COMERCIALIZAR = 0, PAC.PAC_CHECK_FORMALIZAR = 0
            , PAC.PAC_FECHA_ASIGNAR_MEDIADOR = SYSDATE, PAC.PAC_FECHA_COMERCIALIZAR = SYSDATE
            , PAC.PAC_FECHA_FORMALIZAR = SYSDATE, PAC.PAC_FECHA_GESTIONAR = SYSDATE, PAC.PAC_FECHA_TRA_ADMISION = SYSDATE
            , PAC.PAC_MOT_EXCL_COMERCIALIZAR = ''Cartera Tango'', PAC.PAC_MOTIVO_ASIGNAR_MEDIADOR = ''Cartera Tango''
            , PAC.PAC_MOTIVO_FORMALIZAR = ''Cartera Tango'', PAC.PAC_MOTIVO_GESTIONAR = ''Cartera Tango''
            , PAC.PAC_MOTIVO_TRA_ADMISION = ''Cartera Tango'', PAC.FECHAMODIFICAR = SYSDATE
            , PAC.USUARIOMODIFICAR = '''||V_USUARIO||'''
        WHERE NVL(PAC.USUARIOMODIFICAR,0) <> '''||V_USUARIO||'''';
    EXECUTE IMMEDIATE V_MSQL;
    DBMS_OUTPUT.PUT_LINE('   [INFO] '||SQL%ROWCOUNT||' ACTIVOS SACADOS DE PERIMETRO.');
    
    /*-Todas las agrupaciones relacionadas con los activos deben deshacerse. Ello implica realizar un borrado lógico de la ACT_AGR_AGRUPACION y la ACT_AGA_AGRUPACION_ACTIVO*/
    V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_AGR_AGRUPACION T1
        USING (SELECT DISTINCT AGR.AGR_ID 
            FROM REM01.ACT_ACTIVO ACT
            JOIN REM01.AUX_ACTIVOS_TRASP_PRINEX AUX ON AUX.ACT_NUM_ACTIVO_PRINEX = ACT.ACT_NUM_ACTIVO_PRINEX
            JOIN REM01.ACT_AGA_AGRUPACION_ACTIVO AGA ON AGA.ACT_ID = ACT.ACT_ID
            JOIN REM01.ACT_AGR_AGRUPACION AGR ON AGR.AGR_ID = AGA.AGR_ID AND AGR.BORRADO = 0) T2
        ON (T1.AGR_ID = T2.AGR_ID)
        WHEN MATCHED THEN UPDATE SET
            T1.BORRADO = 1, T1.USUARIOBORRAR = '''||V_USUARIO||''', T1.FECHABORRAR = SYSDATE';
    EXECUTE IMMEDIATE V_MSQL;
    DBMS_OUTPUT.PUT_LINE('   [INFO] '||SQL%ROWCOUNT||' AGRUPACIONES DESECHAS.');
    
    V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_AGA_AGRUPACION_ACTIVO T1
        USING (SELECT DISTINCT AGR.AGR_ID 
            FROM REM01.ACT_ACTIVO ACT
            JOIN REM01.AUX_ACTIVOS_TRASP_PRINEX AUX ON AUX.ACT_NUM_ACTIVO_PRINEX = ACT.ACT_NUM_ACTIVO_PRINEX
            JOIN REM01.ACT_AGA_AGRUPACION_ACTIVO AGA ON AGA.ACT_ID = ACT.ACT_ID AND AGA.BORRADO = 0
            JOIN REM01.ACT_AGR_AGRUPACION AGR ON AGR.AGR_ID = AGA.AGR_ID AND AGR.BORRADO = 1) T2
        ON (T1.AGR_ID = T2.AGR_ID)
        WHEN MATCHED THEN UPDATE SET
            T1.BORRADO = 1, T1.USUARIOBORRAR = '''||V_USUARIO||''', T1.FECHABORRAR = SYSDATE';
    EXECUTE IMMEDIATE V_MSQL;
    DBMS_OUTPUT.PUT_LINE('   [INFO] '||SQL%ROWCOUNT||' RELACIONES ACTIVO/AGRUPACIONES DESECHAS.');

    rollback;
    
    DBMS_OUTPUT.PUT_LINE('[FIN]');

EXCEPTION
    WHEN OTHERS THEN
        err_num := SQLCODE;
        err_msg := SQLERRM;
        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
        DBMS_OUTPUT.put_line(err_msg);
        ROLLBACK;
        RAISE;          
END;
/
EXIT;