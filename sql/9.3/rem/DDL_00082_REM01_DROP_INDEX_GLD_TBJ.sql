--/*
--#########################################
--## AUTOR=DAP
--## FECHA_CREACION=20200929
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=HREOS-10585
--## PRODUCTO=NO
--## 
--## Finalidad: Creación de tabla auxiliar para eliminar índices
--##			
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
----*/


WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE

	V_MSQL VARCHAR2(32000 CHAR); 
	V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; 
	V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#';
	V_SQL VARCHAR2(4000 CHAR);
	V_NUM NUMBER(16);
	ERR_NUM NUMBER(25);  
	ERR_MSG VARCHAR2(1024 CHAR); 

	TYPE T_ALTER IS TABLE OF VARCHAR2(4000);
    TYPE T_ARRAY_ALTER IS TABLE OF T_ALTER;
    V_ALTER T_ARRAY_ALTER := T_ARRAY_ALTER(
    			-- NOMBRE CAMPO							 
		T_ALTER('IDX_GLD_TBJ_TEG','BORRAR_INDICE')
		, T_ALTER('UK_GLD_TBJ','CREAR_UK', 'GLD_TBJ', 'TBJ_ID, DD_TEG_ID, FECHABORRAR, BORRADO')
		, T_ALTER('CK_GLD_TBJ','CREAR_CK', 'GLD_TBJ', '(BORRADO = 0 AND FECHABORRAR IS NULL) OR BORRADO = 1')
	);
    V_T_ALTER T_ALTER;

BEGIN

	DBMS_OUTPUT.PUT_LINE('[INICIO]');

	FOR I IN V_ALTER.FIRST .. V_ALTER.LAST
	LOOP

		V_T_ALTER := V_ALTER(I);
		
		IF ''||V_T_ALTER(2)||'' = 'BORRAR_INDICE' THEN 

			DBMS_OUTPUT.PUT_LINE('[INFO] BORRAR INDICE '||V_T_ALTER(1)||'.');
	
			V_MSQL := 'SELECT COUNT(*) FROM USER_INDEXES WHERE INDEX_NAME = '''||V_T_ALTER(1)||''' ';
			EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
			
			IF V_NUM > 0 THEN
			
				V_MSQL := 'DROP INDEX '||V_T_ALTER(1)||' ';
				EXECUTE IMMEDIATE V_MSQL;
				DBMS_OUTPUT.PUT_LINE('[INFO] INDICE '||V_T_ALTER(1)||' BORRADO.');

			ELSE

				DBMS_OUTPUT.PUT_LINE('[INFO] INDICE '||V_T_ALTER(1)||' YA EXISTENTE.');
			
			END IF;

		ELSIF ''||V_T_ALTER(2)||'' = 'CREAR_UK' THEN

			DBMS_OUTPUT.PUT_LINE('[INFO] CREAR UK '||V_T_ALTER(1)||'.');
	
			V_MSQL := 'SELECT COUNT(*) FROM ALL_CONSTRAINTS WHERE TABLE_NAME = '''||V_T_ALTER(3)||''' AND CONSTRAINT_NAME = '''||V_T_ALTER(1)||''' ';
			EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
			
			IF V_NUM = 0 THEN

				DBMS_OUTPUT.PUT_LINE('[INFO] LIMPIEZA Y AJUSTE TABLAS RELACION CON LINEAS.');

				V_MSQL := 'UPDATE '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR
					SET BORRADO = 1
					    , USUARIOBORRAR = ''DAP''
					    , FECHABORRAR = CURRENT_TIMESTAMP(6) + GPV_ID/1440
					WHERE USUARIOCREAR = ''PROC_GEN_GASTOS_ALBARANES''';
				EXECUTE IMMEDIATE V_MSQL;
				DBMS_OUTPUT.PUT_LINE('[INFO] BORRADOS '||SQL%ROWCOUNT||' REGISTROS DE LA GPV_GASTOS_PROVEEDOR.');			
					        
				V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.GLD_GASTOS_LINEA_DETALLE T1
					USING '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR T2
					ON (T1.GPV_ID = T2.GPV_ID)
					WHEN MATCHED THEN 
					    UPDATE SET
					        T1.BORRADO = 1
					        , T1.USUARIOBORRAR = ''DAP''
					        , T1.FECHABORRAR = CURRENT_TIMESTAMP(6) + T1.GLD_ID/1440
					WHERE T2.BORRADO = 1
					    AND T1.BORRADO = 0';
				EXECUTE IMMEDIATE V_MSQL;
				DBMS_OUTPUT.PUT_LINE('[INFO] BORRADOS '||SQL%ROWCOUNT||' REGISTROS DE LA GLD_GASTOS_LINEA_DETALLE.');
					    
				V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.GLD_TBJ T1
					USING '||V_ESQUEMA||'.GLD_GASTOS_LINEA_DETALLE T2
					ON (T1.GLD_ID = T2.GLD_ID)
					WHEN MATCHED THEN 
					    UPDATE SET
					        T1.BORRADO = 1
					        , T1.USUARIOBORRAR = ''DAP''
					        , T1.FECHABORRAR = CURRENT_TIMESTAMP(6) + T1.GLD_TBJ_ID/1440
					WHERE T2.BORRADO = 1
					    AND T1.BORRADO = 0';
				EXECUTE IMMEDIATE V_MSQL;
				DBMS_OUTPUT.PUT_LINE('[INFO] BORRADOS '||SQL%ROWCOUNT||' REGISTROS DE LA GLD_TBJ 1/3.');

				V_MSQL := 'UPDATE '||V_ESQUEMA||'.GLD_TBJ T1
					SET	T1.BORRADO = 1
					    , T1.USUARIOBORRAR = ''DAP''
					    , T1.FECHABORRAR = CURRENT_TIMESTAMP(6) + T1.GLD_TBJ_ID/1440
					WHERE T1.BORRADO = 1';
				EXECUTE IMMEDIATE V_MSQL;
				DBMS_OUTPUT.PUT_LINE('[INFO] BORRADOS '||SQL%ROWCOUNT||' REGISTROS DE LA GLD_TBJ 2/3.');		

				V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.GLD_TBJ T1
					USING (
						SELECT GLD_TBJ_ID
							, ROW_NUMBER() OVER(PARTITION BY TBJ_ID, DD_TEG_ID, FECHABORRAR, BORRADO ORDER BY GLD_TBJ_ID) RN
						FROM '||V_ESQUEMA||'.GLD_TBJ
						WHERE BORRADO = 0
					) T2
					ON (T1.GLD_TBJ_ID = T2.GLD_TBJ_ID AND T2.RN > 1)
					WHEN MATCHED THEN 
						UPDATE SET 
							T1.BORRADO = 1
					    	, T1.USUARIOBORRAR = ''DAP''
					    	, T1.FECHABORRAR = CURRENT_TIMESTAMP(6) + T1.GLD_TBJ_ID/1440';
				EXECUTE IMMEDIATE V_MSQL;
				DBMS_OUTPUT.PUT_LINE('[INFO] BORRADOS '||SQL%ROWCOUNT||' REGISTROS DE LA GLD_TBJ 3/3.');	
					    
				V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.GLD_ENT T1
					USING '||V_ESQUEMA||'.GLD_GASTOS_LINEA_DETALLE T2
					ON (T1.GLD_ID = T2.GLD_ID)
					WHEN MATCHED THEN 
					    UPDATE SET
					        T1.BORRADO = 1
					        , T1.USUARIOBORRAR = ''DAP''
					        , T1.FECHABORRAR = CURRENT_TIMESTAMP(6) + T1.GLD_ENT_ID/1440
					WHERE T2.BORRADO = 1
					    AND T1.BORRADO = 0';
			    EXECUTE IMMEDIATE V_MSQL;
			    DBMS_OUTPUT.PUT_LINE('[INFO] BORRADOS '||SQL%ROWCOUNT||' REGISTROS DE LA GLD_ENT.');
		
				V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_T_ALTER(3)||' ADD CONSTRAINT '||V_T_ALTER(1)||' UNIQUE ('||V_T_ALTER(4)||')';
				EXECUTE IMMEDIATE V_MSQL;
				DBMS_OUTPUT.PUT_LINE('[INFO] UK '||V_T_ALTER(1)||' CREADA.');

			ELSE

				DBMS_OUTPUT.PUT_LINE('[INFO] UK '||V_T_ALTER(1)||' YA EXISTENTE.');

			END IF;

		ELSIF ''||V_T_ALTER(2)||'' = 'CREAR_CK' THEN
		
			DBMS_OUTPUT.PUT_LINE('[INFO] CREAR CK '||V_T_ALTER(1)||'.');
	
			V_MSQL := 'SELECT COUNT(*) FROM ALL_CONSTRAINTS WHERE TABLE_NAME = '''||V_T_ALTER(3)||''' AND CONSTRAINT_NAME = '''||V_T_ALTER(1)||''' ';
			EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
			
			IF V_NUM = 0 THEN
			
				V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_T_ALTER(3)||' ADD CONSTRAINT '||V_T_ALTER(1)||' CHECK ('||V_T_ALTER(4)||')';
				EXECUTE IMMEDIATE V_MSQL;
				DBMS_OUTPUT.PUT_LINE('[INFO] CK '||V_T_ALTER(1)||' CREADA.');

			ELSE

				DBMS_OUTPUT.PUT_LINE('[INFO] CK '||V_T_ALTER(1)||' YA EXISTENTE.');
			
			END IF;

		END IF;
			
	END LOOP;
  
  	DBMS_OUTPUT.PUT_LINE('[INFO] PROCESO FINALIZADO.');

         
EXCEPTION

   WHEN OTHERS THEN
   
        err_num := SQLCODE;
        err_msg := SQLERRM;

        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
        DBMS_OUTPUT.put_line(err_msg);

        ROLLBACK;
        RAISE;          

END;
/
EXIT;
