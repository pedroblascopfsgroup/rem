--/*
--##########################################
--## AUTOR=Daniel Algaba
--## FECHA_CREACION=20201021
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=HREOS-11700
--## PRODUCTO=NO
--## Finalidad: DDL Creación de la tabla APR_AUX_DATOS_DQ
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE

    V_MSQL VARCHAR2(32000 CHAR); 
	V_ESQUEMA VARCHAR2(27 CHAR):= '#ESQUEMA#'; 
	V_ESQUEMA_M VARCHAR2(27 CHAR):= '#ESQUEMA_MASTER#';
	V_SQL VARCHAR2(4000 CHAR);
	V_NUM VARCHAR2(16);
	ERR_NUM VARCHAR2(25);  
	ERR_MSG VARCHAR2(1024 CHAR); 
	V_TABLA VARCHAR2(30 CHAR):= 'APR_AUX_DATOS_DQ';

BEGIN	
	DBMS_OUTPUT.PUT_LINE('[INFO] INICIO DEL PROCESO.');
	
	V_MSQL := '
	SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = '''||V_TABLA||''' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM != 0 THEN
		DBMS_OUTPUT.PUT_LINE('[INFO] LA TABLA '''||V_TABLA||''' YA EXISTE, SE BORRA Y SE VUELVE A CREAR');
		EXECUTE IMMEDIATE 'DROP TABLE '||V_ESQUEMA||'.'||V_TABLA||' CASCADE CONSTRAINTS';
	ELSE
		DBMS_OUTPUT.PUT_LINE('[INFO] LA TABLA '||V_TABLA||' NO EXISTE. SE CREARÁ.');
	END IF;		
	
	EXECUTE IMMEDIATE '
	CREATE TABLE '||V_ESQUEMA||'.'||V_TABLA||' (
		ACT_ID	VARCHAR2(100 CHAR)
		, DD_TPA_ID	VARCHAR2(100 CHAR)
		, DD_STA_ID	VARCHAR2(100 CHAR)
		, DD_TUD_ID	VARCHAR2(100 CHAR)
		, DDQ_IDUFIR	VARCHAR2(100 CHAR)
		, DDQ_NUM_FINCA	VARCHAR2(100 CHAR)
		, DDQ_TOMO	VARCHAR2(100 CHAR)
		, DDQ_LIBRO	VARCHAR2(100 CHAR)
		, DDQ_FOLIO	VARCHAR2(100 CHAR)
		, DD_LOC_ID_REG	VARCHAR2(100 CHAR)
		, DD_PRV_ID_REG	VARCHAR2(100 CHAR)
		, DDQ_NUM_REGISTRO	VARCHAR2(100 CHAR)
		, VPO	VARCHAR2(100 CHAR)
		, CARGAS	VARCHAR2(100 CHAR)
		, DESCRIPCION_CARGAS	VARCHAR2(150 CHAR)
		, INSCRIPCION	VARCHAR2(100 CHAR)
		, DDQ_PORC_PROPIEDAD	VARCHAR2(100 CHAR)
		, ANYO_CONSTRUCCION	VARCHAR2(100 CHAR)
		, DDQ_REFERENCIA_CATASTRAL	VARCHAR2(100 CHAR)
		, DD_TVI_ID	VARCHAR2(100 CHAR)
		, DDQ_NOMBRE_VIA	VARCHAR2(100 CHAR)
		, PROB_CALLE_CORRECTA	VARCHAR2(100 CHAR)
		, DDQ_COD_POST	VARCHAR2(250 CHAR)
		, DD_LOC_ID	VARCHAR2(100 CHAR)
		, DD_PRV_ID	VARCHAR2(100 CHAR)
		, DDQ_LATITUD	VARCHAR2(100 CHAR)
		, DDQ_LONGITUD	VARCHAR2(100 CHAR)
		, GEODISTANCIA	VARCHAR2(100 CHAR)
		, DDQ_SUPERFICIE_CONSTRUIDA	VARCHAR2(100 CHAR)
		, DDQ_SUPERFICIE_UTIL	VARCHAR2(100 CHAR)
		, NUM_IMAGENES	VARCHAR2(100 CHAR)
		, NUM_IMAGENES_EXT	VARCHAR2(100 CHAR)
		, NUM_IMAGENES_INT	VARCHAR2(100 CHAR)
		, NUM_IMAGENES_OBRA	VARCHAR2(100 CHAR)
		, NUM_IMAGENES_MIN_RES	VARCHAR2(100 CHAR)
		, NUM_IMAGENES_MIN_RES_X	VARCHAR2(100 CHAR)
		, NUM_IMAGENES_MIN_RES_Y	VARCHAR2(100 CHAR)
		, EST_IMAGENES	VARCHAR2(100 CHAR)
		, MENSAJE_IMAGENES	VARCHAR2(250 CHAR)
		, DESCRIPCION	VARCHAR2(1000 CHAR)
		, ETI_CEE_A	VARCHAR2(100 CHAR)
		, ETI_CEE_B	VARCHAR2(100 CHAR)
		, ETI_CEE_C	VARCHAR2(100 CHAR)
		, ETI_CEE_D	VARCHAR2(100 CHAR)
		, ETI_CEE_E	VARCHAR2(100 CHAR)
		, ETI_CEE_F	VARCHAR2(100 CHAR)
		, ETI_CEE_G	VARCHAR2(100 CHAR)
		, EST_CEE	VARCHAR2(100 CHAR)
		, MENSAJE_CEE	VARCHAR2(250 CHAR))';

	DBMS_OUTPUT.PUT_LINE('[INFO] LA TABLA '''||V_TABLA||''' HA SIDO CREADA CON EXITO.');
  COMMIT;
    
  DBMS_OUTPUT.PUT_LINE('[INFO] PROCESO FINALIZADO.');
         
EXCEPTION

   WHEN OTHERS THEN
   
        ERR_NUM := SQLCODE;
        ERR_MSG := SQLERRM;

        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
        DBMS_OUTPUT.put_line(ERR_MSG);

        ROLLBACK;
        RAISE;          

END;
/
EXIT
