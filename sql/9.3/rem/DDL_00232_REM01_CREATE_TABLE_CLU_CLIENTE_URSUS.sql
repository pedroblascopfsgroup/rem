--/*
--##########################################
--## AUTOR=GUILLEM REY
--## FECHA_CREACION=20210413
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=REMVIP-9312
--## PRODUCTO=NO
--## Finalidad: Modelo que gestiona la informacion de un cliente Ursus
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_TABLESPACE_IDX VARCHAR2(25 CHAR):= '#TABLESPACE_INDEX#'; -- Configuracion Tablespace de Indices
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    V_NUM_SEQ NUMBER(16); -- Vble. para validar la existencia de una secuencia.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    V_TEXT1 VARCHAR2(2400 CHAR); -- Vble. auxiliar
    V_TEXT_TABLA VARCHAR2(2400 CHAR) := 'CLU_CLIENTE_URSUS'; -- Vble. auxiliar para almacenar el nombre de la tabla de ref.
    V_TEXT_CONST VARCHAR2(2400 CHAR) := 'CLU_CLIENTE_URSUS'; -- Vble. auxiliar para almacenar el nombre de la tabla de ref.
    V_COMMENT_TABLE VARCHAR2(500 CHAR):= 'Modelo que gestiona la informacion de un cliente Ursus'; -- Vble. para los comentarios de las tablas

BEGIN


	DBMS_OUTPUT.PUT_LINE('********' ||V_TEXT_TABLA|| '********'); 
	DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.'||V_TEXT_TABLA||'... Comprobaciones previas');
	
	
	-- Verificar si la tabla ya existe
	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = '''||V_TEXT_TABLA||''' and owner = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 1 THEN
		DBMS_OUTPUT.PUT_LINE('[INFO] ' || V_ESQUEMA || '.'||V_TEXT_TABLA||'... Ya existe. Se borrará.');
		EXECUTE IMMEDIATE 'DROP TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' CASCADE CONSTRAINTS';
		
	END IF;

	-- Comprobamos si existe la secuencia
	V_SQL := 'SELECT COUNT(1) FROM ALL_SEQUENCES WHERE SEQUENCE_NAME = ''S_'||V_TEXT_TABLA||''' and SEQUENCE_OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_SQL INTO V_NUM_TABLAS; 
	IF V_NUM_TABLAS = 1 THEN
		DBMS_OUTPUT.PUT_LINE('[INFO] '|| V_ESQUEMA ||'.S_'||V_TEXT_TABLA||'... Ya existe. Se borrará.');  
		EXECUTE IMMEDIATE 'DROP SEQUENCE '||V_ESQUEMA||'.S_'||V_TEXT_TABLA||'';
		
	END IF; 
	
	
	-- Creamos la tabla
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA|| '.'||V_TEXT_TABLA||'...');
	V_MSQL := 'CREATE TABLE ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'
	(
		CLU_ID		           			NUMBER(16)            	NOT NULL,
		CLU_CLASE_DOC_IDENTIFICADOR 	VARCHAR2(5 CHAR)       	NOT NULL,
		CLU_DOCUMENTO_CLIENTE			VARCHAR2(20 CHAR)		NOT NULL,
		CLU_NUMERO_CLIENTE_URSUS		VARCHAR2(50 CHAR),
		CLU_NUMERO_CLIENTE_URSUS_BH		VARCHAR2(50 CHAR),
		CLU_NOMBRE_APELLIDOS_TITULAR 	VARCHAR2(300 CHAR),
		CLU_NOMBRE_CLIENTE				VARCHAR2(100 CHAR),
		CLU_APELLIDO1_CLIENTE			VARCHAR2(100 CHAR),
		CLU_APELLIDO2_CLIENTE			VARCHAR2(100 CHAR),
		CLU_CODIGO_TIPO_VIA				VARCHAR2(50 CHAR),
		CLU_TIPO_VIA_TRABAJO			VARCHAR2(300 CHAR),
		CLU_NOMBRE_VIA					VARCHAR2(100 CHAR),
		CLU_PORTAL						VARCHAR2(20 CHAR),
		CLU_ESCALERA					VARCHAR2(20 CHAR),
		CLU_PISO						VARCHAR2(5 CHAR),
		CLU_NUM_PUERTA					VARCHAR2(10 CHAR),
		CLU_CODIGO_POSTAL				VARCHAR2(20 CHAR),
		CLU_NOMBRE_MUNICIPIO			VARCHAR2(100 CHAR),
		CLU_NOMBRE_PROVINCIA			VARCHAR2(100 CHAR),
		CLU_CODIGO_PROVINCIA			VARCHAR2(20 CHAR),
		CLU_NOMBRE_PAIS					VARCHAR2(100 CHAR),
		CLU_DATOS_COMPL_DOMICILIO		VARCHAR2(300 CHAR),
		CLU_NOMBRE_BARRIO				VARCHAR2(100 CHAR),
		CLU_EDAD						VARCHAR2(5 CHAR),
		CLU_CODIGO_ESTADO_CIVIL			VARCHAR2(20 CHAR),
		CLU_ESTADO_CIVIL_ACTUAL			VARCHAR2(50 CHAR),
		CLU_NUMERO_HIJOS				VARCHAR2(5 CHAR),
		CLU_SEXO						VARCHAR2(20 CHAR),
		CLU_NOMBRE_EMPRESA				VARCHAR2(300 CHAR),
		CLU_DELEGACION					VARCHAR2(100 CHAR),
		CLU_TIPO_SOCIEDAD				VARCHAR2(20 CHAR),
		CLU_CODIGO_SITUACION_CLIENTE	VARCHAR2(20 CHAR),
		CLU_NOMBRE_SITUACION_CLIENTE	VARCHAR2(300 CHAR),
		CLU_FECHA_NACIMIENTO			VARCHAR2(100 CHAR),
		CLU_NOMBRE_PAIS_NACIMIENTO		VARCHAR2(100 CHAR),
		CLU_NOMBRE_PROVINCIA_NACIMIENTO	VARCHAR2(100 CHAR),
		CLU_NOMBRE_POBLACION_NACIMIENTO	VARCHAR2(100 CHAR),
		CLU_NOMBRE_PAIS_NACIONALIDAD	VARCHAR2(100 CHAR),
		CLU_NOMBRE_PAIS_RESIDENCIA		VARCHAR2(100 CHAR),
		CLU_SUBSECTOR_ACTIVIDAD_ECONOMICA	VARCHAR2(100 CHAR),
		CLU_HAY_OCURRENCIAS				NUMBER(1,0),
		CLU_NUM_CLIENTE_URSUS_CONYUGE	VARCHAR2(50 CHAR),
		CLU_NOMBRE_APELLIDOS_CONYUGE	VARCHAR2(300 CHAR),
		VERSION 						NUMBER(38,0) 		    DEFAULT 0 NOT NULL ENABLE, 
		USUARIOCREAR 					VARCHAR2(50 CHAR) 	    NOT NULL ENABLE, 
		FECHACREAR 						TIMESTAMP (6) 		    NOT NULL ENABLE, 
		USUARIOMODIFICAR 				VARCHAR2(50 CHAR), 
		FECHAMODIFICAR 					TIMESTAMP (6), 
		USUARIOBORRAR 					VARCHAR2(50 CHAR), 
		FECHABORRAR 					TIMESTAMP (6), 
		BORRADO 						NUMBER(1,0) 		    DEFAULT 0 NOT NULL ENABLE
	)
	LOGGING 
	NOCOMPRESS 
	NOCACHE
	NOPARALLEL
	NOMONITORING
	';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'... Tabla creada.');
	

	-- Creamos indice	
	V_MSQL := 'CREATE UNIQUE INDEX '||V_ESQUEMA||'.'||V_TEXT_CONST||'_PK ON '||V_ESQUEMA|| '.'||V_TEXT_TABLA||'(CLU_ID) TABLESPACE '||V_TABLESPACE_IDX;		
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_CONST||'_PK... Indice creado.');
	
	
	-- Creamos primary key
	V_MSQL := 'ALTER TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' ADD (CONSTRAINT '||V_TEXT_CONST||'_PK PRIMARY KEY (CLU_ID) USING INDEX)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_CONST||'_PK... PK creada.');


	-- Creamos sequence
	V_MSQL := 'CREATE SEQUENCE '||V_ESQUEMA||'.S_'||V_TEXT_TABLA||'';		
	EXECUTE IMMEDIATE V_MSQL;		
	DBMS_OUTPUT.PUT_LINE('[INFO] '||V_ESQUEMA||'.S_'||V_TEXT_TABLA||'... Secuencia creada');

	
	-- Creamos comentario	
	V_MSQL := 'COMMENT ON TABLE '||V_ESQUEMA||'.'||V_TEXT_TABLA||' IS '''||V_COMMENT_TABLE||'''';		
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'... Comentario creado.');
	
	DBMS_OUTPUT.PUT_LINE('[INFO] ' ||V_ESQUEMA||'.'||V_TEXT_TABLA||'... OK');


	COMMIT;


EXCEPTION
     WHEN OTHERS THEN 
         DBMS_OUTPUT.PUT_LINE('KO!');
          err_num := SQLCODE;
          err_msg := SQLERRM;

          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(err_msg);

          ROLLBACK;
          RAISE;          

END;

/

EXIT;
