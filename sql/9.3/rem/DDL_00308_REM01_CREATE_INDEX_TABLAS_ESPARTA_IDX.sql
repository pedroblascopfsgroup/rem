--/*
--##########################################
--## AUTOR=Daniel Algaba
--## FECHA_CREACION=20210526
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=HREOS-14112
--## PRODUCTO=NO
--## Finalidad: Creación índice en Tablas de convivencia Sareb
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    
    V_TABLESPACE_IDX VARCHAR2(25 CHAR):= '#TABLESPACE_INDEX#'; -- Configuracion Tablespace de Indices
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  
    V_NUM_SEQ NUMBER(16); -- Vble. para validar la existencia de una secuencia.  
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
    V_NUM_INDEX NUMBER(3); -- Vble. auxiliar para la numeración de índices
    V_TABLA VARCHAR2(50 CHAR); -- Vble. auxiliar para almacenar el nombres de tablas
    V_INDICE VARCHAR2(50 CHAR); -- Vble. auxiliar para almacenar el nombre del índice
    V_NUM_COLS_INDEX NUMBER(2);--  Vble. auxiliar que indica el numero de columnas a los que apunta el ínidce

 
    V_TEXT1 VARCHAR2(2400 CHAR); -- Vble. auxiliar 

    BEGIN
    
	
	-- TMP_CONV_SAREB_1
	V_MSQL := 'SELECT COUNT(1) FROM ALL_INDEXES WHERE INDEX_NAME = ''TMP_CONV_SAREB_1'' ';

	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 0 THEN
			V_MSQL := 'CREATE INDEX TMP_CONV_SAREB_1 ON '||V_ESQUEMA||'.TMP_CONV_SAREB (ACT_NUM_ACTIVO) TABLESPACE '||V_TABLESPACE_IDX;		
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Indice TMP_CONV_SAREB_1 - creado.');
	ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el índice TMP_CONV_SAREB_1 ');
	END IF;
	
	-- TMP_CONV_SAREB_1
	V_MSQL := 'SELECT COUNT(1) FROM ALL_INDEXES WHERE INDEX_NAME = ''TMP_CONV_SAREB_2'' ';

	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 0 THEN
			V_MSQL := 'CREATE INDEX TMP_CONV_SAREB_2 ON '||V_ESQUEMA||'.TMP_CONV_SAREB (ORIGEN) TABLESPACE '||V_TABLESPACE_IDX;		
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Indice TMP_CONV_SAREB_2 - creado.');
	ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el índice TMP_CONV_SAREB_2 ');
	END IF;
	
	V_MSQL := 'ANALYZE TABLE '||V_ESQUEMA||'.TMP_CONV_SAREB COMPUTE STATISTICS FOR TABLE';		
	EXECUTE IMMEDIATE V_MSQL;
	
	
	
	-- ACT_CND_SAREB_BY_CAMPOS_1
	V_MSQL := 'SELECT COUNT(1) FROM ALL_INDEXES WHERE INDEX_NAME = ''ACT_CND_SAREB_BY_CAMPOS_1'' ';

	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 0 THEN
			V_MSQL := 'CREATE INDEX ACT_CND_SAREB_BY_CAMPOS_1 ON '||V_ESQUEMA||'.ACT_CND_SAREB_BY_CAMPOS (ACT_ID, DD_CND_CODIGO) TABLESPACE '||V_TABLESPACE_IDX;		
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Indice ACT_CND_SAREB_BY_CAMPOS_1 - creado.');
	ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el índice ACT_CND_SAREB_BY_CAMPOS_1 ');
	END IF;
	
	-- ACT_CND_SAREB_BY_CAMPOS_2
	V_MSQL := 'SELECT COUNT(1) FROM ALL_INDEXES WHERE INDEX_NAME = ''ACT_CND_SAREB_BY_CAMPOS_2'' ';

	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 0 THEN
			V_MSQL := 'CREATE INDEX ACT_CND_SAREB_BY_CAMPOS_2 ON '||V_ESQUEMA||'.ACT_CND_SAREB_BY_CAMPOS (ORIGEN) TABLESPACE '||V_TABLESPACE_IDX;		
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Indice ACT_CND_SAREB_BY_CAMPOS_2 - creado.');
	ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el índice ACT_CND_SAREB_BY_CAMPOS_2 ');
	END IF;
	
	-- ACT_CND_SAREB_BY_CAMPOS_3
	V_MSQL := 'SELECT COUNT(1) FROM ALL_INDEXES WHERE INDEX_NAME = ''ACT_CND_SAREB_BY_CAMPOS_3'' ';

	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 0 THEN
			V_MSQL := 'CREATE INDEX ACT_CND_SAREB_BY_CAMPOS_3 ON '||V_ESQUEMA||'.ACT_CND_SAREB_BY_CAMPOS (ORIGEN, DD_CND_CODIGO) TABLESPACE '||V_TABLESPACE_IDX;		
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Indice ACT_CND_SAREB_BY_CAMPOS_3 - creado.');
	ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el índice ACT_CND_SAREB_BY_CAMPOS_3 ');
	END IF;
	
	V_MSQL := 'ANALYZE TABLE '||V_ESQUEMA||'.ACT_CND_SAREB_BY_CAMPOS COMPUTE STATISTICS FOR TABLE';		
	EXECUTE IMMEDIATE V_MSQL;
	
	
	
	-- ACT_CONF4_CONDICIONES_1
	V_MSQL := 'SELECT COUNT(1) FROM ALL_INDEXES WHERE INDEX_NAME = ''ACT_CONF4_CONDICIONES_1'' ';

	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 0 THEN
			V_MSQL := 'CREATE INDEX ACT_CONF4_CONDICIONES_1 ON '||V_ESQUEMA||'.ACT_CONF4_CONDICIONES (AC2_ID, BORRADO) TABLESPACE '||V_TABLESPACE_IDX;		
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Indice ACT_CONF4_CONDICIONES_1 - creado.');
	ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el índice ACT_CONF4_CONDICIONES_1 ');
	END IF;
	
	-- ACT_CONF4_CONDICIONES_2
	V_MSQL := 'SELECT COUNT(1) FROM ALL_INDEXES WHERE INDEX_NAME = ''ACT_CONF4_CONDICIONES_2'' ';

	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 0 THEN
			V_MSQL := 'CREATE INDEX ACT_CONF4_CONDICIONES_2 ON '||V_ESQUEMA||'.ACT_CONF4_CONDICIONES (AC4_CONDICION, BORRADO) TABLESPACE '||V_TABLESPACE_IDX;		
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Indice ACT_CONF4_CONDICIONES_2 - creado.');
	ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el índice ACT_CONF4_CONDICIONES_2 ');
	END IF;
	
	V_MSQL := 'ANALYZE TABLE '||V_ESQUEMA||'.ACT_CONF4_CONDICIONES COMPUTE STATISTICS FOR TABLE';		
	EXECUTE IMMEDIATE V_MSQL;
	
	
	
	-- TMP_CONV_SAREB_REJECTS_1
	V_MSQL := 'SELECT COUNT(1) FROM ALL_INDEXES WHERE INDEX_NAME = ''TMP_CONV_SAREB_REJECTS_1'' ';

	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 0 THEN
			V_MSQL := 'CREATE INDEX TMP_CONV_SAREB_REJECTS_1 ON '||V_ESQUEMA||'.TMP_CONV_SAREB_REJECTS (ACT_NUM_ACTIVO) TABLESPACE '||V_TABLESPACE_IDX;		
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Indice TMP_CONV_SAREB_REJECTS_1 - creado.');
	ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el índice TMP_CONV_SAREB_REJECTS_1 ');
	END IF;
	
	-- TMP_CONV_SAREB_REJECTS_2
	V_MSQL := 'SELECT COUNT(1) FROM ALL_INDEXES WHERE INDEX_NAME = ''TMP_CONV_SAREB_REJECTS_2'' ';

	EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;	
	IF V_NUM_TABLAS = 0 THEN
			V_MSQL := 'CREATE INDEX TMP_CONV_SAREB_REJECTS_2 ON '||V_ESQUEMA||'.TMP_CONV_SAREB_REJECTS (ORIGEN) TABLESPACE '||V_TABLESPACE_IDX;		
			EXECUTE IMMEDIATE V_MSQL;
			DBMS_OUTPUT.PUT_LINE('[INFO] Indice TMP_CONV_SAREB_REJECTS_2 - creado.');
	ELSE
			DBMS_OUTPUT.PUT_LINE('[INFO] Ya existe el índice TMP_CONV_SAREB_REJECTS_2 ');
	END IF;
	
	V_MSQL := 'ANALYZE TABLE '||V_ESQUEMA||'.TMP_CONV_SAREB_REJECTS COMPUTE STATISTICS FOR TABLE';		
	EXECUTE IMMEDIATE V_MSQL;

	
	COMMIT;



EXCEPTION
     WHEN OTHERS THEN 
         DBMS_OUTPUT.PUT_LINE('KO!');
          err_num := SQLCODE;
          err_msg := SQLERRM;

          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(err_msg);

          ROLLBACK;
          RAISE;          

END;

/

EXIT
