--/*
--#########################################
--## AUTOR=David Gonzalez
--## FECHA_CREACION=20190205
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=2.2
--## INCIDENCIA_LINK=HREOS-5342
--## PRODUCTO=NO
--## 
--## Finalidad: Creación de tabla desnormalizada para la carga de bienes de dación y todas sus auxiliares
--##			
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
----*/


WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE

	V_MSQL VARCHAR2(32000 CHAR); 
	V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; 
	V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#';
	V_SQL VARCHAR2(4000 CHAR);
	V_NUM NUMBER(16);
	ERR_NUM NUMBER(25);  
	ERR_MSG VARCHAR2(1024 CHAR); 

	V_TABLA VARCHAR2(30 CHAR):= 'APR_AUX_UPDATE_ACTIVOS_BCC';


BEGIN	

	DBMS_OUTPUT.PUT_LINE('[INFO] INICIO DEL PROCESO.');
	
	V_MSQL := '
	SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = '''||V_TABLA||''' AND OWNER = '''||V_ESQUEMA||'''
	'
	;
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM != 0 THEN
	
		DBMS_OUTPUT.PUT_LINE('[INFO] LA TABLA '''||V_TABLA||''' YA EXISTE.');
		
		
	ELSE
	
		DBMS_OUTPUT.PUT_LINE('[INFO] LA TABLA '||V_TABLA||' NO EXISTE. SE CREARÁ.');		
	

	EXECUTE IMMEDIATE '
	CREATE TABLE '||V_TABLA||' (
	BIE_ID NUMBER(16,0) NOT NULL ENABLE,
	DD_TVI_CODIGO VARCHAR2(20 CHAR),
	BIE_LOC_NOMBRE_VIA VARCHAR2(100 CHAR),
	BIE_LOC_NUMERO_DOMICILIO VARCHAR2(100 CHAR),
	BIE_LOC_ESCALERA VARCHAR2(10 CHAR),
	BIE_LOC_PISO VARCHAR2(11 CHAR),
	BIE_LOC_PUERTA VARCHAR2(17 CHAR),
	BIE_LOC_PROVINCIA VARCHAR2(2 CHAR),
	BIE_LOC_MUNICIPIO VARCHAR2(100 CHAR),
	DD_UPO_CODIGO VARCHAR2(20 CHAR),
	DD_CIC_CODIGO VARCHAR2(20 CHAR),
	BIE_LOC_COD_POST VARCHAR2(250 CHAR),
	ABA_NEXPRIESGO VARCHAR2(100 CHAR),
	BIE_DREG_CRU VARCHAR2(20 CHAR),
	BIE_DREG_SUPERFICIE_CONSTRUIDA NUMBER(16,2),
	BIE_DREG_SUPERFICIE NUMBER(16,2),
	DD_JUZ_CODIGO VARCHAR2(20 CHAR),
	DD_PLA_CODIGO VARCHAR2(20 CHAR),
	PDV_IMPORTE_DEUDA NUMBER(16,2),
	DD_ETI_CODIGO VARCHAR2(20 CHAR),
	SPS_RIESGO_OCUPACION NUMBER(1,0),
	SPS_OCUPADO NUMBER(1,0),
	SPS_FECHA_SOL_DESAHUCIO DATE,
	SPS_FECHA_LANZAMIENTO DATE,
	SPS_FECHA_LANZAMIENTO_EFECTIVO DATE,
	SPS_FECHA_TITULO DATE,
	FECHACREAR TIMESTAMP(6),
	TAS_FECHA_INI_TASACION DATE,
	TAS_FECHA_RECEPCION_TASACION DATE,
	TAS_NOMBRE_TASADOR VARCHAR2(100 CHAR),
	TAS_IMPORTE_TAS_FIN NUMBER(16,2),
	BIE_ADJ_F_SOL_POSESION DATE,
	BIE_ADJ_F_SEN_POSESION DATE,
	BIE_ADJ_F_REA_POSESION DATE,
	BIE_ADJ_LANZAMIENTO_NECES NUMBER(1),
	BIE_ADJ_F_SOL_MORATORIA DATE,
	DD_FAV_CODIGO VARCHAR2(20 CHAR),
	BIE_ADJ_F_RES_MORATORIA DATE,
	BIE_DREG_NUM_REGISTRO VARCHAR2(50 CHAR),
	BIE_ULTIMA_PETICION_NOTA DATE,
	DD_EDJ_CODIGO VARCHAR2(20 CHAR),
	AJD_NUM_AUTO VARCHAR2(50 CHAR),
	AJD_PROCURADOR VARCHAR2(100 CHAR),
	AJD_LETRADO VARCHAR2(100 CHAR),
	AJD_ID_ASUNTO NUMBER(16,0),
	BIE_ADJ_F_DECRETO_N_FIRME DATE,
	BIE_ADJ_F_DECRETO_FIRME DATE,
	BIE_ADJ_IMPORTE_ADJUDICACION NUMBER(16,2),
	BIE_ADJ_F_ENTREGA_GESTOR DATE,
	BIE_ADJ_F_PRESEN_HACIENDA DATE,
	BIE_ADJ_F_PRESENT_REGISTRO DATE,
	BIE_ADJ_F_ENVIO_ADICION DATE,
	BIE_ADJ_F_SEGUNDA_PRESEN DATE,
	BIE_ADJ_F_INSCRIP_TITULO DATE,
	BIE_ADJ_F_RECPCION_TITULO DATE,
	BIE_ADJ_LLAVES_NECESARIAS NUMBER(1,0),
	BIE_ADJ_F_RECEP_DEPOSITARIO DATE,
	DD_LOC_CODIGO VARCHAR2(20 CHAR),
	BIE_DREG_CODIGO_REGISTRO VARCHAR2(50 CHAR),
	BIE_DREG_TOMO VARCHAR2(50 CHAR),
	BIE_DREG_LIBRO VARCHAR2(50 CHAR),
	BIE_DREG_FOLIO VARCHAR2(50 CHAR),
	BIE_DREG_NUM_FINCA VARCHAR2(50 CHAR),
	DD_PRV_CODIGO VARCHAR2(20 CHAR),
	SPS_FECHA_VENC_TITULO DATE,
	CAT_REF_CATASTRAL VARCHAR2(50 CHAR),
	ACT_NUM_ACTIVO NUMBER(16,0),
	ACT_NUM_ACTIVO_BCC VARCHAR2(55 CHAR),
	ACT_RECOVERY_ID NUMBER(16,0),
	DD_TPN_CODIGO VARCHAR2(20 CHAR),
	DD_SAC_CODIGO VARCHAR2(20 CHAR),
	ACT_FECHA_REV_CARGAS DATE,
	REG_SUPERFICIE_UTIL NUMBER(16,2)
	)
	'
	;

	DBMS_OUTPUT.PUT_LINE('[INFO] LA TABLA '''||V_TABLA||''' HA SIDO CREADA CON EXITO.');
  COMMIT;
  END IF;
  
  DBMS_OUTPUT.PUT_LINE('[INFO] PROCESO FINALIZADO.');

         
EXCEPTION

   WHEN OTHERS THEN
   
        err_num := SQLCODE;
        err_msg := SQLERRM;

        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
        DBMS_OUTPUT.put_line(err_msg);

        ROLLBACK;
        RAISE;          

END;
/
EXIT
