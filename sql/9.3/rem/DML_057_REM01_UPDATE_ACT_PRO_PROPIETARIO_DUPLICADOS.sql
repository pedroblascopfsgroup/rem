--/*
--##########################################
--## AUTOR=GUILLEM REY
--## FECHA_CREACION=20190912
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=REMVIP-5229
--## PRODUCTO=NO
--##
--## INSTRUCCIONES: 
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE
    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar     
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.   
    V_EXIST_USU NUMBER(16); -- Vble. para validar la existencia de una usuario.
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

BEGIN	        

	DBMS_OUTPUT.PUT_LINE('[INICIO] ');
	-- VOLVER A BORRAR 2 PROPIETARIOS QUE SE DESBORRARON POR CAÑONAZO EN REMVIP-2872 Y REMVIP-3357 PORQUE NO ABRIAN ACTIVO O GASTO (NO PREOCUPARSE, ESTOS ACTIVOS O GASTOS SE CAMBIARAN DE PROPIETARIO POSTERIORMENTE)
	V_MSQL := 'UPDATE '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO SET BORRADO = 1, USUARIOBORRAR = ''REMVIP-5229'', FECHABORRAR = SYSDATE WHERE USUARIOMODIFICAR IN (''REMVIP-2872'', ''REMVIP-3357'') AND BORRADO = 0';
	EXECUTE IMMEDIATE V_MSQL;
	
	EXECUTE IMMEDIATE 'SELECT COUNT(1) FROM (SELECT PRO_ID, PRO_DOCIDENTIF,
				             ROW_NUMBER() OVER (PARTITION BY PRO.PRO_DOCIDENTIF ORDER BY BORRADO, DD_CRA_ID, PRO_NOMBRE, PRO_ID ASC) AS RN
				      FROM '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO PRO                      
				      WHERE PRO.BORRADO = 0) WHERE RN > 1' INTO V_NUM_TABLAS;
				      
	--SI HAY PROPIETARIOS DUPLICADOS			      
	IF V_NUM_TABLAS > 0 THEN
	
		-- BORRAR LOGICAMENTE TODOS LOS PROPIETARIOS DUPLICADOS
		V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO PRO
					USING (SELECT PRO_ID FROM (SELECT PRO_ID, PRO_DOCIDENTIF,
					             ROW_NUMBER() OVER (PARTITION BY PRO.PRO_DOCIDENTIF ORDER BY BORRADO, DD_CRA_ID, PRO_NOMBRE, PRO_ID ASC) AS RN
					      FROM '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO PRO                      
					      WHERE PRO.BORRADO = 0) WHERE RN > 1) AUX ON (PRO.PRO_ID = AUX.PRO_ID)
					WHEN MATCHED THEN UPDATE SET PRO.BORRADO = 1, PRO.USUARIOBORRAR = ''REMVIP-5229'', PRO.FECHABORRAR = SYSDATE';
		EXECUTE IMMEDIATE V_MSQL;			
		
		-- ASIGNAR EL MISMO PROPIETARIO DADO POR EL DOCUMENTO IDENTIFICATIVO (QUE NO ESTÉ BORRADO) A LOS GASTOS
		V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
					USING (SELECT DISTINCT PRO.PRO_DOCIDENTIF FROM '||V_ESQUEMA||'.GPV_GASTOS_PROVEEDOR GPV
					INNER JOIN '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO PRO ON GPV.PRO_ID = PRO.PRO_ID
					WHERE PRO.BORRADO = 1) PRO ON (PRO.PRO_DOCIDENTIF = (SELECT PRO_DOCIDENTIF FROM '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO WHERE PRO_ID = GPV.PRO_ID))
					WHEN MATCHED THEN UPDATE SET GPV.PRO_ID = (SELECT PRO_ID FROM '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO WHERE PRO_DOCIDENTIF = (SELECT PRO_DOCIDENTIF FROM '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO WHERE PRO_ID = GPV.PRO_ID) AND BORRADO = 0),
					GPV.USUARIOMODIFICAR = ''REMVIP-5229'', GPV.FECHAMODIFICAR = SYSDATE';
		EXECUTE IMMEDIATE V_MSQL;
		
		-- ASIGNAR EL MISMO PROPIETARIO DADO POR EL DOCUMENTO IDENTIFICATIVO (QUE NO ESTÉ BORRADO) A LOS ACTIVOS
		V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_PAC_PROPIETARIO_ACTIVO GPV
					USING (SELECT DISTINCT PRO.PRO_DOCIDENTIF FROM '||V_ESQUEMA||'.ACT_PAC_PROPIETARIO_ACTIVO GPV
					INNER JOIN '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO PRO ON GPV.PRO_ID = PRO.PRO_ID
					WHERE PRO.BORRADO = 1) PRO ON (PRO.PRO_DOCIDENTIF = (SELECT PRO_DOCIDENTIF FROM '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO WHERE PRO_ID = GPV.PRO_ID))
					WHEN MATCHED THEN UPDATE SET GPV.PRO_ID = (SELECT PRO_ID FROM '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO WHERE PRO_DOCIDENTIF = (SELECT PRO_DOCIDENTIF FROM '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO WHERE PRO_ID = GPV.PRO_ID) AND BORRADO = 0),
					GPV.USUARIOMODIFICAR = ''REMVIP-5229'', GPV.FECHAMODIFICAR = SYSDATE';
		EXECUTE IMMEDIATE V_MSQL;
		
	END IF;
	
	--CARTERIZAR LOS PROPIETARIOS SEGUN LA CARTERA DEL ACTIVO AL QUE ESTÁN ASIGNADOS
	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO PRO
				USING (SELECT DISTINCT PAC.PRO_ID FROM '||V_ESQUEMA||'.ACT_PAC_PROPIETARIO_ACTIVO PAC
				INNER JOIN '||V_ESQUEMA||'.ACT_PRO_PROPIETARIO PRO ON PAC.PRO_ID = PRO.PRO_ID
				WHERE PAC.BORRADO = 0 AND PRO.DD_CRA_ID IS NULL
				GROUP BY PAC.PRO_ID) AUX ON (AUX.PRO_ID = PRO.PRO_ID)
								WHEN MATCHED THEN UPDATE SET PRO.DD_CRA_ID = (SELECT DISTINCT DD_CRA_ID 
																			FROM '||V_ESQUEMA||'.ACT_ACTIVO ACT 
																			INNER JOIN '||V_ESQUEMA||'.ACT_PAC_PROPIETARIO_ACTIVO PAC ON ACT.ACT_ID = PAC.ACT_ID 
																			WHERE PAC.PRO_ID = (SELECT PRO_ID 
																				FROM (SELECT PRO_ID, COUNT(1) SUMA 
																					FROM (
																						SELECT DISTINCT PAC.PRO_ID, ACT.DD_CRA_ID 
																						FROM '||V_ESQUEMA||'.ACT_PAC_PROPIETARIO_ACTIVO PAC
						                                                                INNER JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON PAC.ACT_ID = ACT.ACT_ID
						                                                                WHERE PAC.PRO_ID = PRO.PRO_ID )GROUP BY PRO_ID ) 
																				WHERE SUMA = 1)), PRO.USUARIOMODIFICAR = ''REMVIP-5229'', PRO.FECHAMODIFICAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

	
	-- MUESTRA LOS PROPIETARIOS QUE SE HAN QUEDADO SIN CARTERA,
	-- 1 O PORQUE TIENEN ACTIVOS CON CARTERAS DIFERENTES
	-- 2 O PORQUE NO TIENEN ACTIVOS ASIGNADOS
	DBMS_OUTPUT.PUT_LINE('PROPIETARIOS SIN CARTERA: ');
    FOR T IN (SELECT PRO_DOCIDENTIF
				FROM (SELECT DISTINCT PRO.PRO_DOCIDENTIF 
						FROM #ESQUEMA#.ACT_PRO_PROPIETARIO PRO
			    		LEFT JOIN #ESQUEMA#.ACT_PAC_PROPIETARIO_ACTIVO PAC ON PRO.PRO_ID = PAC.PRO_ID
			    		WHERE PRO.BORRADO = 0 AND PAC.BORRADO = 0 AND PRO.DD_CRA_ID IS NULL)) LOOP
        DBMS_OUTPUT.PUT_LINE(T.PRO_DOCIDENTIF); 
    END LOOP;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('[FIN]');
    
EXCEPTION
     WHEN OTHERS THEN
          ERR_NUM := SQLCODE;
          ERR_MSG := SQLERRM;

          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(V_MSQL);
          DBMS_OUTPUT.put_line(ERR_MSG);

          ROLLBACK;
          RAISE;
          
END;
/
EXIT