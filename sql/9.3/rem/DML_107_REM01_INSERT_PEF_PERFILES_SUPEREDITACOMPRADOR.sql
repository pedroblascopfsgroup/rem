--/*
--##########################################
--## AUTOR=Alfonso Rodriguez
--## FECHA_CREACION=20200128
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=HREOS-9050
--## PRODUCTO=NO
--##
--## Finalidad: Script que crea un perfil y añade las funciones añadidas en T_ARRAY_FUNCION.
--## INSTRUCCIONES: 
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF; 
DECLARE

    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquemas
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master

    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    -- EDITAR: NÚMERO DE ITEM
    V_ITEM VARCHAR2(30 CHAR) := 'HREOS-9050'; -- USUARIOCREAR/USUARIOMODIFICAR.

    --EDITAR: DATOS DEL PERFIL
    V_PEF_CODIGO VARCHAR2(50) := 'SUPEREDITACOMPRADOR';
    V_PEF_DESCRIPCION VARCHAR2(255) := 'Super Editar comprador';
    V_PEF_DESCRIPCION_LARGA VARCHAR2(255) := 'Super Editar comprador';

    -- EDITAR: SI SE DESEA BORRAR PERMISOS PREVIOS PARA ESTE PERFIL, PONER 1
    V_BORRAR_PERMISOS NUMBER := 0;

    --EDITAR: FUNCIONES ASOCIADAS AL PERFIL
    TYPE T_FUNCION IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_FUNCION IS TABLE OF T_FUNCION;
    V_FUNCION T_ARRAY_FUNCION := T_ARRAY_FUNCION(
		T_FUNCION('EDITAR_TAB_COMPRADORES_EXPEDIENTES'),
		T_FUNCION('TAB_COMPRADORES_EXP_DETALLES_COMPRADOR')
    ); 
    V_TMP_FUNCION T_FUNCION;      
	V_CONSULTA_FUNCION VARCHAR2(2048) := 'SELECT COUNT(*) FROM ' || V_ESQUEMA_M || '.FUN_FUNCIONES WHERE FUN_DESCRIPCION=:1';
	V_NOM_FUNCION VARCHAR2(200);
    V_NUM_FUNCIONES NUMBER(16); 
	V_NUM_PERFILES NUMBER(16); 
	V_NUM_FPS NUMBER(16); 

     V_SQL_CONSULTA VARCHAR(2048) := 'SELECT COUNT(*) FROM '||V_ESQUEMA||'.PEF_PERFILES WHERE PEF_CODIGO = :1';
	V_SQL_INSERT_PERFIL VARCHAR(2048) := 'INSERT INTO '||V_ESQUEMA||'.PEF_PERFILES (PEF_ID, PEF_CODIGO, PEF_DESCRIPCION, PEF_DESCRIPCION_LARGA, 
		VERSION, USUARIOCREAR, FECHACREAR, BORRADO ) VALUES ('||V_ESQUEMA||'.S_PEF_PERFILES.NEXTVAL,:1,:2,:3,0,:4,SYSDATE,0)';
	V_SQL_UPDATE_PERFIL VARCHAR(2048) := 'UPDATE '||V_ESQUEMA||'.PEF_PERFILES SET PEF_DESCRIPCION=:1, PEF_DESCRIPCION_LARGA=:2,
		USUARIOMODIFICAR=:3, FECHAMODIFICAR=SYSDATE, BORRADO=0 WHERE PEF_CODIGO=:4';
	V_SQL_DELETE_FUN_PEF VARCHAR2(4000 CHAR) := 'DELETE FROM '||V_ESQUEMA||'.FUN_PEF WHERE PEF_ID=(SELECT PEF_ID FROM '||V_ESQUEMA||'.PEF_PERFILES WHERE PEF_CODIGO=:1)';
	V_SQL_INSERT_FUN_PEF VARCHAR2(4000 CHAR) := 'INSERT INTO '||V_ESQUEMA||'.FUN_PEF (FUN_ID, PEF_ID, FP_ID, VERSION, USUARIOCREAR, FECHACREAR, BORRADO)' || 
		'SELECT :1, :2, '|| V_ESQUEMA || q'[.S_FUN_PEF.NEXTVAL, 0, :3, SYSDATE, 0 FROM DUAL ]';
	V_CONSULTA_FUN_PEF VARCHAR2(4000 CHAR) := 'SELECT COUNT(*) FROM '||V_ESQUEMA||'.FUN_PEF WHERE FUN_ID=:1 AND PEF_ID=:2';
	V_CONSULTA_PEF_ID VARCHAR2(4000 CHAR) := 'SELECT PEF_ID FROM '||V_ESQUEMA||'.PEF_PERFILES WHERE PEF_CODIGO=:1';
	V_CONSULTA_FUN_ID VARCHAR2(4000 CHAR) := 'SELECT FUN_ID FROM '||V_ESQUEMA_M||'.FUN_FUNCIONES WHERE FUN_DESCRIPCION=:1';
	V_PEF_ID NUMBER;
	V_FUN_ID NUMBER;

BEGIN	

	DBMS_OUTPUT.PUT_LINE('[INICIO] INSERCION PERFIL: ' || V_PEF_CODIGO);
	EXECUTE IMMEDIATE V_SQL_CONSULTA INTO V_NUM_PERFILES USING V_PEF_CODIGO;
	
	IF V_NUM_PERFILES = 0 THEN
		EXECUTE IMMEDIATE V_SQL_INSERT_PERFIL USING V_PEF_CODIGO, V_PEF_DESCRIPCION, V_PEF_DESCRIPCION_LARGA, V_ITEM;
		DBMS_OUTPUT.PUT_LINE('[INFO] REGISTRO INSERTADO ' || V_PEF_CODIGO || ',' || V_PEF_DESCRIPCION || ': ' || sql%rowcount);
	ELSE
		EXECUTE IMMEDIATE V_SQL_UPDATE_PERFIL USING V_PEF_DESCRIPCION, V_PEF_DESCRIPCION_LARGA, V_ITEM, V_PEF_CODIGO;
		DBMS_OUTPUT.PUT_LINE('[INFO] REGISTRO ACTUALIZARO ' || V_PEF_CODIGO || ',' || V_PEF_DESCRIPCION || ': ' || sql%rowcount);
		IF V_BORRAR_PERMISOS = 1 THEN
		    EXECUTE IMMEDIATE V_SQL_DELETE_FUN_PEF USING V_PEF_CODIGO;
		    DBMS_OUTPUT.PUT_LINE('[INFO] FUN_PEF registros previos borrados (' || V_PEF_CODIGO || '): ' || sql%rowcount);
		END IF;
	END IF;

	EXECUTE IMMEDIATE V_CONSULTA_PEF_ID INTO V_PEF_ID USING V_PEF_CODIGO;
	FOR I IN V_FUNCION.FIRST .. V_FUNCION.LAST 
    LOOP
        V_TMP_FUNCION := V_FUNCION(I);
        V_NOM_FUNCION := V_TMP_FUNCION(1);
        EXECUTE IMMEDIATE V_CONSULTA_FUNCION INTO V_NUM_FUNCIONES USING V_NOM_FUNCION;
		IF V_NUM_FUNCIONES=0 THEN
			DBMS_OUTPUT.PUT_LINE('[INFO] Función ' || V_NOM_FUNCION || ' no existe.');
		ELSE
			EXECUTE IMMEDIATE V_CONSULTA_FUN_ID INTO V_FUN_ID USING V_NOM_FUNCION;
		    EXECUTE IMMEDIATE V_CONSULTA_FUN_PEF INTO V_NUM_FPS USING V_FUN_ID, V_PEF_ID;
			IF V_NUM_FPS>0 THEN
				DBMS_OUTPUT.PUT_LINE('[INFO] FUN_PEF registro YA existe (' || V_NOM_FUNCION || ',' || V_PEF_CODIGO || ')');
			ELSE
				EXECUTE IMMEDIATE V_SQL_INSERT_FUN_PEF USING V_FUN_ID, V_PEF_ID, V_ITEM;
				DBMS_OUTPUT.PUT_LINE('[INFO] FUN_PEF registro insertado (' || V_NOM_FUNCION || ',' || V_PEF_CODIGO || '): ' || sql%rowcount);
			END IF;
		END IF;
	END LOOP;

	COMMIT;
	DBMS_OUTPUT.PUT_LINE('[FIN] PERFIL ' || V_PEF_CODIGO || ',' || V_PEF_DESCRIPCION || ' Y PERMISOS CORRECTAMENTE ACTUALIZADOS.');
 
EXCEPTION
     WHEN OTHERS THEN
          ERR_NUM := SQLCODE;
          ERR_MSG := SQLERRM;
          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(ERR_MSG);
          ROLLBACK;
          RAISE;   
END;
/
EXIT;
