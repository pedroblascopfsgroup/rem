--/*
--#########################################
--## AUTOR=José Antonio Gigante
--## FECHA_CREACION=20200205
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=HREOS-9360
--## PRODUCTO=NO
--## 
--## Finalidad: Actualizacion registros 
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE

	V_TABLA VARCHAR2(100 CHAR) := 'ACT_MLV_MOVIMIENTO_LLAVE'; -- Variable para tabla de salida para el borrado
	V_ESQUEMA VARCHAR2(25 CHAR):= 'REM01';-- '#ESQUEMA#'; -- Configuracion Esquema
	V_ESQUEMA_M VARCHAR2(25 CHAR):= 'REMMASTER';-- '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
	ERR_NUM NUMBER;-- Numero de errores
	ERR_MSG VARCHAR2(2048);-- Mensaje de error
	V_SQL VARCHAR2(4000 CHAR);
	PL_OUTPUT VARCHAR2(32000 CHAR);
	V_USUARIO VARCHAR2(50 CHAR) := 'HREOS-9360';
	

BEGIN
	
	DBMS_OUTPUT.PUT_LINE('[INICIO]'||CHR(10));
	V_SQL := 'INSERT INTO '||V_ESQUEMA||'.'||V_TABLA||' 
			(
				MLV_ID
				, LLV_ID
				, DD_TTE_ID
				, MLV_COD_TENEDOR
				, MLV_NOM_TENEDOR
				, VERSION
				, USUARIOCREAR
				, FECHACREAR
				, BORRADO
				, DD_TTE_ID_POSEEDOR
				, MLV_COD_TENEDOR_POSEEDOR
				, MLV_COD_TENEDOR_POS_NO_PVE
				, DD_TTE_ID_PEDIDOR
				, MLV_COD_TENEDOR_PEDIDOR
				, MLV_COD_TENEDOR_PED_NO_PVE
				, MLV_ENVIO
				, MLV_OBSERVACIONES
				, MLV_ESTADO
				, MLV_FECHA_ENVIO
				, MLV_FECHA_RECEPCION
			)
			select 
			REM01.S_ACT_MLV_MOVIMIENTO_LLAVE.NEXTVAL
			, LLV.LLV_ID
			, TTEP.DD_TTE_ID DD_TTE_ID
			, PVEP.PVE_ID MLV_COD_TENEDOR
			, CASE WHEN PVEP.PVE_ID IS NULL AND AUX.MLV_COD_TENEDOR_POSEEDOR_NO_PVE IS NULL THEN ''Sin tenedor'' 
				WHEN PVEP.PVE_ID IS NOT NULL THEN NULL
				ELSE AUX.MLV_COD_TENEDOR_POSEEDOR_NO_PVE
				END MLV_NOM_TENEDOR
			, 0
			, '''||V_USUARIO||'''
			, SYSDATE
			, 0
			, TTEP.DD_TTE_ID DD_TTE_ID_POSEEDOR
			, PVEP.PVE_ID MLV_COD_TENEDOR_POSEEDOR
			, CASE WHEN PVEP.PVE_ID IS NULL AND AUX.MLV_COD_TENEDOR_POSEEDOR_NO_PVE IS NULL THEN ''Sin tenedor'' 
				WHEN PVEP.PVE_ID IS NOT NULL THEN NULL
				ELSE AUX.MLV_COD_TENEDOR_POSEEDOR_NO_PVE
				END MLV_COD_TENEDOR_POS_NO_PVE
			, TTED.DD_TTE_ID DD_TTE_ID_PEDIDOR
			, PVED.PVE_ID MLV_COD_TENEDOR_PEDIDOR
			, CASE WHEN PVED.PVE_ID IS NULL AND AUX.MLV_COD_TENEDOR_PEDIDOR_NO_PVE IS NULL THEN ''Sin tenedor'' 
				WHEN PVED.PVE_ID IS NOT NULL THEN NULL
				ELSE AUX.MLV_COD_TENEDOR_PEDIDOR_NO_PVE
				END MLV_COD_TENEDOR_PED_NO_PVE
			, AUX.MLV_ENVIO
			, AUX.MLV_OBSERVACIONES
			, EST.DD_TTE_ID
			, AUX.MLV_FECHA_ENVIO
			, AUX.MLV_FECHA_RECEPCION
			from REM01.AUX_INSERTA_MOVIMIENTOS_LLAVES_ACTIVO aux
			JOIN REM01.ACT_LLV_LLAVE LLV ON aux.LLV_NUM_LLAVE = LLV.LLV_NUM_LLAVE
			LEFT JOIN REM01.DD_TTE_TIPO_TENEDOR TTEP ON TTEP.DD_TTE_CODIGO = AUX.DD_TTE_CODIGO_POSEEDOR
			LEFT JOIN REM01.DD_TTE_TIPO_TENEDOR TTED ON TTED.DD_TTE_CODIGO = AUX.DD_TTE_CODIGO_PEDIDOR
			LEFT JOIN REM01.ACT_PVE_PROVEEDOR PVEP ON PVEP.PVE_COD_REM = AUX.MLV_COD_TENEDOR_POSEEDOR
			LEFT JOIN REM01.ACT_PVE_PROVEEDOR PVED ON PVED.PVE_COD_REM = AUX.MLV_COD_TENEDOR_PEDIDOR
			LEFT JOIN REM01.DD_TTE_TIPO_ESTADO EST ON EST.DD_TTE_CODIGO = AUX.MLV_ESTADO';				

		EXECUTE IMMEDIATE V_SQL;
		DBMS_OUTPUT.PUT_LINE('[INFO] Se han mergeado en total '||SQL%ROWCOUNT||' registros en la tabla ACT_ACTIVO');

	COMMIT;

	PL_OUTPUT := PL_OUTPUT || '[FIN]'||CHR(10);
	DBMS_OUTPUT.PUT_LINE(PL_OUTPUT);

EXCEPTION
    WHEN OTHERS THEN
      PL_OUTPUT := PL_OUTPUT ||'[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(SQLCODE)||CHR(10);
      PL_OUTPUT := PL_OUTPUT ||'-----------------------------------------------------------'||CHR(10);
      PL_OUTPUT := PL_OUTPUT ||SQLERRM||CHR(10);
      PL_OUTPUT := PL_OUTPUT ||V_SQL||CHR(10);
      DBMS_OUTPUT.PUT_LINE(PL_OUTPUT);
      ROLLBACK;
      RAISE;
END;
/
EXIT;
