--/*
--##########################################
--## AUTOR=PIER GOTTA
--## FECHA_CREACION=20220706
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.2
--## INCIDENCIA_LINK=HREOS-18229
--## PRODUCTO=NO
--## Finalidad: 
--##           
--## INSTRUCCIONES: Configurar las variables necesarias en el principio del DECLARE
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;

CREATE OR REPLACE PROCEDURE #ESQUEMA#.SP_EAS_09_TEXTOS_ADICIONALES (
      PL_OUTPUT       OUT VARCHAR2
)
AS

  V_ESQUEMA VARCHAR2(15 CHAR) := '#ESQUEMA#';
  V_ESQUEMA_MASTER VARCHAR2(15 CHAR) := '#ESQUEMA_MASTER#';
  V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.  

  V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.

BEGIN

    DBMS_OUTPUT.PUT_LINE('[INICIO]');
    
        V_SQL := 'TRUNCATE TABLE ' || V_ESQUEMA || '.AUX_APR_TEXTOS_ADICIONALES';
   	
   	EXECUTE IMMEDIATE V_SQL;

        V_SQL := 'MERGE INTO ' || V_ESQUEMA || '.AUX_APR_TEXTOS_ADICIONALES APR USING(
			SELECT 11 AS TREGISTRO, 
		     ACT.ACT_NUM_ACTIVO AS ZZEXTERNALID, 
                    ''RE01'' AS TEXTCATE,
                    ACT.ACT_DESCRIPCION AS XTEXTCATE
		     FROM ' || V_ESQUEMA || '.ACT_AGR_AGRUPACION AGR 
		     JOIN ' || V_ESQUEMA || '.ACT_AGA_AGRUPACION_ACTIVO AGA ON AGR.AGR_ID = AGA.AGR_ID AND AGA.BORRADO = 0
		     JOIN ' || V_ESQUEMA || '.ACT_ACTIVO ACT ON ACT.ACT_ID = AGA.ACT_ID AND ACT.BORRADO = 0 
	             WHERE AGR.BORRADO = 0 AND AGR.AGR_FECHA_BAJA IS NULL AND 
		     AGR.DD_TAG_ID = (SELECT DD_TAG_ID FROM ' || V_ESQUEMA || '.DD_TAG_TIPO_AGRUPACION WHERE DD_TAG_CODIGO = ''16'') AND AGA.AGA_PRINCIPAL = 0
             UNION ALL
             SELECT 11 AS TREGISTRO, 
		     ACT.ACT_NUM_ACTIVO AS ZZEXTERNALID, 
                    ''RE04'' AS TEXTCATE,
                    APU.APU_MOT_OCULTACION_MANUAL_A AS XTEXTCATE
		     FROM ' || V_ESQUEMA || '.ACT_AGR_AGRUPACION AGR 
		     JOIN ' || V_ESQUEMA || '.ACT_AGA_AGRUPACION_ACTIVO AGA ON AGR.AGR_ID = AGA.AGR_ID AND AGA.BORRADO = 0
		     JOIN ' || V_ESQUEMA || '.ACT_ACTIVO ACT ON ACT.ACT_ID = AGA.ACT_ID AND ACT.BORRADO = 0 
		     JOIN ' || V_ESQUEMA || '.ACT_APU_ACTIVO_PUBLICACION APU ON ACT.ACT_ID = APU.ACT_ID  
		     JOIN ' || V_ESQUEMA || '.ACT_PAC_PERIMETRO_ACTIVO PAC ON ACT.ACT_ID = PAC.ACT_ID 
	             WHERE AGR.BORRADO = 0 AND AGR.AGR_FECHA_BAJA IS NULL AND 
		     AGR.DD_TAG_ID = (SELECT DD_TAG_ID FROM ' || V_ESQUEMA || '.DD_TAG_TIPO_AGRUPACION WHERE DD_TAG_CODIGO = ''16'') AND AGA.AGA_PRINCIPAL = 0 AND PAC.PAC_CHECK_PUBLICAR = 0
                          UNION ALL
             SELECT 11 AS TREGISTRO, 
		     ACT.ACT_NUM_ACTIVO AS ZZEXTERNALID, 
                    ''RE07'' AS TEXTCATE,
                    REPLACE(REPLACE(ICO.ICO_INFO_DISTRIBUCION_INTERIOR, CHR(10), '' ''), CHR(13), '' '')||REPLACE(REPLACE(EDIF.EDI_DESCRIPCION, CHR(10), '' ''), CHR(13), '' '') AS XTEXTCATE
		     FROM ' || V_ESQUEMA || '.ACT_AGR_AGRUPACION AGR 
		     JOIN ' || V_ESQUEMA || '.ACT_AGA_AGRUPACION_ACTIVO AGA ON AGR.AGR_ID = AGA.AGR_ID AND AGA.BORRADO = 0
		     JOIN ' || V_ESQUEMA || '.ACT_ACTIVO ACT ON ACT.ACT_ID = AGA.ACT_ID AND ACT.BORRADO = 0 
		     JOIN ' || V_ESQUEMA || '.ACT_ICO_INFO_COMERCIAL ICO ON ACT.ACT_ID = ICO.ACT_ID
		     JOIN ' || V_ESQUEMA || '.ACT_EDI_EDIFICIO EDIF ON EDIF.ICO_ID = ICO.ICO_ID
	             WHERE AGR.BORRADO = 0 AND AGR.AGR_FECHA_BAJA IS NULL AND 
		     AGR.DD_TAG_ID = (SELECT DD_TAG_ID FROM ' || V_ESQUEMA || '.DD_TAG_TIPO_AGRUPACION WHERE DD_TAG_CODIGO = ''16'') AND AGA.AGA_PRINCIPAL = 0
			) AUX ON (AUX.ZZEXTERNALID = APR.ZZEXTERNALID) 
			WHEN NOT MATCHED THEN INSERT
			(
			APR.TREGISTRO,
			APR.ZZEXTERNALID,
			APR.TEXTCATE,
			APR.XTEXTCATE
			) VALUES(
			AUX.TREGISTRO,
			AUX.ZZEXTERNALID,
			AUX.TEXTCATE,
			AUX.XTEXTCATE)';

        EXECUTE IMMEDIATE V_SQL;

    DBMS_OUTPUT.PUT_LINE('[INFO] FIN UPDATE / INSERT');
    COMMIT;

EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.put_line ('ERROR: ' || TO_CHAR (SQLCODE));
      DBMS_OUTPUT.put_line (SQLERRM);
      ROLLBACK;
      RAISE;
END SP_EAS_09_TEXTOS_ADICIONALES;
/
EXIT;
