--/*
--######################################### 
--## AUTOR=Carles Molins
--## FECHA_CREACION=20200131
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=REMVIP-6304
--## PRODUCTO=NO
--## 
--## Finalidad:
--##            
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;

DECLARE
	ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
	ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
	V_ESQUEMA VARCHAR2(25 CHAR):= 'REM01'; -- Configuracion Esquemas.
	V_ESQUEMA_MASTER VARCHAR2(25 CHAR):= 'REMMASTER'; -- Configuracion Esquemas.
	V_USUARIOCREAR VARCHAR2(100 CHAR):= 'REMVIP-6304';
	V_MSQL VARCHAR2 (32000 CHAR);
	V_COUNT NUMBER(16):= 0;
	V_COM_ID NUMBER(16);
    
    CURSOR EXP_SIN_COMPRADOR IS 
		SELECT DISTINCT ECO.ECO_ID, CLC.CLC_ID
		FROM REM01.ECO_EXPEDIENTE_COMERCIAL ECO
		JOIN REM01.OFR_OFERTAS OFR ON OFR.OFR_ID = ECO.OFR_ID
		JOIN REM01.ACT_OFR AO ON AO.OFR_ID = ECO.OFR_ID
		JOIN REM01.ACT_ACTIVO ACT ON ACT.ACT_ID = AO.ACT_ID
		JOIN REM01.CLC_CLIENTE_COMERCIAL CLC ON CLC.CLC_ID = OFR.CLC_ID
		LEFT JOIN REM01.CEX_COMPRADOR_EXPEDIENTE CEX ON CEX.ECO_ID = ECO.ECO_ID
		WHERE ACT.DD_CRA_ID = 1
		AND OFR.FECHACREAR > TRUNC(TO_DATE('23/01/2020', 'DD/MM/YYYY'))
		AND ECO.DD_EEC_ID <> 2
		AND CEX.ECO_ID IS NULL;

    FILA EXP_SIN_COMPRADOR%ROWTYPE;
   
BEGIN
    DBMS_OUTPUT.put_line('[INICIO]');
    
    OPEN EXP_SIN_COMPRADOR;
    
    V_COUNT := 0;
    
    LOOP
        FETCH EXP_SIN_COMPRADOR INTO FILA;
        EXIT WHEN EXP_SIN_COMPRADOR%NOTFOUND;
        
        DBMS_OUTPUT.put_line('	[INFO] ECO_ID = '||FILA.ECO_ID||', CLC_ID = '||FILA.CLC_ID);
        
        V_MSQL := 'SELECT COM.COM_ID FROM '||V_ESQUEMA||'.CLC_CLIENTE_COMERCIAL CLC
					LEFT JOIN '||V_ESQUEMA||'.COM_COMPRADOR COM ON COM.COM_DOCUMENTO = CLC.CLC_DOCUMENTO
					WHERE CLC.CLC_ID = '||FILA.CLC_ID;
		EXECUTE IMMEDIATE V_MSQL INTO V_COM_ID;
        
        IF V_COM_ID IS NULL THEN
        
        	V_MSQL := 'SELECT '||V_ESQUEMA||'.S_COM_COMPRADOR.NEXTVAL FROM DUAL';
        	EXECUTE IMMEDIATE V_MSQL INTO V_COM_ID;
        
        	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.COM_COMPRADOR T1
						USING (
						    WITH AUX_CGD_CLIENTE_GDPR AS (
							    SELECT CLC.CLC_ID, CGD.ADCOM_ID, ROW_NUMBER() OVER (PARTITION BY CLC.CLC_ID ORDER BY 1) AS RN 
								FROM '||V_ESQUEMA||'.CLC_CLIENTE_COMERCIAL CLC
							    LEFT JOIN '||V_ESQUEMA||'.CGD_CLIENTE_GDPR CGD ON CGD.NUM_DOCUMENTO = CLC.CLC_DOCUMENTO AND CGD.DD_TDI_ID = CLC.DD_TDI_ID
						    )
						    SELECT COM.COM_ID, CLC.CLC_ID, CLC.DD_TPE_ID, CLC.CLC_DOCUMENTO,
						        CASE WHEN CLC.DD_TPE_ID = 2 THEN CLC.CLC_RAZON_SOCIAL ELSE CLC.CLC_NOMBRE END AS CLC_NOMBRE,
						        CASE WHEN CLC.DD_TPE_ID = 1 THEN CLC.CLC_APELLIDOS END AS CLC_APELLIDOS,
						        CLC.DD_TDI_ID, CLC.CLC_TELEFONO1, CLC.CLC_TELEFONO2, CLC.CLC_EMAIL,
						        TVI.DD_TVI_CODIGO || '' '' || CLC.CLC_DIRECCION || '' '' || CLC.CLC_NUMEROCALLE
						        || CASE WHEN CLC.CLC_PUERTA IS NOT NULL THEN '', pta '' || CLC.CLC_PUERTA END
						        || CASE WHEN CLC.CLC_PLANTA IS NOT NULL THEN '', plta '' || CLC.CLC_PLANTA END 
						        || CASE WHEN CLC.CLC_ESCALERA IS NOT NULL THEN '', esc '' || CLC.CLC_ESCALERA END AS CLC_DIRECCION,
						        CLC.DD_LOC_ID, CLC.DD_PRV_ID, CLC.CLC_CODIGO_POSTAL,CLC.CLC_CESION_DATOS,
						        CLC.CLC_COMUNI_TERCEROS, CLC.CLC_TRANSF_INTER, CLC.CLC_ID_PERSONA_HAYA, AUX.ADCOM_ID
						    FROM '||V_ESQUEMA||'.CLC_CLIENTE_COMERCIAL CLC
						    LEFT JOIN '||V_ESQUEMA||'.COM_COMPRADOR COM ON COM.COM_DOCUMENTO = CLC.CLC_DOCUMENTO
						    JOIN '||V_ESQUEMA_MASTER||'.DD_TVI_TIPO_VIA TVI ON TVI.DD_TVI_ID = CLC.DD_TVI_ID
						    JOIN AUX_CGD_CLIENTE_GDPR AUX ON AUX.CLC_ID = CLC.CLC_ID AND AUX.RN = 1
						    WHERE CLC.CLC_ID = '||FILA.CLC_ID||'
						) T2
						ON (T1.COM_ID = T2.COM_ID)
						WHEN NOT MATCHED THEN INSERT (
						    T1.COM_ID,
						    T1.DD_TPE_ID,
						    T1.COM_NOMBRE,
						    T1.COM_APELLIDOS,
						    T1.DD_TDI_ID,
						    T1.COM_DOCUMENTO,
						    T1.COM_TELEFONO1,
						    T1.COM_TELEFONO2,
						    T1.COM_EMAIL,
						    T1.COM_DIRECCION,
						    T1.COM_CODIGO_POSTAL,
						    T1.VERSION,
						    T1.USUARIOCREAR,
						    T1.FECHACREAR,
						    T1.BORRADO,
						    T1.CLC_ID,
						    T1.DD_LOC_ID,
						    T1.DD_PRV_ID,
						    T1.COM_CESION_DATOS,
						    T1.COM_TRANSF_INTER,
						    T1.COM_COMUNI_TERCEROS,
						    T1.ID_PERSONA_HAYA,
						    T1.ADCOM_ID
						)VALUES(
						    '||V_COM_ID||',
						    T2.DD_TPE_ID,
						    T2.CLC_NOMBRE,
						    T2.CLC_APELLIDOS,
						    T2.DD_TDI_ID,
						    T2.CLC_DOCUMENTO,
						    T2.CLC_TELEFONO1,
						    T2.CLC_TELEFONO2,
						    T2.CLC_EMAIL,
						    T2.CLC_DIRECCION,
						    T2.CLC_CODIGO_POSTAL,
						    0,
						    '''||V_USUARIOCREAR||''',
						    SYSDATE,
						    0,
						    T2.CLC_ID,
						    T2.DD_LOC_ID,
						    T2.DD_PRV_ID,
						    T2.CLC_CESION_DATOS,
						    T2.CLC_TRANSF_INTER,
						    T2.CLC_COMUNI_TERCEROS,
						    T2.CLC_ID_PERSONA_HAYA,
						    T2.ADCOM_ID
						)';
			EXECUTE IMMEDIATE V_MSQL;
        	
        END IF;
        
        V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.CEX_COMPRADOR_EXPEDIENTE T1
					USING (
					    WITH AUX_CGD_CLIENTE_GDPR AS (
					        SELECT CLC.CLC_ID, CGD.ADCOM_ID, ROW_NUMBER() OVER (PARTITION BY CLC.CLC_ID ORDER BY 1) AS RN
							FROM '||V_ESQUEMA||'.CLC_CLIENTE_COMERCIAL CLC
					        LEFT JOIN '||V_ESQUEMA||'.CGD_CLIENTE_GDPR CGD ON CGD.NUM_DOCUMENTO = CLC.CLC_DOCUMENTO AND CGD.DD_TDI_ID = CLC.DD_TDI_ID
					    )
					    SELECT '||V_COM_ID||' AS COM_ID, '||FILA.ECO_ID||' AS ECO_ID, 
					        CASE WHEN CLC.DD_TPE_ID = 2 THEN CLC.CLC_NOMBRE END AS CEX_NOMBRE_RTE,
					        CASE WHEN CLC.DD_TPE_ID = 2 THEN CLC.CLC_APELLIDOS END AS CEX_APELLIDOS_RTE,
					        CASE WHEN CLC.DD_TPE_ID = 2 THEN CLC.DD_TDI_ID_REPRESENTANTE END AS DD_TDI_ID_RTE,
					        CASE WHEN CLC.DD_TPE_ID = 2 THEN CLC.CLC_DOCUMENTO_REPRESENTANTE END AS CEX_DOCUMENTO_RTE,
					        CLC.DD_ECV_ID, CLC.DD_REM_ID, CLC.DD_TDI_ID_CONYUGE, CLC.CLC_DOCUMENTO_CONYUGE, CLC.DD_PAI_ID,
					        CLC.CLC_DIRECCION_RTE, CLC.DD_PRV_ID_RTE, CLC.DD_LOC_ID_RTE, CLC.DD_PAI_ID_RTE, CLC.CLC_CODIGO_POSTAL_RTE,
					        AUX.ADCOM_ID
					    FROM '||V_ESQUEMA||'.CLC_CLIENTE_COMERCIAL CLC
					    JOIN AUX_CGD_CLIENTE_GDPR AUX ON AUX.CLC_ID = CLC.CLC_ID AND AUX.RN = 1
					    WHERE CLC.CLC_ID = '||FILA.CLC_ID||'
					) T2
					ON (T1.ECO_ID = T2.ECO_ID)
					WHEN NOT MATCHED THEN INSERT (
					    T1.COM_ID,
					    T1.ECO_ID,
					    T1.CEX_NOMBRE_RTE,
					    T1.CEX_APELLIDOS_RTE,
					    T1.DD_TDI_ID_RTE,
					    T1.CEX_DOCUMENTO_RTE,
					    T1.CEX_TITULAR_RESERVA,
					    T1.CEX_TITULAR_CONTRATACION,
					    T1.CEX_PORCION_COMPRA,
					    T1.BORRADO,
					    T1.DD_ECV_ID,
					    T1.DD_REM_ID,
					    T1.DD_TDI_ID_CONYUGE,
					    T1.CEX_DOCUMENTO_CONYUGE,
					    T1.DD_PAI_ID,
					    T1.CEX_DIRECCION_RTE,
					    T1.DD_PRV_ID_RTE,
					    T1.DD_LOC_ID_RTE,
					    T1.DD_PAI_ID_RTE,
					    T1.CEX_CODIGO_POSTAL_RTE,
					    T1.ADCOM_ID
					) VALUES(
					    T2.COM_ID,
					    T2.ECO_ID,
					    T2.CEX_NOMBRE_RTE,
					    T2.CEX_APELLIDOS_RTE,
					    T2.DD_TDI_ID_RTE,
					    T2.CEX_DOCUMENTO_RTE,
					    0,
					    1,
					    100,
					    0,
					    T2.DD_ECV_ID,
					    T2.DD_REM_ID,
					    T2.DD_TDI_ID_CONYUGE,
					    T2.CLC_DOCUMENTO_CONYUGE,
					    T2.DD_PAI_ID,
					    T2.CLC_DIRECCION_RTE,
					    T2.DD_PRV_ID_RTE,
					    T2.DD_LOC_ID_RTE,
					    T2.DD_PAI_ID_RTE,
					    T2.CLC_CODIGO_POSTAL_RTE,
					    T2.ADCOM_ID
					)';
		EXECUTE IMMEDIATE V_MSQL;
        
        V_COUNT := V_COUNT + 1;
    END LOOP;
    
    CLOSE EXP_SIN_COMPRADOR;
    
    DBMS_OUTPUT.PUT_LINE('[FIN] Se han corregido '||V_COUNT||' expedientes sin compradores');
     
    COMMIT;
 
EXCEPTION
    WHEN OTHERS THEN
        ERR_NUM := SQLCODE;
        ERR_MSG := SQLERRM;
        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
        DBMS_OUTPUT.put_line(ERR_MSG);
        ROLLBACK;
        RAISE;   
END;
/
EXIT;