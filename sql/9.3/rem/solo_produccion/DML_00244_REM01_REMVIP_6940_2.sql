--/*
--#########################################
--## AUTOR=Carles Molins
--## FECHA_CREACION=20200411
--## ARTEFACTO=migracion
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=REMVIP-6940
--## PRODUCTO=NO
--## 
--## Finalidad:
--##                    
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE

V_ESQUEMA VARCHAR2(20 CHAR) := 'REM01';
V_ESQUEMA_M VARCHAR2(20 CHAR) := 'REMMASTER';
V_QUERY VARCHAR2(8000 CHAR);

 TOKEN_ID NUMBER(16);
MODULE_ID NUMBER(16);
VMAP_ID NUMBER(16);
VINST_ID NUMBER(16);


BEGIN
FOR CURSOR IN (SELECT 
		CASE WHEN TIENE_RESERVA = 1 THEN 
			(SELECT ID_ FROM REMMASTER.JBPM_NODE WHERE NAME_ = 'forkReservaSi' AND processdefinition_ = AUX.processdefinition_) 
		    ELSE (SELECT ID_ FROM REMMASTER.JBPM_NODE WHERE NAME_ = 'forkReservaNo' AND processdefinition_ = AUX.processdefinition_) END AS NODE_PARENT,
		AUX.* FROM(SELECT DISTINCT
		TRA.TRA_ID,
		TRA.TRA_PROCESS_BPM,
		INST.PROCESSDEFINITION_,
		TAR.TAR_ID,
		TAP.TAP_CODIGO,
		TEX.TEX_ID,
		TEX.TEX_TOKEN_ID_BPM,
		NODE.ID_ NODE_ID,
		TOKEN.PARENT_,
		ECO.ECO_NUM_EXPEDIENTE,
		CASE WHEN RES.RES_ID IS NULL THEN 0 ELSE 1 END AS TIENE_RESERVA,
		TAR.TAR_TAREA_FINALIZADA
		FROM REM01.ECO_EXPEDIENTE_COMERCIAL ECO
        INNER JOIN REM01.OFR_OFERTAS OFR
        ON OFR.OFR_ID = ECO.OFR_ID
		INNER JOIN REM01.ACT_TRA_TRAMITE TRA
		ON TRA.TBJ_ID = ECO.TBJ_ID
		INNER JOIN REMMASTER.JBPM_PROCESSINSTANCE INST 
		ON INST.ID_ = TRA.TRA_PROCESS_BPM
		INNER JOIN REM01.TAC_TAREAS_ACTIVOS TAC
		ON TAC.TRA_ID = TRA.TRA_ID
		INNER JOIN REM01.TAR_TAREAS_NOTIFICACIONES TAR
		ON TAR.TAR_ID = TAC.TAR_ID
		INNER JOIN REM01.TEX_TAREA_EXTERNA TEX
		ON TEX.TAR_ID = TAR.TAR_ID
		INNER JOIN REM01.TAP_TAREA_PROCEDIMIENTO TAP
		ON TEX.TAP_ID = TAP.TAP_ID
		INNER JOIN REMMASTER.JBPM_TOKEN TOKEN
		ON TOKEN.ID_ = TEX.TEX_TOKEN_ID_BPM
		INNER JOIN REMMASTER.JBPM_NODE NODE
		ON NODE.ID_ = TOKEN.NODE_
		LEFT JOIN REM01.RES_RESERVAS RES
		ON RES.ECO_ID = ECO.ECO_ID
		WHERE ECO.USUARIOCREAR = 'MIG_DIVARIAN'
		AND TAP_CODIGO IN (
		'T017_AdvisoryNote',
		'T017_InformeJuridico',
		'T017_InstruccionesReserva',
		'T017_ObtencionContratoReserva',
		'T017_PBCReserva',
		'T017_PBCVenta',
		'T017_RecomendCES',
		'T017_ResolucionPROManzana'
		)
        AND OFR.OFR_NUM_OFERTA IN (
6000002,
6000375,
6000793,
6001239,
6001344,
6001570,
6002454,
6002958,
6003008,
6003027,
6004103,
6004110,
6004552,
6004619,
6004703,
6004979,
6005057,
6005251,
6005290,
6005298,
6005709,
6005856,
6006207,
6006301,
6006406,
6006496,
6006716,
6006801,
6006832,
6007007,
6007029,
6007242,
6007339,
6007376,
6007424,
6007445,
6007453,
6007454,
6007494,
6007498,
6007576,
6007579,
6007596,
6007597,
6007604,
6007651,
6007712,
6007770,
6007773,
6007790,
6007821,
6007826,
6007847,
6007883,
6007945,
6007953,
6007957,
6007972,
6008052,
6008089,
6008137,
6008151,
6008156,
6008172,
6008191,
6008197,
6008206,
6008226,
6008231,
6008286,
6008330,
6008337,
6008340,
6008356,
6008379,
6008386,
6008437,
6008440,
6008458,
6008482,
6008483,
6008484,
6008496,
6008516,
6008537,
6008544,
6008548,
6008561,
6008574,
6008579,
6008591,
6008594,
6008627,
6008636,
6008637,
6008642,
6008654,
6008673,
6008677,
6008684,
6008687,
6008689,
6008694,
6008696,
6008704,
6008725,
6008730,
6008755,
6008756,
6008762,
6008768,
6008789,
6008796,
6008798,
6008822,
6008825,
6008827,
6008829,
6008834,
6008839,
6008853,
6008862,
6008863,
6008865,
6008871,
6008876,
6008879,
6008886,
6008890,
6008891,
6008894,
6008898,
6008899,
6008906,
6008908,
6008924,
6008928,
6008933,
6008951,
6008969,
6008970,
6009000,
6009019,
6009020,
6009034,
6009041,
6009046,
6009056,
6009060,
6009064,
6009068,
6009073,
6009090,
6009113,
6009136,
6009140,
6009143,
6009147,
6009152,
6009161,
6009162,
6009164,
6009169,
6009171,
6009176,
6009177,
6009180,
6009181,
6009182,
6009185,
6009189,
6009190,
6009192,
6009199,
6009205,
6009206,
6009218,
6009219,
6009220,
6009222,
6009225,
6009231,
6009234,
6009240,
6009249,
6009250,
6009251,
6009257,
6009266,
6009267,
6009270,
6009286,
6009287,
6009289,
6009291,
6009293,
6009297,
6009306,
6009318,
6009319,
6009320,
6009325,
6009326,
6009340,
6009349,
6009362,
6009363,
6009366,
6009369,
6009376,
6009377,
6009378,
6009379,
6009383,
6009390,
6009402,
6009406,
6009409,
6009416,
6009425,
6009427,
6009429,
6009432,
6009435,
6009439,
6009455,
6009457,
6009459,
6009467,
6009479,
6009492,
6009501,
6009505,
6009506,
6009507,
6009509,
6009520,
6009525,
6009526,
6009534,
6009538,
6009540,
6009543,
6009549,
6009554,
6009556,
6009558,
6009571,
6009574,
6009576,
6009577,
6009579,
6009584,
6009586,
6009599,
6009600,
6009603,
6009604,
6009606,
6009614,
6009619,
6009625,
6009633,
6009636,
6009641,
6009642,
6009647,
6009649,
6009655,
6009656,
6009657,
6009658,
6009670,
6009671,
6009673,
6009676,
6009683,
6009687,
6009690,
6009700,
6009705,
6009706,
6009709,
6009711,
6009719,
6009720,
6009723,
6009726,
6009732,
6009733,
6009734,
6009736,
6009738,
6009741,
6009744,
6009752,
6009756,
6009764,
6009766,
6009768,
6009786,
6009790,
6009796,
6009802,
6009803,
6009807,
6009809,
6009818,
6009828,
6009832,
6009838,
6009840,
6009846,
6009848,
6009853,
6009870,
6009873,
6009874,
6009876,
6009877,
6009880,
6009881,
6009882,
6009883,
6009886,
6009891,
6009898,
6009901,
6009905,
6009912,
6009915,
6009918,
6009919,
6009920,
6009921,
6009923,
6009930,
6009933,
6009935,
6009940,
6009942,
6009947,
6009950,
6009952,
6009953,
6009955,
6009958,
6009959,
6009960,
6009966,
6009970,
6009972,
6009974,
6009975,
6009976,
6009980,
6009981,
6009982,
6009983,
6009985,
6009986,
6009987,
6009990,
6009994,
6009995,
6010000,
6010001,
6010002,
6010005,
6010007,
6010008,
6010009,
6010012,
6010014,
6010019,
6010023,
6010029,
6010031,
6010068,
6010077,
6010084,
6010087,
6010088,
6010090,
6010107,
6010123,
6010142,
6010164,
6010259,
6010309,
6010310,
6010810,
6010963,
6011088,
6011323,
6011466,
6011501,
6011647,
6011706,
6011821,
6011874,
6011881,
6011948,
6012022,
6012027,
6012045,
6012064,
6012090,
6012094,
6012096,
6012097,
6012119,
6012144,
6012158,
6012167,
6012181,
6012190,
6012211,
6012258,
6012268,
6012276,
6012277,
6012281,
6012286,
6012289,
6012299,
6012301,
6012326,
6012328,
6012334,
6012345,
6012353,
6012357,
6012362,
6012381,
6012382,
6012383,
6012401,
6012404,
6012419,
6012432,
6012433,
6012439,
6012442,
6012445,
6012446,
6012450,
6012461,
6012463,
6012467,
6012481,
6012488,
6012489,
6012490,
6012493,
6012497,
6012498,
6012501,
6012502,
6012503,
6012507,
6012512,
6012513,
6012514,
6012515,
6012526,
6012529,
6012533,
6012535,
6012541,
6012542,
6012543,
6012547,
6012549,
6012555,
6012556,
6012558,
6012561,
6012562,
6012578,
6012589,
6012598,
6012609,
6012616,
6012622,
6012629,
6012637,
6012638,
6012646,
6012650,
6012653,
6012655,
6012656,
6012658,
6012659,
6012661,
6012664,
6012667,
6012671,
6012680,
6012681,
6012683,
6012684,
6012685,
6012686,
6012690,
6012691,
6012692,
6012693,
6012694,
6012695,
6012699,
6012702,
6012703,
6012704,
6012706,
6012707,
6012708,
6012709,
6012711,
6012715,
6012717,
6012718,
6012721,
6012724,
6012726,
6012740,
6012741,
6012743,
6012745,
6012746,
6012747,
6012748,
6012751,
6012752,
6012753,
6012757,
6012758,
6012760,
6012763,
6012764,
6012765,
6012769,
6012772,
6012773,
6012775,
6012778,
6012781,
6012782,
6012784,
6012785,
6012786,
6012787,
6012789,
6012790,
6012792,
6012793,
6012797,
6012798,
6012800,
6012801,
6012803,
6012804,
6012805,
6012807,
6012808,
6012811,
6012812,
6012815,
6012819,
6012820,
6012821,
6012822,
6012823,
6012827,
6012831,
6012840,
6012843,
6012844,
6012845,
6012846,
6012848,
6012849,
6012850,
6012851,
6012853,
6012854,
6012858,
6012859,
6012860,
6012865,
6012866,
6012868,
6012874,
6012875,
6012878,
6012880,
6012881,
6012882,
6012883,
6012885,
6012886,
6012887,
6012888,
6012890,
6012892,
6012895,
6012896,
6012897,
6012898,
6012899,
6012902,
6012905,
6012906,
6012907,
6012908,
6012909,
6012913,
6012914,
6012915,
6012916,
6012917,
6012922,
6012923,
6012925,
6012926,
6012928,
6012931,
6012934,
6012936,
6012937,
6012939,
6012940,
6012941,
6012942,
6012943,
6012944,
6012945,
6012946,
6012947,
6012949,
6012951,
6012954,
6012955,
6012956,
6012958,
6012959,
6012960,
6012966,
6012967,
6012968,
6012970,
6012972,
6012973,
6012974,
6012975,
6012976,
6012977,
6012978,
6012979,
6012981,
6012983,
6012984,
6012985,
6012987,
6012988,
6012990,
6013001,
6013003,
6013004,
6013006,
6013008,
6013009,
6013010,
6013011,
6013013,
6013014,
6013015,
6013016,
6013017,
6013018,
6013019,
6013020,
6013021,
6013022,
6013023,
6013024,
6013025,
6013026,
6013027,
6013028,
6013029,
6013030,
6013031,
6013033,
6013034,
6013035,
6013036,
6013037,
6013039,
6013041,
6013042,
6013043,
6013044,
6013045,
6013046,
6013047,
6013048,
6013050,
6013054,
6013055,
6013056,
6013059,
6013060,
6013061,
6013062,
6013065,
6013068,
6013069,
6013070,
6013071,
6013074,
6013076,
6013077,
6013090,
6013095,
6013097,
6013099,
6013102,
6013107,
6000036,
6000099,
6000101,
6000644,
6001949,
6002701,
6003250,
6003515,
6003674,
6003745,
6004130,
6004377,
6004808,
6005123,
6005124,
6005220,
6005231,
6005757,
6005800,
6006006,
6006071,
6006149,
6006160,
6006259,
6006289,
6006383,
6006620,
6006622,
6006624,
6006757,
6006784,
6006797,
6006984,
6006999,
6007015,
6007062,
6007106,
6007126,
6007204,
6007228,
6007258,
6007274,
6007323,
6007372,
6007482,
6007497,
6007528,
6007529,
6007574,
6007649,
6007696,
6007759,
6007762,
6007774,
6007784,
6007851,
6007869,
6007898,
6007928,
6007970,
6007974,
6007982,
6007988,
6007997,
6007999,
6008017,
6008025,
6008044,
6008059,
6008064,
6008111,
6008138,
6008147,
6008163,
6008195,
6008198,
6008204,
6008233,
6008271,
6008274,
6008281,
6008287,
6008295,
6008298,
6008312,
6008315,
6008335,
6008346,
6008383,
6008384,
6008392,
6008403,
6008429,
6008433,
6008445,
6008450,
6008452,
6008488,
6008500,
6008525,
6008542,
6008565,
6008578,
6008589,
6008600,
6008601,
6008610,
6008622,
6008624,
6008661,
6008670,
6008692,
6008698,
6008700,
6008701,
6008708,
6008709,
6008712,
6008720,
6008723,
6008745,
6008746,
6008752,
6008766,
6008770,
6008772,
6008773,
6008777,
6008780,
6008786,
6008797,
6008812,
6008826,
6008833,
6008843,
6008858,
6008874,
6008878,
6008892,
6008929,
6008946,
6008948,
6008949,
6008952,
6008975,
6008982,
6008986,
6008990,
6008994,
6008997,
6009002,
6009003,
6009005,
6009022,
6009029,
6009043,
6009055,
6009062,
6009076,
6009085,
6009114,
6009119,
6009120,
6009125,
6009135,
6009141,
6009153,
6009155,
6009158,
6009166,
6009167,
6009179,
6009187,
6009203,
6009204,
6009210,
6009217,
6009228,
6009245,
6009246,
6009252,
6009258,
6009259,
6009261,
6009269,
6009279,
6009294,
6009296,
6009304,
6009341,
6009344,
6009351,
6009358,
6009361,
6009364,
6009395,
6009404,
6009405,
6009411,
6009414,
6009422,
6009428,
6009437,
6009445,
6009463,
6009466,
6009468,
6009470,
6009484,
6009489,
6009495,
6009508,
6009512,
6009522,
6009537,
6009548,
6009552,
6009560,
6009564,
6009565,
6009570,
6009581,
6009591,
6009594,
6009624,
6009626,
6009630,
6009634,
6009635,
6009645,
6009646,
6009648,
6009654,
6009674,
6009680,
6009684,
6009691,
6009712,
6009714,
6009715,
6009721,
6009725,
6009728,
6009731,
6009742,
6009746,
6009772,
6009801,
6009839,
6009841,
6009857,
6009867,
6009885,
6009888,
6009913,
6009956,
6009965,
6009971,
6010114,
6010655,
6010806,
6011276,
6011293,
6011303,
6011407,
6011434,
6011518,
6011577,
6011619,
6011659,
6011749,
6011785,
6011806,
6011849,
6011865,
6011897,
6011901,
6011945,
6012011,
6012040,
6012063,
6012098,
6012115,
6012137,
6012145,
6012175,
6012179,
6012202,
6012217,
6012226,
6012231,
6012242,
6012266,
6012271,
6012272,
6012278,
6012284,
6012298,
6012300,
6012307,
6012322,
6012339,
6012346,
6012350,
6012351,
6012356,
6012358,
6012363,
6012365,
6012370,
6012378,
6012380,
6012395,
6012399,
6012400,
6012417,
6012429,
6012441,
6012449,
6012453,
6012456,
6012457,
6012458,
6012459,
6012460,
6012471,
6012477,
6012496,
6012510,
6012518,
6012519,
6012527,
6012534,
6012540,
6012544,
6012548,
6012554,
6012557,
6012651,
6012668,
6012672,
6012689,
6012698,
6012701,
6012705,
6012723,
6012727,
6012732,
6012734,
6012742,
6012744,
6012754,
6012770,
6012779,
6012780,
6012795,
6012824,
6012856,
6012861,
6012862,
6012894,
6012919,
6012929,
6012930,
6012948,
6012993,
6013032,
6013040,
6013066
)
		ORDER BY TRA_ID ASC, TAP_CODIGO ASC) AUX) LOOP
IF CURSOR.TAR_TAREA_FINALIZADA = 0 THEN
	IF CURSOR.PARENT_ IS NULL THEN
		TOKEN_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
		MODULE_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
		VMAP_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
		VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
		V_QUERY := 'INSERT INTO '||V_ESQUEMA_M||'.JBPM_TOKEN(ID_, VERSION_, NAME_, START_, END_, NODEENTER_, NEXTLOGINDEX_, ISABLETOREACTIVATEPARENT_, ISTERMINATIONIMPLICIT_, ISSUSPENDED_, LOCK_, NODE_, PROCESSINSTANCE_, PARENT_, SUBPROCESSINSTANCE_,  RPR_REFERENCIA, T_REFERENCIA) VALUES (
		'||TOKEN_ID||', 0, (SELECT NAME_ FROM '||V_ESQUEMA_M||'.JBPM_NODE WHERE ID_ = '||CURSOR.NODE_PARENT||'), SYSDATE, NULL, SYSDATE, 2, 0, 0, 0, NULL, '||CURSOR.NODE_PARENT||', '||CURSOR.TRA_PROCESS_BPM||', NULL, NULL, NULL, NULL)';
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		V_QUERY := 'UPDATE '||V_ESQUEMA_M||'.JBPM_TOKEN SET ISABLETOREACTIVATEPARENT_ = 1, NEXTLOGINDEX_ = 2, PARENT_ = '||TOKEN_ID||' WHERE ID_ = '||CURSOR.TEX_TOKEN_ID_BPM;
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		V_QUERY := 'UPDATE '||V_ESQUEMA_M||'.JBPM_PROCESSINSTANCE SET ROOTTOKEN_ = '||TOKEN_ID||'  WHERE ID_ = '||CURSOR.TRA_PROCESS_BPM;
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		--DBMS_OUTPUT.PUT_LINE('Actualizando las module y vmap...') ;
		V_QUERY := 'INSERT INTO REMMASTER.JBPM_MODULEINSTANCE
		            (ID_, CLASS_, VERSION_, PROCESSINSTANCE_, NAME_) VALUES (
		            '||MODULE_ID||'
		            , ''C'' 
		            , 0
		            , '||CURSOR.TRA_PROCESS_BPM||'
		            , ''org.jbpm.context.exe.ContextInstance'' )';
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		 V_QUERY := 'INSERT INTO REMMASTER.JBPM_TOKENVARIABLEMAP
		            (ID_, VERSION_, TOKEN_, CONTEXTINSTANCE_) VALUES (
		      	'||VMAP_ID||'
		        , 0 
		        , '||TOKEN_ID||'
		        , '||MODULE_ID||'  
		    )';
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		  --DBMS_OUTPUT.PUT_LINE('module y vmap actualizadas!!') ;


		    --DBMS_OUTPUT.PUT_LINE('Actualizando VARIABLE INSTABLE...') ;

		    --DBMS_OUTPUT.PUT_LINE('Insertamos la variable DB_ID para cada instancia..') ;
		   V_QUERY := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
		        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
		      '||VINST_ID||'
		      ,''L'' 
		      , 0 
		      , ''DB_ID''
		      , '||TOKEN_ID||'
		      , '||VMAP_ID||'
		      , '||CURSOR.TRA_PROCESS_BPM||'
		      , 1
		    )';
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		    --DBMS_OUTPUT.PUT_LINE('Insertamos la variable procedimientoTareaExterna para cada instancia..') ;
		VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
		    V_QUERY := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
		        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
		      '||VINST_ID||'
		        ,''L'' 
		        , 0 
		        , ''procedimientoTareaExterna''
		        , '||TOKEN_ID||'
		      , '||VMAP_ID||'
		      , '||CURSOR.TRA_PROCESS_BPM||'
		        , '||CURSOR.TRA_ID||'
		    )';
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		    --DBMS_OUTPUT.PUT_LINE('Insertamos la variable bpmParalizado para cada instancia..') ;
		VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
		    V_QUERY := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
		        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
		      '||VINST_ID||'
		      ,''L'' 
		      , 0 
		      , ''bpmParalizado''
		      , '||TOKEN_ID||'
		      , '||VMAP_ID||'
		      , '||CURSOR.TRA_PROCESS_BPM||'
		      , 0 
		    )';
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		    --DBMS_OUTPUT.PUT_LINE('Insertamos la variable idCODIGOTAREA para cada instancia..') ;
		VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
		    V_QUERY := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
		        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
		      '||VINST_ID||'
		      ,''L'' 
		      , 0 
		      , ''id'||CURSOR.TAP_CODIGO||'.'||CURSOR.TEX_TOKEN_ID_BPM||'''
		      , '||TOKEN_ID||'
		      , '||VMAP_ID||'
		      , '||CURSOR.TRA_PROCESS_BPM||'
		      , '||CURSOR.TEX_ID||'
		    )';
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		  --DBMS_OUTPUT.PUT_LINE('FIN VARIABLE INSTANCE!!') ;


		--Insertamos variable sin concatenar TOKEN_PADRE_ID
		VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
		    V_QUERY := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
		        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
		      '||VINST_ID||'
		      ,''L'' 
		      , 0 
		      , ''id'||CURSOR.TAP_CODIGO||'''
		      , '||TOKEN_ID||'
		      , '||VMAP_ID||'
		      , '||CURSOR.TRA_PROCESS_BPM||'
		      , '||CURSOR.TEX_ID||'
		    )';
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		  --DBMS_OUTPUT.PUT_LINE('FIN VARIABLE INSTANCE!!') ;


		VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
		    V_QUERY := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
		        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
		       '||VINST_ID||'
		      ,''L'' 
		      , 0
		      , ''activoTramiteTareaExterna''
		      , '||TOKEN_ID||'
		      , '||VMAP_ID||'
		      , '||CURSOR.TRA_PROCESS_BPM||'
		      , '||CURSOR.TRA_ID||'
		    )';
		EXECUTE IMMEDIATE V_QUERY;
		--DBMS_OUTPUT.PUT_LINE(V_QUERY);
		  --DBMS_OUTPUT.PUT_LINE('FIN VARIABLE INSTANCE!!') ;

	ELSE
		V_QUERY := 'UPDATE '||V_ESQUEMA_M||'.JBPM_TOKEN SET NODE_ = '||CURSOR.NODE_PARENT||' WHERE ID_ = '||CURSOR.PARENT_;	
		EXECUTE IMMEDIATE V_QUERY;
		V_QUERY := 'UPDATE '||V_ESQUEMA_M||'.JBPM_TOKEN SET NEXTLOGINDEX_= 2, ISABLETOREACTIVATEPARENT_ = 1 WHERE ID_ = '||CURSOR.TEX_TOKEN_ID_BPM;
		EXECUTE IMMEDIATE V_QUERY;
	END IF;
END IF;
END LOOP;
			
		

COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecucion:'||TO_CHAR(SQLCODE));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------');
        DBMS_OUTPUT.put_line(SQLERRM);
        ROLLBACK;
        RAISE;


END;
/

EXIT;
