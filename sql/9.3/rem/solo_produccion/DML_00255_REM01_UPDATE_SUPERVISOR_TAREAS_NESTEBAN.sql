--/*
--##########################################
--## AUTOR=Viorel Remus Ovidiu
--## FECHA_CREACION=20200416
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=REMVIP-6966
--## PRODUCTO=NO
--##
--## INSTRUCCIONES: actualizar superevisor de tareas a nesteban
--## VERSIONES:
--##        0.1 Versión inicial
--##########################################
--*/
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF; 
DECLARE

    PL_OUTPUT VARCHAR2(32000 CHAR);
    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquemas
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.
    V_NUM_FILAS NUMBER(16); -- Vble. para validar la existencia de un registro.
    V_NUM_FILAS_1 NUMBER(16); -- Vble. para validar la existencia de un registro.
    V_NUM_FILAS_2 NUMBER(16); -- Vble. para validar la existencia de un registro.
    V_NUM_FILAS_3 NUMBER(16); -- Vble. para validar la existencia de un registro.
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
    V_USR VARCHAR2(30 CHAR) := 'REMVIP-6966'; -- USUARIOCREAR/USUARIOMODIFICAR.
    V_ECO_ID NUMBER(16); 
    
    TRA_ID NUMBER(16);
    TAR_ID NUMBER(16);
    TEX_ID NUMBER(16);
    ACT_ID NUMBER(16);
    USU_ID NUMBER(16);
    SUP_ID NUMBER(16);
    ECO_ID NUMBER(16);
    TEX_TOKEN NUMBER(16);

    SEQ_TAR_ID NUMBER(16);

    V_COUNT_UPDATE_1 NUMBER(16):= 0; -- Vble. para contar updates
    V_COUNT_UPDATE_2 NUMBER(16):= 0; -- Vble. para contar updates
    V_COUNT_UPDATE_3 NUMBER(16):= 0; -- Vble. para contar updates

    
    TYPE T_JBV IS TABLE OF VARCHAR2(32000);
    TYPE T_ARRAY_JBV IS TABLE OF T_JBV; 
	
	--TRA_ID , TAR_ID, ACT_ID, USU_ID, SUP_ID, ECO_NUM_EXPEDIENTE

	V_JBV T_ARRAY_JBV := T_ARRAY_JBV(
T_JBV(475629, 5073069,462897 ,88062 ,89626,203596 ),
T_JBV(558700, 5156412,484270 ,88353 ,81124,208738 ),
T_JBV(559137, 5160571,465111 ,69814 ,69814,208821 ),
T_JBV(559349, 5161426,475712 ,87742 ,30181,208857 ),
T_JBV(480224, 5156562,466674 ,89382 ,39314,204962 ),
T_JBV(478005, 5161157,491636 ,69814 ,69814,208514 ),
T_JBV(558622, 5162068,500032 ,89626 ,89626,208715 ),
T_JBV(558699, 5156403,471747 ,88353 ,81124,208737 ),
T_JBV(559339, 5161292,465086 ,87742 ,30181,208848 ),
T_JBV(558697, 5156392,447795 ,69814 ,81124,208735 ),
T_JBV(558709, 5156513,446167 ,88353 ,81124,208739 ),
T_JBV(559856, 5163282,496414 ,87742 ,30181,208907 ),
T_JBV(559895, 5163705,474505 ,87742 ,30181,208910 ),
T_JBV(559287, 5161070,466449 ,87742 ,30181,208841 ),
T_JBV(558624, 5161071,463401 ,89626 ,89626,208717 ),
T_JBV(559580, 5162867,471243 ,87742 ,30181,208891 ),
T_JBV(558694, 5156370,473066 ,69814 ,81124,208732 ),
T_JBV(559107, 5160481,465208 ,69814 ,69814,208815 ),
T_JBV(559357, 5161483,470167 ,87742 ,30181,208863 ),
T_JBV(559882, 5163505,497844 ,87742 ,30181,208908 ),
T_JBV(559087, 5160235,464259 ,40000 ,69814,208811 ),
T_JBV(477177, 5161103,469516 ,89626 ,89626,202663 ),
T_JBV(559343, 5161341,475719 ,87742 ,30181,208850 ),
T_JBV(474453, 5163246,475718 ,89382 ,75235,203248 ),
T_JBV(474465, 5161054,462043 ,89626 ,89626,208362 ),
T_JBV(558620, 5161046,483200 ,89626 ,89626,208713 ),
T_JBV(558715, 5156545,487977 ,89626 ,81124,208744 ),
T_JBV(558710, 5156523,462720 ,75235 ,81124,208740 ),
T_JBV(559352, 5161503,450893 ,87742 ,30181,208859 ),
T_JBV(559890, 5163531,456235 ,87742 ,30181,208909 )
		); 
	V_TMP_JBV T_JBV;
    
BEGIN	
	DBMS_OUTPUT.PUT_LINE('[INICIO] ACTUALIZACION TRAMITES Y TAREAS');

	FOR I IN V_JBV.FIRST .. V_JBV.LAST
	
	LOOP
 
	V_TMP_JBV := V_JBV(I);
	
  	TRA_ID := TRIM(V_TMP_JBV(1));
  	
  	TAR_ID := TRIM(V_TMP_JBV(2));

	ACT_ID := TRIM(V_TMP_JBV(3));

	USU_ID := TRIM(V_TMP_JBV(4));

	SUP_ID := TRIM(V_TMP_JBV(5));
  	
  	ECO_ID := TRIM(V_TMP_JBV(6));


	--COMPROBAMOS SI EXISTE TRABAJO

	V_SQL := 'SELECT COUNT(*) FROM '||V_ESQUEMA||'.ECO_EXPEDIENTE_COMERCIAL WHERE ECO_NUM_EXPEDIENTE = '||ECO_ID;
	
	EXECUTE IMMEDIATE V_SQL INTO V_NUM_FILAS;
	
	IF V_NUM_FILAS > 0 THEN 
	
	--COMPROBAMOS SI EXISTE TAREA

		V_SQL := 'SELECT COUNT(*) FROM '||V_ESQUEMA||'.TAC_TAREAS_ACTIVOS WHERE TRA_ID = '||TRA_ID||' AND TAR_ID = '||TAR_ID||' AND ACT_ID = '||ACT_ID||'';
	
		EXECUTE IMMEDIATE V_SQL INTO V_NUM_FILAS_1;
	
		IF V_NUM_FILAS_1 > 0 THEN
	
			V_MSQL := 'UPDATE '||V_ESQUEMA||'.TAC_TAREAS_ACTIVOS 
					   SET SUP_ID = 87742,
					   USUARIOMODIFICAR = '''||V_USR||''',
					   FECHAMODIFICAR = SYSDATE 
					   WHERE TRA_ID = '||TRA_ID||' AND TAR_ID = '||TAR_ID||' AND ACT_ID = '||ACT_ID||'';
	

			EXECUTE IMMEDIATE V_MSQL;
	    
			DBMS_OUTPUT.PUT_LINE('[INFO] REGISTRO CON TRA_ID: '||TRA_ID||' ACTUALIZADO');
		
			V_COUNT_UPDATE_1 := V_COUNT_UPDATE_1 + 1;
		
		ELSE
		
			DBMS_OUTPUT.PUT_LINE('[INFO] REGISTRO NO EXISTE');
		
		END IF;
        
   	ELSE
		
	DBMS_OUTPUT.PUT_LINE('[INFO] EXPEDIENTE NO EXISTE');
		
	END IF; 

   	END LOOP;

	DBMS_OUTPUT.PUT_LINE('********************************************************************');

	DBMS_OUTPUT.PUT_LINE('[FIN] Se han updateado en total '||V_COUNT_UPDATE_1||' registros EN TAC_TAREAS_ACTIVOS');

	DBMS_OUTPUT.PUT_LINE('********************************************************************');

	DBMS_OUTPUT.PUT_LINE('[FIN] ');

	COMMIT;

EXCEPTION
     WHEN OTHERS THEN
          ERR_NUM := SQLCODE;
          ERR_MSG := SQLERRM;
          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(ERR_MSG);
          ROLLBACK;
          RAISE;   
END;
/
EXIT;
