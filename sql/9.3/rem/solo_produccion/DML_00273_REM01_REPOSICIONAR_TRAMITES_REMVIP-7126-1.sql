--/*
--######################################### 
--## AUTOR=GUILLEM REY
--## FECHA_CREACION=20200424
--## ARTEFACTO=batch
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=REMVIP-7126
--## PRODUCTO=NO
--## 
--## Finalidad: 
--##                    
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;

DECLARE

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar     
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- #ESQUEMA# Configuracion Esquema
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- #ESQUEMA_MASTER# Configuracion Esquema
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
    V_USR VARCHAR2(50 CHAR) := 'REMVIP-7126';
	PL_OUTPUT VARCHAR2(32000 CHAR);
	
	TOKEN_ID NUMBER(16);
	MODULE_ID NUMBER(16);
	VMAP_ID NUMBER(16);
	VINST_ID NUMBER(16);
	

    TYPE T_ALTER IS TABLE OF NUMBER(16);
    TYPE T_ARRAY_ALTER IS TABLE OF T_ALTER;
    V_ALTER T_ARRAY_ALTER := T_ARRAY_ALTER(
    		--NUM_OFERTA
    	T_ALTER(6006622),
		T_ALTER(6006784),
		T_ALTER(6006797),
		T_ALTER(6000036),
		T_ALTER(6000099),
		T_ALTER(6000101),
		T_ALTER(6006999),
		T_ALTER(6007015),
		T_ALTER(6007062),
		T_ALTER(6007106),
		T_ALTER(6007126),
		T_ALTER(6007204),
		T_ALTER(6004377),
		T_ALTER(6004808),
		T_ALTER(6005123),
		T_ALTER(6005231),
		T_ALTER(6005800),
		T_ALTER(6006149),
		T_ALTER(6006160),
		T_ALTER(6006259),
		T_ALTER(6006383),
		T_ALTER(6004130),
		T_ALTER(6011619),
		T_ALTER(6011659),
		T_ALTER(6011806),
		T_ALTER(6011865),
		T_ALTER(6011945),
		T_ALTER(6007228),
		T_ALTER(6007323),
		T_ALTER(6007372),
		T_ALTER(6007482),
		T_ALTER(6012063),
		T_ALTER(6012098),
		T_ALTER(6012115),
		T_ALTER(6012137),
		T_ALTER(6012145),
		T_ALTER(6007649),
		T_ALTER(6012179),
		T_ALTER(6012217),
		T_ALTER(6012226),
		T_ALTER(6012231),
		T_ALTER(6012242),
		T_ALTER(6012266),
		T_ALTER(6012272),
		T_ALTER(6012284),
		T_ALTER(6012298),
		T_ALTER(6012300),
		T_ALTER(6012307),
		T_ALTER(6012350),
		T_ALTER(6007759),
		T_ALTER(6007762),
		T_ALTER(6007898),
		T_ALTER(6007928),
		T_ALTER(6007970),
		T_ALTER(6007974),
		T_ALTER(6007982),
		T_ALTER(6012363),
		T_ALTER(6012370),
		T_ALTER(6012378),
		T_ALTER(6012380),
		T_ALTER(6012395),
		T_ALTER(6012399),
		T_ALTER(6012429),
		T_ALTER(6012441),
		T_ALTER(6012456),
		T_ALTER(6012457),
		T_ALTER(6012471),
		T_ALTER(6012477),
		T_ALTER(6012510),
		T_ALTER(6012518),
		T_ALTER(6012519),
		T_ALTER(6012527),
		T_ALTER(6007988),
		T_ALTER(6007997),
		T_ALTER(6007999),
		T_ALTER(6008111),
		T_ALTER(6008147),
		T_ALTER(6008233),
		T_ALTER(6011293),
		T_ALTER(6012554),
		T_ALTER(6012557),
		T_ALTER(6012651),
		T_ALTER(6012668),
		T_ALTER(6008271),
		T_ALTER(6008274),
		T_ALTER(6008281),
		T_ALTER(6008295),
		T_ALTER(6008312),
		T_ALTER(6008335),
		T_ALTER(6008429),
		T_ALTER(6008445),
		T_ALTER(6008450),
		T_ALTER(6008452),
		T_ALTER(6008488),
		T_ALTER(6008500),
		T_ALTER(6008525),
		T_ALTER(6011518),
		T_ALTER(6011577),
		T_ALTER(6012698),
		T_ALTER(6012701),
		T_ALTER(6012705),
		T_ALTER(6012723),
		T_ALTER(6012734),
		T_ALTER(6012742),
		T_ALTER(6012744),
		T_ALTER(6012754),
		T_ALTER(6012795),
		T_ALTER(6012815),
		T_ALTER(6012861),
		T_ALTER(6012862),
		T_ALTER(6008542),
		T_ALTER(6008610),
		T_ALTER(6008624),
		T_ALTER(6008670),
		T_ALTER(6008692),
		T_ALTER(6008709),
		T_ALTER(6008712),
		T_ALTER(6008723),
		T_ALTER(6008745),
		T_ALTER(6008746),
		T_ALTER(6008752),
		T_ALTER(6008766),
		T_ALTER(6008770),
		T_ALTER(6008772),
		T_ALTER(6013066),
		T_ALTER(6008780),
		T_ALTER(6008786),
		T_ALTER(6008812),
		T_ALTER(6008833),
		T_ALTER(6008946),
		T_ALTER(6008986),
		T_ALTER(6008990),
		T_ALTER(6012894),
		T_ALTER(6012930),
		T_ALTER(6009062),
		T_ALTER(6009114),
		T_ALTER(6009119),
		T_ALTER(6009120),
		T_ALTER(6009125),
		T_ALTER(6009155),
		T_ALTER(6009166),
		T_ALTER(6009217),
		T_ALTER(6009228),
		T_ALTER(6009269),
		T_ALTER(6009294),
		T_ALTER(6009304),
		T_ALTER(6009344),
		T_ALTER(6009364),
		T_ALTER(6009404),
		T_ALTER(6009405),
		T_ALTER(6009411),
		T_ALTER(6009435),
		T_ALTER(6009445),
		T_ALTER(6009495),
		T_ALTER(6009522),
		T_ALTER(6009548),
		T_ALTER(6009560),
		T_ALTER(6009565),
		T_ALTER(6009570),
		T_ALTER(6009591),
		T_ALTER(6009684),
		T_ALTER(6009714),
		T_ALTER(6009715),
		T_ALTER(6009746),
		T_ALTER(6009839),
		T_ALTER(6009857),
		T_ALTER(6009867),
		T_ALTER(6009913),
		T_ALTER(6009965)
		);
    V_T_ALTER T_ALTER;
    
    V_NUM NUMBER(16);
    V_ECO_ID NUMBER(16);
    V_ECO NUMBER(16);
    EXPEDIENTES VARCHAR2(32000 CHAR) := '';
    V_TRA_ID NUMBER(16);
    V_TAR_ID NUMBER(16);
    
BEGIN
	
	EXECUTE IMMEDIATE 'UPDATE '||V_ESQUEMA||'.ACT_TRA_TRAMITE SET TRA_PROCESS_BPM = NULL WHERE USUARIOMODIFICAR = '''||V_USR||'''';
					
	EXECUTE IMMEDIATE 'MERGE INTO '||V_ESQUEMA||'.TEX_TAREA_EXTERNA TEX
						USING (SELECT TAR_ID 
							FROM '||V_ESQUEMA||'.TAC_TAREAS_ACTIVOS TAC
							INNER JOIN '||V_ESQUEMA||'.ACT_TRA_TRAMITE TRA ON TRA.TRA_ID = TAC.TRA_ID AND TRA.BORRADO = 0
							WHERE TRA.USUARIOMODIFICAR = '''||V_USR||''' AND TAC.BORRADO = 0
						) AUX ON (AUX.TAR_ID = TEX.TAR_ID)
						WHEN MATCHED THEN UPDATE SET TEX.TEX_TOKEN_ID_BPM = NULL WHERE TEX.BORRADO = 0';
						
	EXECUTE IMMEDIATE 'MERGE INTO '||V_ESQUEMA||'.TAC_TAREAS_ACTIVOS TAC1
						USING (SELECT TAC.TAR_ID 
							FROM '||V_ESQUEMA||'.TAC_TAREAS_ACTIVOS TAC
							INNER JOIN '||V_ESQUEMA||'.TEX_TAREA_EXTERNA TEX ON TEX.TAR_ID = TAC.TAR_ID
							INNER JOIN '||V_ESQUEMA||'.TAP_TAREA_PROCEDIMIENTO TAP ON TAP.TAP_ID = TEX.TAP_ID
							INNER JOIN '||V_ESQUEMA||'.ACT_TRA_TRAMITE TRA ON TRA.TRA_ID = TAC.TRA_ID AND TRA.BORRADO = 0
							WHERE TRA.USUARIOMODIFICAR = '''||V_USR||''' AND TAC.BORRADO = 0 AND TAP.TAP_CODIGO = ''T017_PBCVenta''
						) AUX ON (AUX.TAR_ID = TAC1.TAR_ID)
						WHEN MATCHED THEN UPDATE SET TAC1.USU_ID = (SELECT USU_ID FROM '||V_ESQUEMA_M||'.USU_USUARIOS WHERE USU_USERNAME = ''nesteban'') WHERE TAC1.BORRADO = 0';	
						
	#ESQUEMA#.ALTA_BPM_INSTANCES(V_USR, PL_OUTPUT);	
	
	FOR CURSOR IN (SELECT DISTINCT
		TRA.TRA_ID,
		TRA.TRA_PROCESS_BPM,
		INST.PROCESSDEFINITION_,
		(SELECT ID_ FROM REMMASTER.JBPM_NODE WHERE NAME_ = 'forkReservaNo' AND processdefinition_ = INST.PROCESSDEFINITION_) AS NODE_PARENT,
		TAR.TAR_ID,
		TAP.TAP_CODIGO,
		TEX.TEX_ID,
		TEX.TEX_TOKEN_ID_BPM,
		NODE.ID_ NODE_ID,
		TOKEN.PARENT_,
		ECO.ECO_NUM_EXPEDIENTE,
		TAR.TAR_TAREA_FINALIZADA
		FROM REM01.ECO_EXPEDIENTE_COMERCIAL ECO
		INNER JOIN REM01.ACT_TRA_TRAMITE TRA
		ON TRA.TBJ_ID = ECO.TBJ_ID
		INNER JOIN REMMASTER.JBPM_PROCESSINSTANCE INST 
		ON INST.ID_ = TRA.TRA_PROCESS_BPM
		INNER JOIN REM01.TAC_TAREAS_ACTIVOS TAC
		ON TAC.TRA_ID = TRA.TRA_ID
		INNER JOIN REM01.TAR_TAREAS_NOTIFICACIONES TAR
		ON TAR.TAR_ID = TAC.TAR_ID
		INNER JOIN REM01.TEX_TAREA_EXTERNA TEX
		ON TEX.TAR_ID = TAR.TAR_ID
		INNER JOIN REM01.TAP_TAREA_PROCEDIMIENTO TAP
		ON TEX.TAP_ID = TAP.TAP_ID
		INNER JOIN REMMASTER.JBPM_TOKEN TOKEN
		ON TOKEN.ID_ = TEX.TEX_TOKEN_ID_BPM
		INNER JOIN REMMASTER.JBPM_NODE NODE
		ON NODE.ID_ = TOKEN.NODE_
		WHERE TRA.USUARIOMODIFICAR = 'REMVIP-7126'
		AND TAP_CODIGO IN (
		'T017_AdvisoryNote',
		'T017_InformeJuridico',
		'T017_InstruccionesReserva',
		'T017_ObtencionContratoReserva',
		'T017_PBCReserva',
		'T017_PBCVenta',
		'T017_RecomendCES',
		'T017_ResolucionPROManzana'
		)
	ORDER BY TRA_ID ASC, TAP_CODIGO ASC) LOOP		
		IF CURSOR.TAR_TAREA_FINALIZADA = 0 THEN
			IF CURSOR.PARENT_ IS NULL THEN
				TOKEN_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
				MODULE_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
				VMAP_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
				VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
				V_MSQL := 'INSERT INTO '||V_ESQUEMA_M||'.JBPM_TOKEN(ID_, VERSION_, NAME_, START_, END_, NODEENTER_, NEXTLOGINDEX_, ISABLETOREACTIVATEPARENT_, ISTERMINATIONIMPLICIT_, ISSUSPENDED_, LOCK_, NODE_, PROCESSINSTANCE_, PARENT_, SUBPROCESSINSTANCE_,  RPR_REFERENCIA, T_REFERENCIA) VALUES (
				'||TOKEN_ID||', 0, (SELECT NAME_ FROM '||V_ESQUEMA_M||'.JBPM_NODE WHERE ID_ = '||CURSOR.NODE_PARENT||'), SYSDATE, NULL, SYSDATE, 2, 0, 0, 0, NULL, '||CURSOR.NODE_PARENT||', '||CURSOR.TRA_PROCESS_BPM||', NULL, NULL, NULL, NULL)';
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				V_MSQL := 'UPDATE '||V_ESQUEMA_M||'.JBPM_TOKEN SET ISABLETOREACTIVATEPARENT_ = 1, NEXTLOGINDEX_ = 2, PARENT_ = '||TOKEN_ID||' WHERE ID_ = '||CURSOR.TEX_TOKEN_ID_BPM;
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				V_MSQL := 'UPDATE '||V_ESQUEMA_M||'.JBPM_PROCESSINSTANCE SET ROOTTOKEN_ = '||TOKEN_ID||'  WHERE ID_ = '||CURSOR.TRA_PROCESS_BPM;
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				--DBMS_OUTPUT.PUT_LINE('Actualizando las module y vmap...') ;
				V_MSQL := 'INSERT INTO REMMASTER.JBPM_MODULEINSTANCE
				            (ID_, CLASS_, VERSION_, PROCESSINSTANCE_, NAME_) VALUES (
				            '||MODULE_ID||'
				            , ''C'' 
				            , 0
				            , '||CURSOR.TRA_PROCESS_BPM||'
				            , ''org.jbpm.context.exe.ContextInstance'' )';
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				 V_MSQL := 'INSERT INTO REMMASTER.JBPM_TOKENVARIABLEMAP
				            (ID_, VERSION_, TOKEN_, CONTEXTINSTANCE_) VALUES (
				      	'||VMAP_ID||'
				        , 0 
				        , '||TOKEN_ID||'
				        , '||MODULE_ID||'  
				    )';
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				  --DBMS_OUTPUT.PUT_LINE('module y vmap actualizadas!!') ;
		
		
				    --DBMS_OUTPUT.PUT_LINE('Actualizando VARIABLE INSTABLE...') ;
		
				    --DBMS_OUTPUT.PUT_LINE('Insertamos la variable DB_ID para cada instancia..') ;
				   V_MSQL := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
				        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
				      '||VINST_ID||'
				      ,''L'' 
				      , 0 
				      , ''DB_ID''
				      , '||TOKEN_ID||'
				      , '||VMAP_ID||'
				      , '||CURSOR.TRA_PROCESS_BPM||'
				      , 1
				    )';
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				    --DBMS_OUTPUT.PUT_LINE('Insertamos la variable procedimientoTareaExterna para cada instancia..') ;
				VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
				    V_MSQL := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
				        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
				      '||VINST_ID||'
				        ,''L'' 
				        , 0 
				        , ''procedimientoTareaExterna''
				        , '||TOKEN_ID||'
				      , '||VMAP_ID||'
				      , '||CURSOR.TRA_PROCESS_BPM||'
				        , '||CURSOR.TRA_ID||'
				    )';
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				    --DBMS_OUTPUT.PUT_LINE('Insertamos la variable bpmParalizado para cada instancia..') ;
				VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
				    V_MSQL := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
				        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
				      '||VINST_ID||'
				      ,''L'' 
				      , 0 
				      , ''bpmParalizado''
				      , '||TOKEN_ID||'
				      , '||VMAP_ID||'
				      , '||CURSOR.TRA_PROCESS_BPM||'
				      , 0 
				    )';
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				    --DBMS_OUTPUT.PUT_LINE('Insertamos la variable idCODIGOTAREA para cada instancia..') ;
				VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
				    V_MSQL := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
				        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
				      '||VINST_ID||'
				      ,''L'' 
				      , 0 
				      , ''id'||CURSOR.TAP_CODIGO||'.'||CURSOR.TEX_TOKEN_ID_BPM||'''
				      , '||TOKEN_ID||'
				      , '||VMAP_ID||'
				      , '||CURSOR.TRA_PROCESS_BPM||'
				      , '||CURSOR.TEX_ID||'
				    )';
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				  --DBMS_OUTPUT.PUT_LINE('FIN VARIABLE INSTANCE!!') ;
		
		
				--Insertamos variable sin concatenar TOKEN_PADRE_ID
				VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
				    V_MSQL := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
				        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
				      '||VINST_ID||'
				      ,''L'' 
				      , 0 
				      , ''id'||CURSOR.TAP_CODIGO||'''
				      , '||TOKEN_ID||'
				      , '||VMAP_ID||'
				      , '||CURSOR.TRA_PROCESS_BPM||'
				      , '||CURSOR.TEX_ID||'
				    )';
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				  --DBMS_OUTPUT.PUT_LINE('FIN VARIABLE INSTANCE!!') ;
		
		
				VINST_ID := REMMASTER.HIBERNATE_SEQUENCE.NEXTVAL;
				    V_MSQL := 'INSERT INTO REMMASTER.JBPM_VARIABLEINSTANCE
				        (ID_, CLASS_, VERSION_, NAME_, TOKEN_, TOKENVARIABLEMAP_, PROCESSINSTANCE_, LONGVALUE_) VALUES (
				       '||VINST_ID||'
				      ,''L'' 
				      , 0
				      , ''activoTramiteTareaExterna''
				      , '||TOKEN_ID||'
				      , '||VMAP_ID||'
				      , '||CURSOR.TRA_PROCESS_BPM||'
				      , '||CURSOR.TRA_ID||'
				    )';
				EXECUTE IMMEDIATE V_MSQL;
				--DBMS_OUTPUT.PUT_LINE(V_MSQL);
				  --DBMS_OUTPUT.PUT_LINE('FIN VARIABLE INSTANCE!!') ;
		
			ELSE
				V_MSQL := 'UPDATE '||V_ESQUEMA_M||'.JBPM_TOKEN SET NODE_ = '||CURSOR.NODE_PARENT||' WHERE ID_ = '||CURSOR.PARENT_;	
				EXECUTE IMMEDIATE V_MSQL;
				V_MSQL := 'UPDATE '||V_ESQUEMA_M||'.JBPM_TOKEN SET NEXTLOGINDEX_= 2, ISABLETOREACTIVATEPARENT_ = 1 WHERE ID_ = '||CURSOR.TEX_TOKEN_ID_BPM;
				EXECUTE IMMEDIATE V_MSQL;
			END IF;
		END IF;
	END LOOP;

    COMMIT;


    DBMS_OUTPUT.PUT_LINE('[FIN]');

EXCEPTION
  WHEN OTHERS THEN 
    DBMS_OUTPUT.PUT_LINE('KO!');
    ERR_NUM := SQLCODE;
    ERR_MSG := SQLERRM;    
    DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
    DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
    DBMS_OUTPUT.put_line(ERR_MSG);    
    ROLLBACK;
    RAISE;        

END;
/
EXIT;
