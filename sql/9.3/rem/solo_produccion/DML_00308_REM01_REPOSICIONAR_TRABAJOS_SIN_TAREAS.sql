--/*
--###########################################
--## AUTOR=GUILLEM REY
--## FECHA_CREACION=20200525
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=REMVIP-7340
--## PRODUCTO=NO
--## 
--## Finalidad: ELIMINAR TAREAS DUPLICADAS Y REPOSICIONAR TRAMITES
--##			
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--###########################################
----*/


WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF;


DECLARE
  V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar     
  V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema
  V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
  ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
  ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
  V_SQL VARCHAR2(4000 CHAR); -- Vble. para consulta que valida la existencia de una tabla.
  V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.   
  V_USUARIO VARCHAR2(100 CHAR) := 'REMVIP-7340';
  USU_ID  NUMBER(16);
  V_TRA_ID  NUMBER(16);
  V_TARS VARCHAR2(4000 CHAR);
  PL_OUTPUT VARCHAR2(32000 CHAR);
  TYPE T_JBV IS TABLE OF VARCHAR2(32000);
    TYPE T_ARRAY_JBV IS TABLE OF T_JBV; 
	

	V_JBV1 T_ARRAY_JBV := T_ARRAY_JBV(
		T_JBV(916659200001),
		T_JBV(915710700001),
		T_JBV(916381900001),
		T_JBV(916787500001)
	); 
	V_TMP_JBV1 T_JBV;
	
	V_JBV2 T_ARRAY_JBV := T_ARRAY_JBV(
		T_JBV(916889700001),
		T_JBV(916839500001),
		T_JBV(916747500001),
		T_JBV(916013700001),
		T_JBV(916863000001),
		T_JBV(916826100001)
	); 
	V_TMP_JBV2 T_JBV;
	
	V_JBV3 T_ARRAY_JBV := T_ARRAY_JBV(
		T_JBV(916706300001)
	); 
	V_TMP_JBV3 T_JBV;
	
	TRABAJOS VARCHAR2(32000 CHAR) := '';
	
BEGIN	
	
	DBMS_OUTPUT.PUT_LINE('[INICIO] ');
	--EN TRAMITE
	FOR I IN V_JBV1.FIRST .. V_JBV1.LAST	
	LOOP 
		V_TMP_JBV1 := V_JBV1(I);
		V_MSQL := 'SELECT TRA_ID FROM '||V_ESQUEMA||'.ACT_TRA_TRAMITE WHERE TBJ_ID = (SELECT TBJ_ID FROM '||V_ESQUEMA||'.ACT_TBJ_TRABAJO WHERE TBJ_NUM_TRABAJO = '||V_TMP_JBV1(1)||')';
		EXECUTE IMMEDIATE V_MSQL INTO V_TRA_ID;
		
		--ELIMINAR TAREAS
		V_MSQL := 'SELECT LISTAGG(TAC.TAR_ID,'','') WITHIN GROUP (ORDER BY TAC.TAR_ID) AS TAREAS
				    FROM '||V_ESQUEMA||'.TAC_TAREAS_ACTIVOS TAC
				    INNER JOIN '||V_ESQUEMA||'.TEX_TAREA_EXTERNA TEX ON TEX.TAR_ID = TAC.TAR_ID
				    INNER JOIN '||V_ESQUEMA||'.TAP_TAREA_PROCEDIMIENTO TAP ON TAP.TAP_ID = TEX.TAP_ID
				    INNER JOIN '||V_ESQUEMA||'.TAR_TAREAS_NOTIFICACIONES TAR ON TAR.TAR_ID = TAC.TAR_ID
				    WHERE TAC.TRA_ID = '||V_TRA_ID||' AND TAP.TAP_CODIGO IN (''T004_ValidacionTrabajo'', ''T004_ResultadoTarificada'')';
		EXECUTE IMMEDIATE V_MSQL INTO V_TARS;
			
		IF LENGTH(V_TARS) > 0 THEN
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.TEV_TAREA_EXTERNA_VALOR WHERE TEX_ID IN (SELECT TEX_ID FROM '||V_ESQUEMA||'.TEX_TAREA_EXTERNA WHERE TAR_ID IN ('||TRIM(V_TARS)||'))';
			EXECUTE IMMEDIATE V_MSQL;
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.TEX_TAREA_EXTERNA WHERE TAR_ID IN ('||TRIM(V_TARS)||')';
			EXECUTE IMMEDIATE V_MSQL;
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.ETN_EXTAREAS_NOTIFICACIONES WHERE TAR_ID IN ('||TRIM(V_TARS)||')';
			EXECUTE IMMEDIATE V_MSQL;
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.TAC_TAREAS_ACTIVOS WHERE TAR_ID IN ('||TRIM(V_TARS)||')';
			EXECUTE IMMEDIATE V_MSQL;
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.TAR_TAREAS_NOTIFICACIONES WHERE TAR_ID IN ('||TRIM(V_TARS)||')';
			EXECUTE IMMEDIATE V_MSQL;
		END IF;
		TRABAJOS := TRABAJOS||V_TMP_JBV1(1)||',';
		
	END LOOP;
	TRABAJOS := SUBSTR(TRABAJOS, 1, LENGTH(TRABAJOS)-1);
	#ESQUEMA#.REPOSICIONAMIENTO_TRABAJO(V_USUARIO, TRIM(TRABAJOS), 'T004_ResultadoTarificada');
	
	TRABAJOS := '';
	--FINALIZADO PDTE VALIDACION
	FOR I IN V_JBV2.FIRST .. V_JBV2.LAST	
	LOOP 
		V_TMP_JBV2 := V_JBV2(I);
		V_MSQL := 'SELECT TRA_ID FROM '||V_ESQUEMA||'.ACT_TRA_TRAMITE WHERE TBJ_ID = (SELECT TBJ_ID FROM '||V_ESQUEMA||'.ACT_TBJ_TRABAJO WHERE TBJ_NUM_TRABAJO = '||V_TMP_JBV2(1)||')';
		EXECUTE IMMEDIATE V_MSQL INTO V_TRA_ID;
		
		--ELIMINAR TAREAS
		V_MSQL := 'SELECT LISTAGG(TAC.TAR_ID,'','') WITHIN GROUP (ORDER BY TAC.TAR_ID) AS TAREAS
				    FROM '||V_ESQUEMA||'.TAC_TAREAS_ACTIVOS TAC
				    INNER JOIN '||V_ESQUEMA||'.TEX_TAREA_EXTERNA TEX ON TEX.TAR_ID = TAC.TAR_ID
				    INNER JOIN '||V_ESQUEMA||'.TAP_TAREA_PROCEDIMIENTO TAP ON TAP.TAP_ID = TEX.TAP_ID
				    INNER JOIN '||V_ESQUEMA||'.TAR_TAREAS_NOTIFICACIONES TAR ON TAR.TAR_ID = TAC.TAR_ID
				    WHERE TAC.TRA_ID = '||V_TRA_ID||' AND TAP.TAP_CODIGO IN (''T004_ValidacionTrabajo'')';
		EXECUTE IMMEDIATE V_MSQL INTO V_TARS;
			
		IF LENGTH(V_TARS) > 0 THEN
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.TEV_TAREA_EXTERNA_VALOR WHERE TEX_ID IN (SELECT TEX_ID FROM '||V_ESQUEMA||'.TEX_TAREA_EXTERNA WHERE TAR_ID IN ('||TRIM(V_TARS)||'))';
			EXECUTE IMMEDIATE V_MSQL;
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.TEX_TAREA_EXTERNA WHERE TAR_ID IN ('||TRIM(V_TARS)||')';
			EXECUTE IMMEDIATE V_MSQL;
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.ETN_EXTAREAS_NOTIFICACIONES WHERE TAR_ID IN ('||TRIM(V_TARS)||')';
			EXECUTE IMMEDIATE V_MSQL;
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.TAC_TAREAS_ACTIVOS WHERE TAR_ID IN ('||TRIM(V_TARS)||')';
			EXECUTE IMMEDIATE V_MSQL;
			V_MSQL := 'DELETE FROM '||V_ESQUEMA||'.TAR_TAREAS_NOTIFICACIONES WHERE TAR_ID IN ('||TRIM(V_TARS)||')';
			EXECUTE IMMEDIATE V_MSQL;
		END IF;
		TRABAJOS := TRABAJOS||V_TMP_JBV2(1)||',';
		
	END LOOP;
	TRABAJOS := SUBSTR(TRABAJOS, 1, LENGTH(TRABAJOS)-1);
	#ESQUEMA#.REPOSICIONAMIENTO_TRABAJO(V_USUARIO, TRIM(TRABAJOS), 'T004_ValidacionTrabajo');
	
	TRABAJOS := '';
	--VALIDADO
	FOR I IN V_JBV3.FIRST .. V_JBV3.LAST	
	LOOP 
		V_TMP_JBV2 := V_JBV2(I);
		V_MSQL := 'SELECT TRA_ID FROM '||V_ESQUEMA||'.ACT_TRA_TRAMITE WHERE TBJ_ID = (SELECT TBJ_ID FROM '||V_ESQUEMA||'.ACT_TBJ_TRABAJO WHERE TBJ_NUM_TRABAJO = '||V_TMP_JBV3(1)||')';
		EXECUTE IMMEDIATE V_MSQL INTO V_TRA_ID;
		
		
		TRABAJOS := TRABAJOS||V_TMP_JBV3(1)||',';
		
	END LOOP;
	TRABAJOS := SUBSTR(TRABAJOS, 1, LENGTH(TRABAJOS)-1);
	#ESQUEMA#.REPOSICIONAMIENTO_TRABAJO(V_USUARIO, TRIM(TRABAJOS), 'T004_CierreEconomico');
    
    COMMIT;
	
   	DBMS_OUTPUT.PUT_LINE('[FIN] ');
	
EXCEPTION

   WHEN OTHERS THEN
        err_num := SQLCODE;
        err_msg := SQLERRM;

        DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(err_num));
        DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
        DBMS_OUTPUT.put_line(err_msg);

        ROLLBACK;
        RAISE;          

END;

/

EXIT
