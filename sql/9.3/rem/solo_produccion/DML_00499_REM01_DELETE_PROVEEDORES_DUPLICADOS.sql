--/*
--#########################################
--## AUTOR=IVAN REPISO
--## FECHA_CREACION=20201008
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.3
--## INCIDENCIA_LINK=REMVIP-8210
--## PRODUCTO=NO
--## 
--## Finalidad: Carga masiva de aprobación del informe comercial
--##			
--## INSTRUCCIONES:  
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/
WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON; 
SET DEFINE OFF; 
DECLARE
    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar    
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquemas
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master
    V_NUM_TABLAS NUMBER(16); -- Vble. para validar la existencia de una tabla.
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.
    V_USU VARCHAR2(30 CHAR) := 'REMVIP-8263'; -- USUARIOCREAR/USUARIOMODIFICAR.
	V_PVE_ID NUMBER(16):= 157050;

	TYPE T_TIPO_DATA IS TABLE OF VARCHAR2(150);
    TYPE T_ARRAY_DATA IS TABLE OF T_TIPO_DATA;
    V_TIPO_DATA T_ARRAY_DATA := T_ARRAY_DATA(
		T_TIPO_DATA(30257), --eliminar
		T_TIPO_DATA(102768) --eliminar
	); 
    V_TMP_TIPO_DATA T_TIPO_DATA;

    
BEGIN		

	DBMS_OUTPUT.PUT_LINE('[INFO] BORRAMOS PROVEEDORES DUPLICADOS');

	FOR I IN V_TIPO_DATA.FIRST .. V_TIPO_DATA.LAST
    LOOP
        V_TMP_TIPO_DATA := V_TIPO_DATA(I);
		
		V_MSQL := 'SELECT COUNT(*) FROM '|| V_ESQUEMA ||'.ACT_PVE_PROVEEDOR WHERE PVE_ID = '||V_TMP_TIPO_DATA(1)||' AND BORRADO = 0' ;	
		EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;

		IF V_NUM_TABLAS = 1 THEN

		V_MSQL := 'UPDATE '|| V_ESQUEMA ||'.ACT_PVE_PROVEEDOR SET BORRADO = 1 ,
					USUARIOBORRAR = '''||V_USU||''', FECHABORRAR = SYSDATE
					WHERE PVE_ID = '||V_TMP_TIPO_DATA(1)||' AND BORRADO = 0' ;	
		EXECUTE IMMEDIATE V_MSQL;

		DBMS_OUTPUT.PUT_LINE('[INFO] PROVEEDOR BORRADO');

		ELSE

		DBMS_OUTPUT.PUT_LINE('[INFO] PROVEEDOR YA BORRADO');

		END IF;

		V_MSQL := 'SELECT COUNT(*) FROM '|| V_ESQUEMA ||'.ACT_PVC_PROVEEDOR_CONTACTO WHERE PVE_ID = '||V_TMP_TIPO_DATA(1)||' AND BORRADO = 0' ;	
		EXECUTE IMMEDIATE V_MSQL INTO V_NUM_TABLAS;

		IF V_NUM_TABLAS = 1 THEN

		V_MSQL := 'UPDATE '|| V_ESQUEMA ||'.ACT_PVC_PROVEEDOR_CONTACTO SET BORRADO = 1 ,
					USUARIOBORRAR = '''||V_USU||''', FECHABORRAR = SYSDATE
					WHERE PVE_ID = '||V_TMP_TIPO_DATA(1)||' AND BORRADO = 0' ;	
		EXECUTE IMMEDIATE V_MSQL;

		DBMS_OUTPUT.PUT_LINE('[INFO] PROVEEDOR CONTACTO BORRADO');

		ELSE

		DBMS_OUTPUT.PUT_LINE('[INFO] PROVEEDOR CONTACTO YA BORRADO');

		END IF;

		DBMS_OUTPUT.PUT_LINE('[INFO] ASIGNAR GASTOS A PROVEEDOR QUE SE MANTIENE');

		V_MSQL := 'UPDATE '|| V_ESQUEMA ||'.GPV_GASTOS_PROVEEDOR SET PVE_ID_EMISOR = '||V_PVE_ID||',
					USUARIOMODIFICAR = '''||V_USU||''', FECHAMODIFICAR = SYSDATE
					WHERE PVE_ID_EMISOR = '||V_TMP_TIPO_DATA(1)||' AND BORRADO = 0' ;	
		EXECUTE IMMEDIATE V_MSQL;

		DBMS_OUTPUT.PUT_LINE('[INFO] Se actualizan '||SQL%ROWCOUNT||' registros '); 	

		DBMS_OUTPUT.PUT_LINE('[INFO] ASIGNAR TRABAJOS A PROVEEDOR QUE SE MANTIENE');

		V_MSQL := 'UPDATE '|| V_ESQUEMA ||'.ACT_TBJ_TRABAJO SET PVC_ID = 
					(SELECT PVC_ID FROM '|| V_ESQUEMA ||'.ACT_PVC_PROVEEDOR_CONTACTO WHERE PVE_ID = '||V_PVE_ID||' AND BORRADO = 0),
					USUARIOMODIFICAR = '''||V_USU||''', FECHAMODIFICAR = SYSDATE
					WHERE PVC_ID = (SELECT PVC_ID FROM '|| V_ESQUEMA ||'.ACT_PVC_PROVEEDOR_CONTACTO WHERE PVE_ID = '||V_TMP_TIPO_DATA(1)||')
					AND BORRADO = 0' ;	
		EXECUTE IMMEDIATE V_MSQL;

		DBMS_OUTPUT.PUT_LINE('[INFO] Se actualizan '||SQL%ROWCOUNT||' registros ');
        
    END LOOP;

	COMMIT;
	
	DBMS_OUTPUT.PUT_LINE('[FIN]');
 
EXCEPTION
     WHEN OTHERS THEN
          ERR_NUM := SQLCODE;
          ERR_MSG := SQLERRM;
          DBMS_OUTPUT.put_line('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
          DBMS_OUTPUT.put_line('-----------------------------------------------------------'); 
          DBMS_OUTPUT.put_line(ERR_MSG);
          ROLLBACK;
          RAISE;   
END;
/
EXIT;