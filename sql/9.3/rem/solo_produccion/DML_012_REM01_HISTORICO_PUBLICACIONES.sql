--/*
--#########################################
--## AUTOR=Carles Molins
--## FECHA_CREACION=20190703
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.2
--## INCIDENCIA_LINK=REMVIP-4701
--## PRODUCTO=NO
--## 
--## Finalidad: [REMVIP-4701] Cambios en el histórico de publicaciones
--##
--## INSTRUCCIONES:
--## VERSIONES:
--##        0.1 Versión inicial (solo Bankia) - REMVIP-4407
--##		0.2 Resto de carteras - REMVIP-4701
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema.
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master.
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar.
	V_TABLA VARCHAR2(30 CHAR):= 'ACT_AHP_HIST_PUBLICACION'; --Vble. para la tabla histórica.
	V_TABLA_COPIA VARCHAR2(30 CHAR):= 'AHP_COPIA_REMVIP_4701'; --Vble. para la tabla backup.
	V_USUARIO VARCHAR2(40 CHAR) := 'REMVIP-4701'; --Vble. para el usuario REMVIP.
	V_NUM NUMBER(16); -- Vble. para validar la existencia de una tabla.

BEGIN

	DBMS_OUTPUT.put_line('[INICIO]');
	DBMS_OUTPUT.put_line('[INFO] Creación de la tabla backup');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = '''||V_TABLA_COPIA||''' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.'||V_TABLA_COPIA||'';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;
		
	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.'||V_TABLA_COPIA||' AS SELECT * FROM '||V_ESQUEMA||'.'||V_TABLA||'';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	Copia de la tabla '||V_ESQUEMA||'.'||V_TABLA||' creada en la tabla '||V_ESQUEMA||'.'||V_TABLA_COPIA||'');

	DBMS_OUTPUT.put_line('[INFO] Creación de las tablas auxiliares');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''AHP_REG_NEGATIVOS'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_NEGATIVOS';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.AHP_REG_NEGATIVOS
				(
					AHP_ID NUMBER(16,0) NOT NULL,
					ACT_ID NUMBER(16,0) NOT NULL,
					AHP_ID_SIG NUMBER(16,0),  
					HEP_ID NUMBER(16,0)
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	1.Tabla '||V_ESQUEMA||'.AHP_REG_NEGATIVOS creada');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''AHP_REG_SIG_NEG'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_SIG_NEG';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.AHP_REG_SIG_NEG
				(
					COUNT NUMBER(16,0) NOT NULL,
					AHP_ID NUMBER(16,0) NOT NULL,
					ACT_ID NUMBER(16,0) NOT NULL
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	2.Tabla '||V_ESQUEMA||'.AHP_REG_SIG_NEG creada');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''ACT_BORRADO_INICIALIZADOS'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS
				(
					ACT_ID NUMBER(16,0) NOT NULL
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	3.Tabla '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS creada');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''MIGRACION_PUBLICACIONES'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES
				(
					ACT_ID NUMBER(16,0) NOT NULL,
					DD_TCO_ID NUMBER(16,0) NOT NULL,
					ESTADO NUMBER(16,0) NOT NULL,
					MOTIVO NUMBER(16,0),
					FECHA_DESDE DATE,
					FECHA_HASTA DATE
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	4.Tabla '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES creada');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''AHP_DUPLICADOS'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_DUPLICADOS';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.AHP_DUPLICADOS
				(
					ACT_ID NUMBER(16,0) NOT NULL,
					AHP_ID NUMBER(16,0) NOT NULL,
					AHP_ID_SIG NUMBER(16,0) NOT NULL
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	5.Tabla '||V_ESQUEMA||'.AHP_DUPLICADOS creada');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''AHP_UNIFICAR'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_UNIFICAR';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.AHP_UNIFICAR
				(
					AHP_ID NUMBER(16,0) NOT NULL
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	6.Tabla '||V_ESQUEMA||'.AHP_UNIFICAR creada');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''AHP_REG_VIVOS_CERRADOS_IGUALES'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES
				(
					ACT_ID NUMBER(16,0) NOT NULL,
					ID_VIVO NUMBER(16,0) NOT NULL,
					FECHA_INI_VIVO DATE,
					ID_CERRADO NUMBER(16,0) NOT NULL,
					FECHA_FIN_CERRADO DATE,
					BORRAR_CERRADO NUMBER(1,0) NOT NULL
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	7.Tabla '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES creada');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''AUX_PASO_9'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AUX_PASO_9';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.AUX_PASO_9
				(
					ACT_ID NUMBER(16,0) NOT NULL,
        			AHP_ID NUMBER(16,0) NOT NULL
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	8.Tabla '||V_ESQUEMA||'.AUX_PASO_9 creada');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''AHP_REG_NEGATIVOS_ALQ'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ
				(
					AHP_ID NUMBER(16,0) NOT NULL,
					ACT_ID NUMBER(16,0) NOT NULL,
					AHP_ID_SIG NUMBER(16,0),  
					HEP_ID NUMBER(16,0)
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	9.Tabla '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ creada');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''AHP_REG_SIG_NEG_ALQ'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_SIG_NEG_ALQ';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.AHP_REG_SIG_NEG_ALQ
				(
					COUNT NUMBER(16,0) NOT NULL,
					AHP_ID NUMBER(16,0) NOT NULL,
					ACT_ID NUMBER(16,0) NOT NULL
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	10.Tabla '||V_ESQUEMA||'.AHP_REG_SIG_NEG_ALQ creada');
	
	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''ACT_BORRADO_INICIALIZADOS_ALQ'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS_ALQ';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS_ALQ
				(
					ACT_ID NUMBER(16,0) NOT NULL
				)';
	EXECUTE IMMEDIATE V_MSQL;
	DBMS_OUTPUT.PUT_LINE('[INFO]	11.Tabla '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS_ALQ creada');

/************************************************************************************************************************************************************************ PASO 1 *****/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 1');

/***** GUARDAR NEGATIVOS EN AHP_REG_NEGATIVOS *****/

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.AHP_REG_NEGATIVOS (AHP_ID, ACT_ID) 
				SELECT HIS.AHP_ID, HIS.ACT_ID 
				FROM '||V_ESQUEMA||'.'||V_TABLA||' HIS
				JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON HIS.ACT_ID = ACT.ACT_ID AND ACT.BORRADO = 0
				WHERE TO_DATE(HIS.AHP_FECHA_INI_VENTA, ''DD/MM/YY'') > TO_DATE(HIS.AHP_FECHA_FIN_VENTA, ''DD/MM/YY'') AND HIS.BORRADO = 0
				AND ACT.DD_CRA_ID <> 21
				ORDER BY AHP_ID ASC';
	EXECUTE IMMEDIATE V_MSQL;
    
/***** GUARDAR HEP_ID EN AHP_REG_NEGATIVOS PARA LOS REGISTROS NEGATIVOS QUE COINCIDEN CON LA HEP A LA INVERSA *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.AHP_REG_NEGATIVOS T1
				USING (
					SELECT AHP1.AHP_ID, HEP.HEP_ID
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP1 
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON AHP1.ACT_ID = ACT.ACT_ID AND DD_CRA_ID <> 21
					JOIN '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION HEP ON HEP.ACT_ID = AHP1.ACT_ID AND AHP1.AHP_FECHA_INI_VENTA = HEP.HEP_FECHA_HASTA AND AHP1.AHP_FECHA_FIN_VENTA = HEP.HEP_FECHA_DESDE
					where TO_DATE(AHP1.AHP_FECHA_INI_VENTA,''DD/MM/YY'') > TO_DATE(AHP1.AHP_FECHA_FIN_VENTA,''DD/MM/YY'') AND AHP1.BORRADO = 0
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.HEP_ID = T2.HEP_ID';
	EXECUTE IMMEDIATE V_MSQL;
    
/***** GUARDAR CONTADORES DE POSIBLES REGISTROS SIGUIENTE AL NEGATIVO EN AHP_REG_SIG_NEG *****/   
    
	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.AHP_REG_SIG_NEG (COUNT, AHP_ID, ACT_ID)
				SELECT COUNT(*), AHP_ID, ACT_ID FROM
				(
					SELECT NEG.AHP_ID, NEG.ACT_ID, SIG.AHP_ID AS AHP_SIG, NEG.HEP_ID
					FROM '||V_ESQUEMA||'.'||V_TABLA||' HIS
					JOIN '||V_ESQUEMA||'.AHP_REG_NEGATIVOS NEG ON HIS.AHP_ID = NEG.AHP_ID AND NEG.HEP_ID IS NOT NULL
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' SIG ON HIS.ACT_ID = SIG.ACT_ID AND HIS.AHP_ID <> SIG.AHP_ID AND SIG.BORRADO = 0 AND HIS.AHP_FECHA_FIN_VENTA = SIG.AHP_FECHA_INI_VENTA
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' SIG2 ON HIS.ACT_ID = SIG2.ACT_ID AND HIS.AHP_ID <> SIG2.AHP_ID AND SIG2.BORRADO = 0 AND SIG.AHP_FECHA_FIN_VENTA = SIG2.AHP_FECHA_INI_VENTA
				)
				GROUP BY AHP_ID, ACT_ID';
	EXECUTE IMMEDIATE V_MSQL;

/***** GUARDAR EN AHP_REG_NEGATIVOS LOS SIGUIENTES ÚNICOS DE AHP_REG_SIG_NEG *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.AHP_REG_NEGATIVOS T1
				USING (
					SELECT RSN.AHP_ID, AUX.AHP_SIG FROM '||V_ESQUEMA||'.AHP_REG_SIG_NEG RSN
					JOIN (
						SELECT NEG.AHP_ID, SIG.AHP_ID AS AHP_SIG
						FROM '||V_ESQUEMA||'.'||V_TABLA||' HIS
						JOIN '||V_ESQUEMA||'.AHP_REG_NEGATIVOS NEG ON HIS.AHP_ID = NEG.AHP_ID AND NEG.HEP_ID IS NOT NULL
						JOIN '||V_ESQUEMA||'.'||V_TABLA||' SIG ON HIS.ACT_ID = SIG.ACT_ID AND HIS.AHP_ID <> SIG.AHP_ID AND SIG.BORRADO = 0 AND HIS.AHP_FECHA_FIN_VENTA = SIG.AHP_FECHA_INI_VENTA
						JOIN '||V_ESQUEMA||'.'||V_TABLA||' SIG2 ON HIS.ACT_ID = SIG2.ACT_ID AND HIS.AHP_ID <> SIG2.AHP_ID AND SIG2.BORRADO = 0 AND SIG.AHP_FECHA_FIN_VENTA = SIG2.AHP_FECHA_INI_VENTA
					) AUX ON AUX.AHP_ID = RSN.AHP_ID
					WHERE RSN.COUNT = 1
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_ID_SIG = T2.AHP_SIG';
	EXECUTE IMMEDIATE V_MSQL;

/***** ACTUACIÓN 8 PASO 1 PARA TODOS LOS REGISTROS NEGATIVOS *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT NEG.AHP_ID, AUX.AHP_FECHA_INI_VENTA, AUX.AHP_FECHA_FIN_VENTA 
					FROM '||V_ESQUEMA||'.AHP_REG_NEGATIVOS NEG
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' AUX ON AUX.AHP_ID = NEG.AHP_ID
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_INI_VENTA = T2.AHP_FECHA_FIN_VENTA
					,T1.AHP_FECHA_FIN_VENTA = T2.AHP_FECHA_INI_VENTA
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
    				,T1.FECHAMODIFICAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/***** ACTUACIÓN 8 PASO 2 PARA LOS REGISTROS NEGATIVOS CUYO SIGUIENTE ES ÚNICO EN AHP_REG_SIG_NEG *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT AUX.AHP_ID, AUX_SIG.AHP_ID AS AHP_ID_SIG, AUX.AHP_FECHA_FIN_VENTA
					FROM '||V_ESQUEMA||'.AHP_REG_NEGATIVOS NEG
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' AUX ON AUX.AHP_ID = NEG.AHP_ID
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' AUX_SIG ON AUX_SIG.AHP_ID = NEG.AHP_ID_SIG
					WHERE NEG.HEP_ID IS NOT NULL AND NEG.AHP_ID_SIG IS NOT NULL
				) T2
				ON (T1.AHP_ID = T2.AHP_ID_SIG)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_INI_VENTA = T2.AHP_FECHA_FIN_VENTA
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
    				,T1.FECHAMODIFICAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/************************************************************************************************************************************************************************ PASO 2 *****/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 2');

/***** BORRADO REGISTROS MAL MIGRADOS FECHA FIN DE LA MIGRACIÓN Y FECHA HASTA EN LA HEP *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					WITH NUEVA AS (
						SELECT * FROM '||V_ESQUEMA||'.'||V_TABLA||'
						WHERE (TO_DATE(AHP_FECHA_FIN_VENTA ,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') AND TO_DATE(''23/11/18'',''DD/MM/YY''))
						AND BORRADO = 0 AND TO_DATE(AHP_FECHA_INI_VENTA ,''DD/MM/YY'') < TO_DATE(''21/11/18'',''DD/MM/YY'')
					)
					,VIEJA AS (
						SELECT * FROM '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION WHERE BORRADO = 0 AND HEP_FECHA_HASTA IS NOT NULL 
					)
					SELECT DISTINCT NUEVA.AHP_ID
					FROM NUEVA
					LEFT JOIN VIEJA ON VIEJA.ACT_ID = NUEVA.ACT_ID AND AHP_FECHA_INI_VENTA = HEP_FECHA_DESDE AND HEP_FECHA_HASTA IS NOT NULL AND AHP_FECHA_FIN_VENTA <> HEP_FECHA_HASTA
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = NUEVA.ACT_ID AND DD_CRA_ID <> 21
					WHERE VIEJA.ACT_ID IS NOT NULL
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/************************************************************************************************************************************************************************ PASO 3 *****/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 3');

/***** BORRADO REGISTROS MAL INICIADOS FECHA FIN DE LA MIGRACIÓN Y FECHA HASTA NULL EN LA HEP *****/

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS (ACT_ID)
				SELECT DISTINCT AHP.ACT_ID
				FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
				JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AHP.ACT_ID AND DD_CRA_ID <> 21
				JOIN '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION HEP ON HEP.ACT_ID = ACT.ACT_ID AND HEP.HEP_FECHA_HASTA IS NULL AND TO_DATE(HEP.HEP_FECHA_DESDE,''DD/MM/YY'') = TO_DATE(AHP.AHP_FECHA_INI_VENTA,''DD/MM/YY'')
				WHERE (TO_DATE(AHP_FECHA_FIN_VENTA ,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') and TO_DATE(''23/11/18'',''DD/MM/YY'')) AND AHP.BORRADO = 0 AND ACT.BORRADO = 0';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT AHP.AHP_ID
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AHP.ACT_ID AND DD_CRA_ID <> 21
					JOIN '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION HEP ON HEP.ACT_ID = ACT.ACT_ID AND HEP.HEP_FECHA_HASTA IS NULL AND TO_DATE(HEP.HEP_FECHA_DESDE,''DD/MM/YY'') = TO_DATE(AHP.AHP_FECHA_INI_VENTA,''DD/MM/YY'')
					WHERE (TO_DATE(AHP_FECHA_FIN_VENTA ,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') and TO_DATE(''23/11/18'',''DD/MM/YY'')) AND AHP.BORRADO = 0 AND ACT.BORRADO = 0
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/************************************************************************************************************************************************************************ PASO 4 *****/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 4');

/***** AHORA REALIZAMOS TODOS LOS PASOS ANTERIORES PARA ALQULER *****/

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ (AHP_ID, ACT_ID) 
				SELECT HIS.AHP_ID, HIS.ACT_ID 
				FROM '||V_ESQUEMA||'.'||V_TABLA||' HIS
				JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON HIS.ACT_ID = ACT.ACT_ID AND ACT.BORRADO = 0
				WHERE TO_DATE(HIS.AHP_FECHA_INI_ALQUILER, ''DD/MM/YY'') > TO_DATE(HIS.AHP_FECHA_FIN_ALQUILER, ''DD/MM/YY'') AND HIS.BORRADO = 0
				AND ACT.DD_CRA_ID <> 21
				ORDER BY AHP_ID ASC';
	EXECUTE IMMEDIATE V_MSQL;
    
/***** GUARDAR HEP_ID EN AHP_REG_NEGATIVOS_ALQ PARA LOS REGISTROS NEGATIVOS QUE COINCIDEN CON LA HEP A LA INVERSA *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ T1
				USING (
					SELECT AHP1.AHP_ID, HEP.HEP_ID
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP1 
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON AHP1.ACT_ID = ACT.ACT_ID AND DD_CRA_ID <> 21
					JOIN '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION HEP ON HEP.ACT_ID = AHP1.ACT_ID AND AHP1.AHP_FECHA_INI_ALQUILER = HEP.HEP_FECHA_HASTA AND AHP1.AHP_FECHA_FIN_ALQUILER = HEP.HEP_FECHA_DESDE
					where TO_DATE(AHP1.AHP_FECHA_INI_ALQUILER,''DD/MM/YY'') > TO_DATE(AHP1.AHP_FECHA_FIN_ALQUILER,''DD/MM/YY'') AND AHP1.BORRADO = 0
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.HEP_ID = T2.HEP_ID';
	EXECUTE IMMEDIATE V_MSQL;
    
/***** GUARDAR CONTADORES DE POSIBLES REGISTROS SIGUIENTE AL NEGATIVO EN AHP_REG_SIG_NEG_ALQ *****/   
    
	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.AHP_REG_SIG_NEG_ALQ (COUNT, AHP_ID, ACT_ID)
				SELECT COUNT(*), AHP_ID, ACT_ID FROM
				(
					SELECT NEG.AHP_ID, NEG.ACT_ID, SIG.AHP_ID AS AHP_SIG, NEG.HEP_ID
					FROM '||V_ESQUEMA||'.'||V_TABLA||' HIS
					JOIN '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ NEG ON HIS.AHP_ID = NEG.AHP_ID AND NEG.HEP_ID IS NOT NULL
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' SIG ON HIS.ACT_ID = SIG.ACT_ID AND HIS.AHP_ID <> SIG.AHP_ID AND SIG.BORRADO = 0 AND HIS.AHP_FECHA_FIN_ALQUILER = SIG.AHP_FECHA_INI_ALQUILER
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' SIG2 ON HIS.ACT_ID = SIG2.ACT_ID AND HIS.AHP_ID <> SIG2.AHP_ID AND SIG2.BORRADO = 0 AND SIG.AHP_FECHA_FIN_ALQUILER = SIG2.AHP_FECHA_INI_ALQUILER
				)
				GROUP BY AHP_ID, ACT_ID';
	EXECUTE IMMEDIATE V_MSQL;

/***** GUARDAR EN AHP_REG_NEGATIVOS_ALQ LOS SIGUIENTES ÚNICOS DE AHP_REG_SIG_NEG_ALQ *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ T1
				USING (
					SELECT RSN.AHP_ID, AUX.AHP_SIG FROM '||V_ESQUEMA||'.AHP_REG_SIG_NEG_ALQ RSN
					JOIN (
						SELECT NEG.AHP_ID, SIG.AHP_ID AS AHP_SIG
						FROM '||V_ESQUEMA||'.'||V_TABLA||' HIS
						JOIN '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ NEG ON HIS.AHP_ID = NEG.AHP_ID AND NEG.HEP_ID IS NOT NULL
						JOIN '||V_ESQUEMA||'.'||V_TABLA||' SIG ON HIS.ACT_ID = SIG.ACT_ID AND HIS.AHP_ID <> SIG.AHP_ID AND SIG.BORRADO = 0 AND HIS.AHP_FECHA_FIN_ALQUILER = SIG.AHP_FECHA_INI_ALQUILER
						JOIN '||V_ESQUEMA||'.'||V_TABLA||' SIG2 ON HIS.ACT_ID = SIG2.ACT_ID AND HIS.AHP_ID <> SIG2.AHP_ID AND SIG2.BORRADO = 0 AND SIG.AHP_FECHA_FIN_ALQUILER = SIG2.AHP_FECHA_INI_ALQUILER
					) AUX ON AUX.AHP_ID = RSN.AHP_ID
					WHERE RSN.COUNT = 1
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_ID_SIG = T2.AHP_SIG';
	EXECUTE IMMEDIATE V_MSQL;

/***** ACTUACIÓN 8 PASO 1 PARA TODOS LOS REGISTROS NEGATIVOS *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT NEG.AHP_ID, AUX.AHP_FECHA_INI_ALQUILER, AUX.AHP_FECHA_FIN_ALQUILER 
					FROM '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ NEG
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' AUX ON AUX.AHP_ID = NEG.AHP_ID
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_INI_ALQUILER = T2.AHP_FECHA_FIN_ALQUILER
					,T1.AHP_FECHA_FIN_ALQUILER = T2.AHP_FECHA_INI_ALQUILER';
	EXECUTE IMMEDIATE V_MSQL;

/***** ACTUACIÓN 8 PASO 2 PARA LOS REGISTROS NEGATIVOS CUYO SIGUIENTE ES ÚNICO EN AHP_REG_SIG_NEG_ALQ *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT AUX.AHP_ID, AUX_SIG.AHP_ID AS AHP_ID_SIG, AUX.AHP_FECHA_FIN_ALQUILER
					FROM '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ NEG
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' AUX ON AUX.AHP_ID = NEG.AHP_ID
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' AUX_SIG ON AUX_SIG.AHP_ID = NEG.AHP_ID_SIG
					WHERE NEG.HEP_ID IS NOT NULL AND NEG.AHP_ID_SIG IS NOT NULL
				) T2
				ON (T1.AHP_ID = T2.AHP_ID_SIG)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_INI_ALQUILER = T2.AHP_FECHA_FIN_ALQUILER
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/***** BORRADO REGISTROS MAL MIGRADOS FECHA FIN DE LA MIGRACIÓN Y FECHA HASTA EN LA HEP *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					WITH NUEVA AS (
						SELECT * FROM '||V_ESQUEMA||'.'||V_TABLA||'
						WHERE (TO_DATE(AHP_FECHA_FIN_ALQUILER ,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') AND TO_DATE(''23/11/18'',''DD/MM/YY''))
						AND BORRADO = 0 AND TO_DATE(AHP_FECHA_INI_ALQUILER ,''DD/MM/YY'') < TO_DATE(''21/11/18'',''DD/MM/YY'')
					)
					,VIEJA AS (
						SELECT * FROM '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION WHERE BORRADO = 0 AND HEP_FECHA_HASTA IS NOT NULL 
					)
					SELECT DISTINCT NUEVA.AHP_ID
					FROM NUEVA
					LEFT JOIN VIEJA ON VIEJA.ACT_ID = NUEVA.ACT_ID AND AHP_FECHA_INI_ALQUILER = HEP_FECHA_DESDE AND HEP_FECHA_HASTA IS NOT NULL AND AHP_FECHA_FIN_ALQUILER <> HEP_FECHA_HASTA
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = NUEVA.ACT_ID AND DD_CRA_ID <> 21
					WHERE VIEJA.ACT_ID IS NOT NULL
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/***** BORRADO REGISTROS MAL INICIADOS FECHA FIN DE LA MIGRACIÓN Y FECHA HASTA NULL EN LA HEP *****/
    
	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS_ALQ (ACT_ID)
				SELECT DISTINCT AHP.ACT_ID
				FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
				JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AHP.ACT_ID AND DD_CRA_ID <> 21
				JOIN '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION HEP ON HEP.ACT_ID = ACT.ACT_ID AND HEP.HEP_FECHA_HASTA IS NULL AND TO_DATE(HEP.HEP_FECHA_DESDE,''DD/MM/YY'') = TO_DATE(AHP.AHP_FECHA_INI_ALQUILER,''DD/MM/YY'')
				WHERE (TO_DATE(AHP_FECHA_FIN_ALQUILER ,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') and TO_DATE(''23/11/18'',''DD/MM/YY'')) AND AHP.BORRADO = 0 AND ACT.BORRADO = 0';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_TABLA||' T1
				USING (
					SELECT AHP.AHP_ID
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AHP.ACT_ID AND DD_CRA_ID <> 21
					JOIN '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION HEP ON HEP.ACT_ID = ACT.ACT_ID AND HEP.HEP_FECHA_HASTA IS NULL AND TO_DATE(HEP.HEP_FECHA_DESDE,''DD/MM/YY'') = TO_DATE(AHP.AHP_FECHA_INI_ALQUILER,''DD/MM/YY'')
					WHERE (TO_DATE(AHP_FECHA_FIN_ALQUILER ,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') and TO_DATE(''23/11/18'',''DD/MM/YY'')) AND AHP.BORRADO = 0 AND ACT.BORRADO = 0
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/************************************************************************************************************************************************************************ PASO 5 *****/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 5');

/***** INICIALIZAMOS TODOS LOS MAL INICIALIZADOS CUYOS REGISTROS HEMOS BORRADO *****/

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES
				WITH VIEJA AS (
					SELECT ROW_NUMBER() OVER (PARTITION BY ACT_ID ORDER BY HEP_FECHA_DESDE DESC) RN, HIS.*
					FROM '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION HIS
					WHERE HIS.HEP_FECHA_HASTA IS NULL AND HIS.BORRADO = 0
				)
				SELECT DISTINCT ACT.ACT_ID, AHP.DD_TCO_ID,
				CASE WHEN AHP.DD_EPU_ID = 5 THEN 4
					 WHEN AHP.DD_EPU_ID = 6 THEN 1
					 WHEN AHP.DD_EPU_ID = 3 THEN 4
					 ELSE 3
				END ESTADO,
				CASE WHEN AHP.DD_EPU_ID = 5 THEN 12
					 WHEN AHP.DD_EPU_ID = 3 THEN
						CASE WHEN AHP.DD_MTO_V_ID IS NOT NULL THEN AHP.DD_MTO_V_ID
						     ELSE AHP.DD_MTO_A_ID
						END
				END MOTIVO,
				AHP.HEP_FECHA_DESDE,
				AHP.AHP_FECHA_INI_VENTA
				FROM '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS ACT
				JOIN (
					SELECT ROW_NUMBER() OVER (PARTITION BY AUX.ACT_ID ORDER BY AUX.AHP_FECHA_INI_VENTA, AUX.AHP_FECHA_FIN_VENTA ASC) RN, 
						AUX.ACT_ID, AUX.DD_TCO_ID, AUX.DD_MTO_V_ID, AUX.DD_MTO_A_ID, AUX.AHP_FECHA_INI_VENTA, HEP.DD_EPU_ID, HEP.HEP_FECHA_DESDE
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AUX
					JOIN VIEJA HEP ON HEP.ACT_ID = AUX.ACT_ID AND HEP.RN = 1 AND TO_DATE(HEP.HEP_FECHA_DESDE,''DD/MM/YY'') < TO_DATE(AUX.AHP_FECHA_INI_VENTA,''DD/MM/YY'')
					WHERE AHP_FECHA_INI_VENTA IS NOT NULL
					AND AUX.BORRADO = 0
				) AHP ON AHP.ACT_ID = ACT.ACT_ID
				WHERE RN = 1';
	EXECUTE IMMEDIATE V_MSQL;

/***** INSERTAMOS LOS REGISTROS DE VENTA *****/

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.'||V_TABLA||' (
					AHP_ID
					,ACT_ID
					,DD_EPV_ID
					,DD_EPA_ID
					,DD_TCO_ID
					,DD_MTO_V_ID
					,AHP_CHECK_PUBLICAR_V
					,AHP_CHECK_OCULTAR_V
					,AHP_CHECK_OCULTAR_PRECIO_V
					,AHP_CHECK_PUB_SIN_PRECIO_V
					,AHP_CHECK_PUBLICAR_A
					,AHP_CHECK_OCULTAR_A
					,AHP_CHECK_OCULTAR_PRECIO_A
					,AHP_CHECK_PUB_SIN_PRECIO_A
					,AHP_FECHA_INI_VENTA
					,AHP_FECHA_FIN_VENTA
					,VERSION
					,USUARIOCREAR
					,FECHACREAR
					,BORRADO
					,ES_CONDICONADO_ANTERIOR
				)
				SELECT '||V_ESQUEMA||'.S_ACT_AHP_HIST_PUBLICACION.NEXTVAL
					,ACT_ID
					,ESTADO
					,CASE WHEN DD_TCO_ID = 2 THEN ESTADO
						  ELSE 1
					 END
					,DD_TCO_ID
					,MOTIVO
					,CASE WHEN ESTADO <> 1 THEN 1
						  ELSE 0
					 END
					,CASE WHEN ESTADO = 4 THEN 1
						  ELSE 0
					 END
					,0,0,0,0,0,0
					,FECHA_DESDE
					,FECHA_HASTA
					,0
					,'''||V_USUARIO||'''
					,SYSDATE
					,0
					,0
				FROM '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES WHERE DD_TCO_ID IN (1,2)';
	EXECUTE IMMEDIATE V_MSQL;

/***** INSERTAMOS LOS REGISTROS DE ALQUILER *****/

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.'||V_TABLA||' (
					AHP_ID
					,ACT_ID
					,DD_EPV_ID
					,DD_EPA_ID
					,DD_TCO_ID
					,DD_MTO_A_ID
					,AHP_CHECK_PUBLICAR_V
					,AHP_CHECK_OCULTAR_V
					,AHP_CHECK_OCULTAR_PRECIO_V
					,AHP_CHECK_PUB_SIN_PRECIO_V
					,AHP_CHECK_PUBLICAR_A
					,AHP_CHECK_OCULTAR_A
					,AHP_CHECK_OCULTAR_PRECIO_A
					,AHP_CHECK_PUB_SIN_PRECIO_A
					,AHP_FECHA_INI_ALQUILER
					,AHP_FECHA_FIN_ALQUILER
					,VERSION
					,USUARIOCREAR
					,FECHACREAR
					,BORRADO
					,ES_CONDICONADO_ANTERIOR
				)
				SELECT '||V_ESQUEMA||'.S_ACT_AHP_HIST_PUBLICACION.NEXTVAL
					,ACT_ID
					,CASE WHEN DD_TCO_ID = 2 THEN ESTADO
						  ELSE 1
					 END
					,ESTADO
					,DD_TCO_ID
					,MOTIVO
					,0,0,0,0
					,CASE WHEN ESTADO <> 1 THEN 1
						  ELSE 0
					 END
					,CASE WHEN ESTADO = 4 THEN 1
						  ELSE 0
					 END
					,0,0
					,FECHA_DESDE
					,FECHA_HASTA
					,0
					,'''||V_USUARIO||'''
					,SYSDATE
					,0
					,0
				FROM '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES WHERE DD_TCO_ID IN (2,3)';
	EXECUTE IMMEDIATE V_MSQL;

/************************************************************************************************************************************************************************ PASO 6 *****/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 6');

/***** BORRAR REGISTROS AHP CON FECHA FIN MIGRACIÓN CUYA FECHA INI NO EXISTE EN LA HEP *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT DISTINCT AUX.AHP_ID FROM '||V_ESQUEMA||'.'||V_TABLA||' AUX
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AUX.ACT_ID AND DD_CRA_ID <> 21
					WHERE (TO_DATE(AHP_FECHA_FIN_VENTA ,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') and TO_DATE(''23/11/18'',''DD/MM/YY'')) AND AUX.BORRADO = 0 AND ACT.BORRADO = 0
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT DISTINCT AUX.AHP_ID FROM '||V_ESQUEMA||'.'||V_TABLA||' AUX
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AUX.ACT_ID AND DD_CRA_ID <> 21
					WHERE (TO_DATE(AHP_FECHA_FIN_ALQUILER ,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') and TO_DATE(''23/11/18'',''DD/MM/YY'')) AND AUX.BORRADO = 0 AND ACT.BORRADO = 0
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/************************************************************************************************************************************************************************ PASO 7 *****/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 7');

/***** BORRAR REGISTROS FECHA INI MIGRACIÓN Y FECHA FIN IGUAL A OTRO REGISTRO *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT DISTINCT H1.AHP_ID
					FROM '||V_ESQUEMA||'.'||V_TABLA||' H1
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' H2 ON H1.ACT_ID = H2.ACT_ID AND H1.AHP_ID <> H2.AHP_ID AND TO_DATE(H1.AHP_FECHA_FIN_VENTA,''DD/MM/YY'') = TO_DATE(H2.AHP_FECHA_FIN_VENTA,''DD/MM/YY'')
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = H1.ACT_ID AND DD_CRA_ID <> 21 AND ACT.BORRADO = 0
					WHERE (TO_DATE(H1.AHP_FECHA_INI_VENTA,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') AND TO_DATE(''23/11/18'',''DD/MM/YY''))
					AND H1.BORRADO = 0 AND H2.BORRADO = 0
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT DISTINCT H1.AHP_ID
					FROM '||V_ESQUEMA||'.'||V_TABLA||' H1
					JOIN '||V_ESQUEMA||'.'||V_TABLA||' H2 ON H1.ACT_ID = H2.ACT_ID AND H1.AHP_ID <> H2.AHP_ID AND TO_DATE(H1.AHP_FECHA_FIN_ALQUILER,''DD/MM/YY'') = TO_DATE(H2.AHP_FECHA_FIN_ALQUILER,''DD/MM/YY'')
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = H1.ACT_ID AND DD_CRA_ID <> 21
					WHERE (TO_DATE(H1.AHP_FECHA_INI_ALQUILER,''DD/MM/YY'') BETWEEN TO_DATE(''21/11/18'',''DD/MM/YY'') AND TO_DATE(''23/11/18'',''DD/MM/YY''))
					AND H1.BORRADO = 0 AND H2.BORRADO = 0
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/***** REGISTRO VIVO CON MISMA FECHA INI QUE OTRO CERRADO VENTA *****/

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES
				SELECT DISTINCT H1.ACT_ID, H1.AHP_ID AS ID_VIVO, H1.AHP_FECHA_INI_VENTA AS FECHA_INI_VIVO, H2.AHP_ID AS ID_CERRADO, H2.AHP_FECHA_FIN_VENTA AS FECHA_FIN_CERRADO,
					CASE 
						WHEN H1.DD_EPV_ID = H2.DD_EPV_ID THEN
						    CASE
						        WHEN H1.DD_EPV_ID = 4 THEN 
						            CASE
						                WHEN H1.DD_MTO_V_ID = H2.DD_MTO_V_ID THEN 1
						                ELSE 0
						            END
						        ELSE 1
						    END
						ELSE 0
					END AS BORRAR_CERRADO
				FROM '||V_ESQUEMA||'.'||V_TABLA||' H1
				JOIN '||V_ESQUEMA||'.'||V_TABLA||' H2 ON H1.ACT_ID = H2.ACT_ID AND H1.AHP_ID <> H2.AHP_ID 
					AND TO_DATE(H1.AHP_FECHA_INI_VENTA,''DD/MM/YY'') = TO_DATE(H2.AHP_FECHA_INI_VENTA,''DD/MM/YY'')
					AND TO_DATE(H1.AHP_FECHA_INI_VENTA,''DD/MM/YY'') <> TO_DATE(H2.AHP_FECHA_FIN_VENTA,''DD/MM/YY'')
				JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = H1.ACT_ID AND DD_CRA_ID <> 21
				WHERE H1.AHP_FECHA_FIN_VENTA IS NULL
				AND H1.BORRADO = 0 AND H2.BORRADO = 0';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT ID_CERRADO FROM '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES WHERE BORRAR_CERRADO = 1
				) T2
				ON (T1.AHP_ID = T2.ID_CERRADO)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL; 

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT AUX.* FROM '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES AUX
					JOIN (
						SELECT COUNT(ACT_ID) AS CONT, ACT_ID
						FROM '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES GROUP BY ACT_ID
					) ACT ON ACT.ACT_ID = AUX.ACT_ID AND ACT.CONT = 1
					WHERE BORRAR_CERRADO = 0
				) T2
				ON (T1.AHP_ID = T2.ID_VIVO)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_INI_VENTA = T2.FECHA_FIN_CERRADO
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/***** REGISTRO VIVO CON MISMA FECHA INI QUE OTRO CERRADO ALQUILER *****/

	V_MSQL := 'TRUNCATE TABLE '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES
				SELECT DISTINCT H1.ACT_ID, H1.AHP_ID AS ID_VIVO, H1.AHP_FECHA_INI_ALQUILER AS FECHA_INI_VIVO, H2.AHP_ID AS ID_CERRADO, H2.AHP_FECHA_FIN_ALQUILER AS FECHA_FIN_CERRADO,
					CASE 
						WHEN H1.DD_EPA_ID = H2.DD_EPA_ID THEN
						    CASE
						        WHEN H1.DD_EPA_ID = 4 THEN 
						            CASE
						                WHEN H1.DD_MTO_A_ID = H2.DD_MTO_A_ID THEN 1
						                ELSE 0
						            END
						        ELSE 1
						    END
						ELSE 0
					END AS BORRAR_CERRADO
				FROM '||V_ESQUEMA||'.'||V_TABLA||' H1
				JOIN '||V_ESQUEMA||'.'||V_TABLA||' H2 ON H1.ACT_ID = H2.ACT_ID AND H1.AHP_ID <> H2.AHP_ID 
					AND TO_DATE(H1.AHP_FECHA_INI_ALQUILER,''DD/MM/YY'') = TO_DATE(H2.AHP_FECHA_INI_ALQUILER,''DD/MM/YY'')
					AND TO_DATE(H1.AHP_FECHA_INI_ALQUILER,''DD/MM/YY'') <> TO_DATE(H2.AHP_FECHA_FIN_ALQUILER,''DD/MM/YY'')
				JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = H1.ACT_ID AND DD_CRA_ID <> 21
				WHERE H1.AHP_FECHA_FIN_ALQUILER IS NULL
				AND H1.BORRADO = 0 AND H2.BORRADO = 0';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT ID_CERRADO FROM '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES WHERE BORRAR_CERRADO = 1
				) T2
				ON (T1.AHP_ID = T2.ID_CERRADO)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL; 

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT AUX.* FROM '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES AUX
					JOIN (
						SELECT COUNT(ACT_ID) AS CONT, ACT_ID
						FROM '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES GROUP BY ACT_ID
					) ACT ON ACT.ACT_ID = AUX.ACT_ID AND ACT.CONT = 1
					WHERE BORRAR_CERRADO = 0
				) T2
				ON (T1.AHP_ID = T2.ID_VIVO)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_INI_ALQUILER = T2.FECHA_FIN_CERRADO
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

/************************************************************************************************************************************************************************ PASO 8 *****/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 8');

/***** ELIMINAR REGISTROS AHP PRE-MIGRACIÓN Y REMIGRAR LOS REGISTROS CERRADOS HEP *****/

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.AUX_PASO_9
				SELECT DISTINCT AUX.ACT_ID, AHP.AHP_ID FROM (
					SELECT DISTINCT ACT_ID FROM (
						SELECT BASE.ACT_ID, BASE.AHP_FECHA_FIN_VENTA
						FROM (
							SELECT ACT.ACT_ID, AHP_FECHA_FIN_VENTA 
							FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
							JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AHP.ACT_ID AND ACT.DD_CRA_ID <> 21 AND ACT.BORRADO = 0
							WHERE AHP_FECHA_INI_VENTA IS NOT NULL AND AHP_FECHA_FIN_VENTA IS NOT NULL AND AHP.BORRADO = 0) BASE 
						LEFT JOIN (
							SELECT ACT_ID, AHP_FECHA_INI_VENTA 
							FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP 
							WHERE AHP_FECHA_INI_VENTA IS NOT NULL AND BORRADO = 0) CRUCE_H
						ON BASE.ACT_ID = CRUCE_H.ACT_ID AND TO_DATE(CRUCE_H.AHP_FECHA_INI_VENTA,''DD/MM/YY'') = TO_DATE(BASE.AHP_FECHA_FIN_VENTA,''DD/MM/YY'') 
						LEFT JOIN (
							SELECT ACT_ID, AHP_FECHA_INI_ALQUILER 
							FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP 
							WHERE AHP_FECHA_INI_ALQUILER IS NOT NULL AND AHP_FECHA_FIN_ALQUILER IS NOT NULL AND BORRADO = 0) CRUCE_V
						ON BASE.ACT_ID = CRUCE_V.ACT_ID AND TO_DATE(CRUCE_V.AHP_FECHA_INI_ALQUILER,''DD/MM/YY'') = TO_DATE(BASE.AHP_FECHA_FIN_VENTA ,''DD/MM/YY'')
						WHERE CRUCE_V.ACT_ID IS NULL AND CRUCE_H.ACT_ID IS NULL
						
						UNION 
						
						SELECT BASE.ACT_ID, BASE.AHP_FECHA_FIN_ALQUILER
						FROM (
							SELECT ACT.ACT_ID, AHP_FECHA_FIN_ALQUILER 
							FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
							JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AHP.ACT_ID AND DD_CRA_ID <> 21 AND ACT.BORRADO = 0
							WHERE AHP_FECHA_INI_ALQUILER IS NOT NULL AND AHP_FECHA_FIN_ALQUILER IS NOT NULL AND AHP.BORRADO = 0) BASE 
						LEFT JOIN (
							SELECT ACT_ID, AHP_FECHA_INI_VENTA 
							FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP 
							WHERE AHP_FECHA_INI_VENTA IS NOT NULL AND BORRADO = 0) CRUCE_H
						ON BASE.ACT_ID = CRUCE_H.ACT_ID AND TO_DATE(CRUCE_H.AHP_FECHA_INI_VENTA,''DD/MM/YY'') = TO_DATE(BASE.AHP_FECHA_FIN_ALQUILER,''DD/MM/YY'') 
						LEFT JOIN (
							SELECT ACT_ID, AHP_FECHA_INI_ALQUILER 
							FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP 
							WHERE AHP_FECHA_INI_ALQUILER IS NOT NULL AND AHP_FECHA_FIN_ALQUILER IS NOT NULL AND BORRADO = 0) CRUCE_V
						ON BASE.ACT_ID = CRUCE_V.ACT_ID AND TO_DATE(CRUCE_V.AHP_FECHA_INI_ALQUILER,''DD/MM/YY'') = TO_DATE(BASE.AHP_FECHA_FIN_ALQUILER ,''DD/MM/YY'')
						WHERE CRUCE_V.ACT_ID IS NULL AND CRUCE_H.ACT_ID IS NULL
					)
				) AUX
				JOIN '||V_ESQUEMA||'.'||V_TABLA||' AHP ON AUX.ACT_ID = AHP.ACT_ID AND AHP.BORRADO = 0
				WHERE AHP.AHP_FECHA_FIN_VENTA IS NOT NULL AND TO_DATE(AHP.AHP_FECHA_FIN_VENTA,''DD/MM/YY'') < TO_DATE(''23/11/18'' ,''DD/MM/YY'')';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					SELECT AHP_ID FROM '||V_ESQUEMA||'.AUX_PASO_9
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'TRUNCATE TABLE '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES
				SELECT DISTINCT AUX.ACT_ID, 1 AS DD_TCO_ID,
				CASE WHEN HEP.DD_EPU_ID = 5 OR HEP.DD_EPU_ID = 3 THEN 4
					 WHEN HEP.DD_EPU_ID = 6 THEN 1
					 ELSE 3
				END ESTADO,
				NULL AS MOTIVO,
				HEP.HEP_FECHA_DESDE,
				HEP.HEP_FECHA_HASTA
				FROM '||V_ESQUEMA||'.AUX_PASO_9 AUX
				JOIN '||V_ESQUEMA||'.ACT_HEP_HIST_EST_PUBLICACION HEP ON HEP.ACT_ID = AUX.ACT_ID AND HEP.BORRADO = 0 AND HEP.HEP_FECHA_HASTA IS NOT NULL';
	EXECUTE IMMEDIATE V_MSQL;

/***** INSERTAMOS LOS REGISTROS DE VENTA *****/

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.'||V_TABLA||' (
					AHP_ID
					,ACT_ID
					,DD_EPV_ID
					,DD_EPA_ID
					,DD_TCO_ID
					,DD_MTO_V_ID
					,AHP_CHECK_PUBLICAR_V
					,AHP_CHECK_OCULTAR_V
					,AHP_CHECK_OCULTAR_PRECIO_V
					,AHP_CHECK_PUB_SIN_PRECIO_V
					,AHP_CHECK_PUBLICAR_A
					,AHP_CHECK_OCULTAR_A
					,AHP_CHECK_OCULTAR_PRECIO_A
					,AHP_CHECK_PUB_SIN_PRECIO_A
					,AHP_FECHA_INI_VENTA
					,AHP_FECHA_FIN_VENTA
					,VERSION
					,USUARIOCREAR
					,FECHACREAR
					,BORRADO
					,ES_CONDICONADO_ANTERIOR
				)
				SELECT '||V_ESQUEMA||'.S_ACT_AHP_HIST_PUBLICACION.NEXTVAL
					,ACT_ID
					,ESTADO
					,CASE WHEN DD_TCO_ID = 2 THEN ESTADO
						  ELSE 1
					 END
					,DD_TCO_ID
					,MOTIVO
					,CASE WHEN ESTADO <> 1 THEN 1
						  ELSE 0
					 END
					,CASE WHEN ESTADO = 4 THEN 1
						  ELSE 0
					 END
					,0,0,0,0,0,0
					,FECHA_DESDE
					,FECHA_HASTA
					,0
					,'''||V_USUARIO||'''
					,SYSDATE
					,0
					,0
				FROM '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES WHERE DD_TCO_ID IN (1,2)';
	EXECUTE IMMEDIATE V_MSQL;

/************************************************************************************************************************************************************************ PASO 9 *****/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 9');

/***** UNIFICAR REGISTROS SEGUIDOS CON EL MISMO ESTADO DE PUBLICACIÓN VENTA *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					WITH HIST AS (
						SELECT DISTINCT AHP.AHP_ID, AHP.ACT_ID, AHP.AHP_FECHA_INI_VENTA, AHP.AHP_FECHA_FIN_VENTA, AHP.DD_EPV_ID, AHP.DD_MTO_V_ID,
						ROW_NUMBER() OVER (PARTITION BY AHP.ACT_ID ORDER BY AHP.AHP_FECHA_INI_VENTA, AHP.AHP_FECHA_FIN_VENTA ASC) RN
						FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
						WHERE ((AHP.AHP_FECHA_INI_VENTA IS NOT NULL OR AHP.AHP_FECHA_FIN_VENTA IS NOT NULL) AND DD_TCO_ID IN (1,2))
						AND AHP.BORRADO = 0
						ORDER BY 1,2,3,5
					)
					SELECT DISTINCT H.ACT_ID, H.AHP_ID, H.RN,
						CASE 
							WHEN H0.DD_EPV_ID = H.DD_EPV_ID AND H2.DD_EPV_ID = H.DD_EPV_ID THEN
								CASE
								    WHEN H.DD_EPV_ID = 4 THEN 
								        CASE
								            WHEN H0.DD_MTO_V_ID = H.DD_MTO_V_ID AND H2.DD_MTO_V_ID = H.DD_MTO_V_ID THEN 1
								            ELSE 0
								        END
								    ELSE 1
								END
							ELSE 0
						END AS BORRAR_FILA
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AHP.ACT_ID AND DD_CRA_ID <> 21 AND ACT.BORRADO = 0
					JOIN HIST H ON AHP.AHP_ID = H.AHP_ID
					LEFT JOIN HIST H0 ON AHP.ACT_ID = H0.ACT_ID AND H0.RN = H.RN-1
					LEFT JOIN HIST H2 ON AHP.ACT_ID = H2.ACT_ID AND H2.RN = H.RN+1
					WHERE AHP.DD_TCO_ID in (1,2)
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE
				WHERE T2.BORRAR_FILA = 1';
	EXECUTE IMMEDIATE V_MSQL;
    
	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					WITH HIST AS (
						SELECT DISTINCT AHP.AHP_ID, AHP.ACT_ID, AHP.AHP_FECHA_INI_VENTA, AHP.AHP_FECHA_FIN_VENTA, AHP.DD_EPV_ID, AHP.DD_MTO_V_ID,
						ROW_NUMBER() OVER (PARTITION BY AHP.ACT_ID ORDER BY AHP.AHP_FECHA_INI_VENTA, AHP.AHP_FECHA_FIN_VENTA ASC) RN
						FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
						WHERE ((AHP.AHP_FECHA_INI_VENTA IS NOT NULL OR AHP.AHP_FECHA_FIN_VENTA IS NOT NULL) AND DD_TCO_ID IN (1,2))
						AND AHP.BORRADO = 0
						ORDER BY 1,2,3,5
					)
					SELECT DISTINCT H.ACT_ID, H.AHP_ID, H.AHP_FECHA_INI_VENTA, H.AHP_FECHA_FIN_VENTA, H.RN, H2.AHP_FECHA_FIN_VENTA AS FECHA_FIN_NUEVA,
						CASE 
							WHEN H2.DD_EPV_ID = H.DD_EPV_ID THEN
								CASE
								    WHEN H.DD_EPV_ID = 4 THEN 
								        CASE
								            WHEN H2.DD_MTO_V_ID = H.DD_MTO_V_ID THEN 1
								            ELSE 0
								        END
								    ELSE 1
								END
							ELSE 0
						END AS ACTUALIZAR
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AHP.ACT_ID AND DD_CRA_ID <> 21 AND ACT.BORRADO = 0
					JOIN HIST H ON AHP.AHP_ID = H.AHP_ID
					LEFT JOIN HIST H2 ON AHP.ACT_ID = H2.ACT_ID AND H2.RN = H.RN+1
					WHERE AHP.DD_TCO_ID in (1,2)
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_FIN_VENTA = T2.FECHA_FIN_NUEVA
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE
				WHERE T2.ACTUALIZAR = 1';
	EXECUTE IMMEDIATE V_MSQL;
    
	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					WITH HIST AS (
						SELECT DISTINCT AHP.AHP_ID, AHP.ACT_ID, AHP.AHP_FECHA_INI_VENTA, AHP.AHP_FECHA_FIN_VENTA, AHP.DD_EPV_ID, AHP.DD_MTO_V_ID,
						ROW_NUMBER() OVER (PARTITION BY AHP.ACT_ID ORDER BY AHP.AHP_FECHA_INI_VENTA, AHP.AHP_FECHA_FIN_VENTA ASC) RN
						FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
						WHERE ((AHP.AHP_FECHA_INI_VENTA IS NOT NULL OR AHP.AHP_FECHA_FIN_VENTA IS NOT NULL) AND DD_TCO_ID IN (1,2))
						AND AHP.BORRADO = 0
						ORDER BY 1,2,3,5
					)
					SELECT DISTINCT H.ACT_ID, H.AHP_ID, H.AHP_FECHA_INI_VENTA, H.AHP_FECHA_FIN_VENTA, H.RN,
						CASE 
							WHEN H2.DD_EPV_ID = H.DD_EPV_ID THEN
								CASE
								    WHEN H.DD_EPV_ID = 4 THEN 
								        CASE
								            WHEN H2.DD_MTO_V_ID = H.DD_MTO_V_ID THEN 1
								            ELSE 0
								        END
								    ELSE 1
								END
							ELSE 0
						END AS BORRAR_FILA
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
					JOIN '||V_ESQUEMA||'.ACT_ACTIVO ACT ON ACT.ACT_ID = AHP.ACT_ID AND DD_CRA_ID <> 21 AND ACT.BORRADO = 0
					JOIN HIST H ON AHP.AHP_ID = H.AHP_ID
					LEFT JOIN HIST H2 ON AHP.ACT_ID = H2.ACT_ID AND H2.RN = H.RN-1
					WHERE AHP.DD_TCO_ID in (1,2)
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE
				WHERE T2.BORRAR_FILA = 1';
	EXECUTE IMMEDIATE V_MSQL;
    
/***** UNIFICAR REGISTROS SEGUIDOS CON EL MISMO ESTADO DE PUBLICACIÓN ALQUILER *****/

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
					USING (
						WITH HIST AS (
							SELECT DISTINCT AHP.AHP_ID, AHP.ACT_ID, AHP.AHP_FECHA_INI_ALQUILER, AHP.AHP_FECHA_FIN_ALQUILER, AHP.DD_EPA_ID, AHP.DD_MTO_A_ID,
							ROW_NUMBER() OVER (PARTITION BY AHP.ACT_ID ORDER BY AHP.AHP_FECHA_INI_ALQUILER, AHP.AHP_FECHA_FIN_ALQUILER ASC) RN
							FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
							WHERE ((AHP.AHP_FECHA_INI_ALQUILER IS NOT NULL OR AHP.AHP_FECHA_FIN_ALQUILER IS NOT NULL) AND DD_TCO_ID IN (2,3))
							AND AHP.BORRADO = 0
							ORDER BY 1,2,3,5
						)
						SELECT DISTINCT H.AHP_ID, H.RN,
							CASE 
								WHEN H0.DD_EPA_ID = H.DD_EPA_ID AND H2.DD_EPA_ID = H.DD_EPA_ID THEN
									CASE
										WHEN H.DD_EPA_ID = 4 THEN 
										    CASE
										        WHEN H0.DD_MTO_A_ID = H.DD_MTO_A_ID AND H2.DD_MTO_A_ID = H.DD_MTO_A_ID THEN 1
										        ELSE 0
										    END
										ELSE 1
									END
								ELSE 0
							END AS BORRAR_FILA
						FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
						JOIN HIST H ON AHP.AHP_ID = H.AHP_ID
						LEFT JOIN HIST H0 ON AHP.ACT_ID = H0.ACT_ID AND H0.RN = H.RN-1
						LEFT JOIN HIST H2 ON AHP.ACT_ID = H2.ACT_ID AND H2.RN = H.RN+1
						WHERE AHP.DD_TCO_ID IN (2,3)
					) T2
					ON (T1.AHP_ID = T2.AHP_ID)
					WHEN MATCHED THEN UPDATE SET
						T1.BORRADO = 1
						,T1.USUARIOBORRAR = '''||V_USUARIO||'''
						,T1.FECHABORRAR = SYSDATE
					WHERE T2.BORRAR_FILA = 1';
	EXECUTE IMMEDIATE V_MSQL;
    
	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					WITH HIST AS (
						SELECT DISTINCT AHP.AHP_ID, AHP.ACT_ID, AHP.AHP_FECHA_INI_ALQUILER, AHP.AHP_FECHA_FIN_ALQUILER, AHP.DD_EPA_ID, AHP.DD_MTO_A_ID,
						ROW_NUMBER() OVER (PARTITION BY AHP.ACT_ID ORDER BY AHP.AHP_FECHA_INI_ALQUILER, AHP.AHP_FECHA_FIN_ALQUILER ASC) RN
						FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
						WHERE ((AHP.AHP_FECHA_INI_ALQUILER IS NOT NULL OR AHP.AHP_FECHA_FIN_ALQUILER IS NOT NULL) AND DD_TCO_ID IN (2,3))
						AND AHP.BORRADO = 0
						ORDER BY 1,2,3,5
					)
					SELECT DISTINCT H.AHP_ID, H.AHP_FECHA_INI_ALQUILER, H.AHP_FECHA_FIN_ALQUILER, H.RN, H2.AHP_FECHA_FIN_ALQUILER AS FECHA_FIN_NUEVA,
						CASE 
							WHEN H2.DD_EPA_ID = H.DD_EPA_ID THEN
								CASE
								    WHEN H.DD_EPA_ID = 4 THEN 
								        CASE
								            WHEN H2.DD_MTO_A_ID = H.DD_MTO_A_ID THEN 1
								            ELSE 0
								        END
								    ELSE 1
								END
							ELSE 0
						END AS ACTUALIZAR
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
					JOIN HIST H ON AHP.AHP_ID = H.AHP_ID
					LEFT JOIN HIST H2 ON AHP.ACT_ID = H2.ACT_ID AND H2.RN = H.RN+1
					WHERE AHP.DD_TCO_ID IN (2,3)
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_FIN_ALQUILER = T2.FECHA_FIN_NUEVA
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE
				WHERE T2.ACTUALIZAR = 1';
	EXECUTE IMMEDIATE V_MSQL;
    
	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.'||V_TABLA||' T1
				USING (
					WITH HIST AS (
						SELECT DISTINCT AHP.AHP_ID, AHP.ACT_ID, AHP.AHP_FECHA_INI_ALQUILER, AHP.AHP_FECHA_FIN_ALQUILER, AHP.DD_EPA_ID, AHP.DD_MTO_A_ID,
						ROW_NUMBER() OVER (PARTITION BY AHP.ACT_ID ORDER BY AHP.AHP_FECHA_INI_ALQUILER, AHP.AHP_FECHA_FIN_ALQUILER ASC) RN
						FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
						WHERE ((AHP.AHP_FECHA_INI_ALQUILER IS NOT NULL OR AHP.AHP_FECHA_FIN_ALQUILER IS NOT NULL) AND DD_TCO_ID IN (2,3))
						AND AHP.BORRADO = 0
						ORDER BY 1,2,3,5
					)
					SELECT DISTINCT H.AHP_ID, H.AHP_FECHA_INI_ALQUILER, H.AHP_FECHA_FIN_ALQUILER, H.RN,
						CASE 
							WHEN H2.DD_EPA_ID = H.DD_EPA_ID THEN
								CASE
								    WHEN H.DD_EPA_ID = 4 THEN 
								        CASE
								            WHEN H2.DD_MTO_A_ID = H.DD_MTO_A_ID THEN 1
								            ELSE 0
								        END
								    ELSE 1
								END
							ELSE 0
						END AS BORRAR_FILA
					FROM '||V_ESQUEMA||'.'||V_TABLA||' AHP
					JOIN HIST H ON AHP.AHP_ID = H.AHP_ID
					LEFT JOIN HIST H2 ON AHP.ACT_ID = H2.ACT_ID AND H2.RN = H.RN-1
					WHERE AHP.DD_TCO_ID IN (2,3)
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.BORRADO = 1
					,T1.USUARIOBORRAR = '''||V_USUARIO||'''
					,T1.FECHABORRAR = SYSDATE
				WHERE T2.BORRAR_FILA = 1';
	EXECUTE IMMEDIATE V_MSQL;

	DBMS_OUTPUT.put_line('[INFO] Inicio borrado tablas auxiliares');

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_NEGATIVOS';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_SIG_NEG';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.MIGRACION_PUBLICACIONES';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_DUPLICADOS';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_UNIFICAR';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_VIVOS_CERRADOS_IGUALES';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AUX_PASO_9';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_NEGATIVOS_ALQ';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.AHP_REG_SIG_NEG_ALQ';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.ACT_BORRADO_INICIALIZADOS_ALQ';
	EXECUTE IMMEDIATE V_MSQL;

 	COMMIT;
	DBMS_OUTPUT.put_line('[FIN]');

EXCEPTION
     WHEN OTHERS THEN
          ERR_NUM := SQLCODE;
          ERR_MSG := SQLERRM;
          DBMS_OUTPUT.PUT_LINE('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
          DBMS_OUTPUT.PUT_LINE('-----------------------------------------------------------'); 
          DBMS_OUTPUT.PUT_LINE(ERR_MSG);
          ROLLBACK;
          RAISE;   
END;
/
EXIT;

