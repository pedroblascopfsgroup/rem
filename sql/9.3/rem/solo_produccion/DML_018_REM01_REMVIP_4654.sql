--/*
--#########################################
--## AUTOR=Carles Molins
--## FECHA_CREACION=20190708
--## ARTEFACTO=online
--## VERSION_ARTEFACTO=9.2
--## INCIDENCIA_LINK=REMVIP-4654
--## PRODUCTO=NO
--## 
--## Finalidad: [REMVIP-4654] Incongruencias APU y AHP
--##
--## INSTRUCCIONES:
--## VERSIONES:
--##        0.1 Versión inicial
--#########################################
--*/

--Para permitir la visualización de texto en un bloque PL/SQL utilizando DBMS_OUTPUT.PUT_LINE

WHENEVER SQLERROR EXIT SQL.SQLCODE;
SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE
    V_ESQUEMA VARCHAR2(25 CHAR):= '#ESQUEMA#'; -- Configuracion Esquema.
    V_ESQUEMA_M VARCHAR2(25 CHAR):= '#ESQUEMA_MASTER#'; -- Configuracion Esquema Master.
    ERR_NUM NUMBER(25);  -- Vble. auxiliar para registrar errores en el script.
    ERR_MSG VARCHAR2(1024 CHAR); -- Vble. auxiliar para registrar errores en el script.

    V_MSQL VARCHAR2(32000 CHAR); -- Sentencia a ejecutar.
	V_USUARIO VARCHAR2(40 CHAR) := 'REMVIP-4654'; --Vble. para el usuario REMVIP.
	V_NUM NUMBER(16); -- Vble. para validar la existencia de una tabla.

BEGIN

	DBMS_OUTPUT.put_line('[INICIO]');
	DBMS_OUTPUT.put_line('[INFO] Creación de la tabla auxiliar');

	V_MSQL := 'SELECT COUNT(1) FROM ALL_TABLES WHERE TABLE_NAME = ''ACT_AUX_DESCUADRADOS'' AND OWNER = '''||V_ESQUEMA||'''';
	EXECUTE IMMEDIATE V_MSQL INTO V_NUM;
	
	IF V_NUM > 0 THEN
		V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS';
		EXECUTE IMMEDIATE V_MSQL;
	END IF;

	V_MSQL := 'CREATE TABLE '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS
				(
					ACT_ID NUMBER(16,0) NOT NULL,
					AHP_ID NUMBER(16,0) NOT NULL
				)';
	EXECUTE IMMEDIATE V_MSQL;

/************************* PASO 1 *************************/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 1');
	
	-- CUADRAR CHECKS CON ESTADOS DE PUBLICACION

	V_MSQL := 'UPDATE '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION SET APU_CHECK_PUBLICAR_V = 1 WHERE DD_EPV_ID IN (3,4) AND APU_CHECK_PUBLICAR_V = 0';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'UPDATE '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION SET APU_CHECK_PUBLICAR_A = 1 WHERE DD_EPA_ID IN (3,4) AND APU_CHECK_PUBLICAR_A = 0';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'UPDATE '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION SET APU_CHECK_OCULTAR_V = 1 WHERE DD_EPV_ID = 4 AND APU_CHECK_OCULTAR_V = 0';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'UPDATE '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION SET APU_CHECK_OCULTAR_A = 1 WHERE DD_EPA_ID = 4 AND APU_CHECK_OCULTAR_A = 0';
	EXECUTE IMMEDIATE V_MSQL;

/************************* PASO 2 *************************/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 2');

	-- DISTINTO ESTADO PUBLICACION VENTA

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS
				SELECT ACT.ACT_ID, AHP.AHP_ID FROM '||V_ESQUEMA||'.ACT_ACTIVO ACT
				JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = ACT.ACT_ID
				JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.ACT_ID = ACT.ACT_ID AND AHP.BORRADO = 0 AND AHP.AHP_FECHA_INI_VENTA IS NOT NULL AND AHP.AHP_FECHA_FIN_VENTA IS NULL
				WHERE ACT_NUM_ACTIVO > 0 AND ACT.BORRADO = 0
				AND (APU.DD_EPV_ID <> AHP.DD_EPV_ID OR (APU.DD_EPV_ID = AHP.DD_EPV_ID AND APU.DD_EPV_ID = 4 AND APU.DD_MTO_V_ID <> AHP.DD_MTO_V_ID))';
	EXECUTE IMMEDIATE V_MSQL;
		
	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION T1
				USING (
					SELECT DISTINCT AUX.AHP_ID,
					CASE WHEN TO_DATE(APU.APU_FECHA_INI_VENTA, ''DD/MM/YY'') > TO_DATE(AHP.AHP_FECHA_INI_VENTA, ''DD/MM/YY'') THEN TO_DATE(APU.APU_FECHA_INI_VENTA, ''DD/MM/YY'')
						 ELSE TO_DATE(AHP.AHP_FECHA_INI_VENTA, ''DD/MM/YY'')
					END FECHA_FIN
					FROM '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS AUX
					JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = AUX.ACT_ID
					JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.AHP_ID = AUX.AHP_ID
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_FIN_VENTA = T2.FECHA_FIN
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;
	   
	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION 
				SELECT '||V_ESQUEMA||'.S_ACT_AHP_HIST_PUBLICACION.NEXTVAL, AUX.ACT_ID, APU.DD_TPU_ID, APU.DD_EPV_ID, APU.DD_EPA_ID, APU.DD_TCO_ID, APU.DD_MTO_V_ID, APU.APU_MOT_OCULTACION_MANUAL_V, APU.APU_CHECK_PUBLICAR_V
				,APU.APU_CHECK_OCULTAR_V, APU.APU_CHECK_OCULTAR_PRECIO_V, APU.APU_CHECK_PUB_SIN_PRECIO_V, APU.DD_MTO_A_ID, APU.APU_MOT_OCULTACION_MANUAL_A, APU.APU_CHECK_PUBLICAR_A
				,APU.APU_CHECK_OCULTAR_A, APU.APU_CHECK_OCULTAR_PRECIO_A, APU.APU_CHECK_PUB_SIN_PRECIO_A
				,CASE WHEN TO_DATE(APU.APU_FECHA_INI_VENTA, ''DD/MM/YY'') > TO_DATE(AHP.AHP_FECHA_INI_VENTA, ''DD/MM/YY'') THEN TO_DATE(APU.APU_FECHA_INI_VENTA, ''DD/MM/YY'')
					  ELSE TO_DATE(AHP.AHP_FECHA_INI_VENTA, ''DD/MM/YY'')
				 END FECHA_FIN
				,NULL, NULL, NULL, 0, '''||V_USUARIO||''', SYSDATE, NULL, NULL, NULL, NULL, 0, APU.ES_CONDICONADO_ANTERIOR, APU.DD_TPU_V_ID, APU.DD_TPU_A_ID
				FROM '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS AUX
				JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = AUX.ACT_ID
				JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.AHP_ID = AUX.AHP_ID';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO ACT_APU_ACTIVO_PUBLICACION T1
				USING (
					SELECT DISTINCT APU.APU_ID,
					CASE WHEN TO_DATE(APU.APU_FECHA_INI_VENTA, ''DD/MM/YY'') < TO_DATE(AHP.AHP_FECHA_INI_VENTA, ''DD/MM/YY'') 
						 THEN TO_DATE(AHP.AHP_FECHA_INI_VENTA, ''DD/MM/YY'')
						 ELSE NULL
					END FECHA_FIN
					FROM '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS AUX
					JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = AUX.ACT_ID
					JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.AHP_ID = AUX.AHP_ID
				) T2
				ON (T1.APU_ID = T2.APU_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.APU_FECHA_INI_VENTA = T2.FECHA_FIN
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE
				WHERE T2.FECHA_FIN IS NOT NULL';
	EXECUTE IMMEDIATE V_MSQL;

		
	-- DISTINTO ESTADO PUBLICACION ALQUILER

	V_MSQL := 'TRUNCATE TABLE '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS
				SELECT ACT.ACT_ID, AHP.AHP_ID FROM '||V_ESQUEMA||'.ACT_ACTIVO ACT
				JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = ACT.ACT_ID
				JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.ACT_ID = ACT.ACT_ID AND AHP.BORRADO = 0 AND AHP.AHP_FECHA_INI_ALQUILER IS NOT NULL AND AHP.AHP_FECHA_FIN_ALQUILER IS NULL
				WHERE ACT_NUM_ACTIVO > 0 AND ACT.BORRADO = 0
				AND (APU.DD_EPA_ID <> AHP.DD_EPA_ID OR (APU.DD_EPA_ID = AHP.DD_EPA_ID AND APU.DD_EPA_ID = 4 AND APU.DD_MTO_A_ID <> AHP.DD_MTO_A_ID))';
	EXECUTE IMMEDIATE V_MSQL;
		
	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION T1
				USING (
					SELECT DISTINCT AUX.AHP_ID,
					CASE WHEN TO_DATE(APU.APU_FECHA_INI_ALQUILER, ''DD/MM/YY'') > TO_DATE(AHP.AHP_FECHA_INI_ALQUILER, ''DD/MM/YY'') THEN TO_DATE(APU.APU_FECHA_INI_ALQUILER, ''DD/MM/YY'')
						 ELSE TO_DATE(AHP.AHP_FECHA_INI_ALQUILER, ''DD/MM/YY'')
					END FECHA_FIN
					FROM '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS AUX
					JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = AUX.ACT_ID
					JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.AHP_ID = AUX.AHP_ID
				) T2
				ON (T1.AHP_ID = T2.AHP_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.AHP_FECHA_FIN_ALQUILER = T2.FECHA_FIN
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE';
	EXECUTE IMMEDIATE V_MSQL;
	   
	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION 
				SELECT '||V_ESQUEMA||'.S_ACT_AHP_HIST_PUBLICACION.NEXTVAL, AUX.ACT_ID, APU.DD_TPU_ID, APU.DD_EPV_ID, APU.DD_EPA_ID, APU.DD_TCO_ID, APU.DD_MTO_V_ID, APU.APU_MOT_OCULTACION_MANUAL_V, APU.APU_CHECK_PUBLICAR_V
				,APU.APU_CHECK_OCULTAR_V, APU.APU_CHECK_OCULTAR_PRECIO_V, APU.APU_CHECK_PUB_SIN_PRECIO_V, APU.DD_MTO_A_ID, APU.APU_MOT_OCULTACION_MANUAL_A, APU.APU_CHECK_PUBLICAR_A
				,APU.APU_CHECK_OCULTAR_A, APU.APU_CHECK_OCULTAR_PRECIO_A, APU.APU_CHECK_PUB_SIN_PRECIO_A
				,CASE WHEN TO_DATE(APU.APU_FECHA_INI_ALQUILER, ''DD/MM/YY'') > TO_DATE(AHP.AHP_FECHA_INI_ALQUILER, ''DD/MM/YY'') THEN TO_DATE(APU.APU_FECHA_INI_ALQUILER, ''DD/MM/YY'')
					  ELSE TO_DATE(AHP.AHP_FECHA_INI_ALQUILER, ''DD/MM/YY'')
				 END FECHA_FIN
				,NULL, NULL, NULL, 0, '''||V_USUARIO||''', SYSDATE, NULL, NULL, NULL, NULL, 0, APU.ES_CONDICONADO_ANTERIOR, APU.DD_TPU_V_ID, APU.DD_TPU_A_ID
				FROM '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS AUX
				JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = AUX.ACT_ID
				JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.AHP_ID = AUX.AHP_ID';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION T1
				USING (
					SELECT DISTINCT APU.APU_ID,
					CASE WHEN TO_DATE(APU.APU_FECHA_INI_ALQUILER, ''DD/MM/YY'') < TO_DATE(AHP.AHP_FECHA_INI_ALQUILER, ''DD/MM/YY'') 
						 THEN TO_DATE(AHP.AHP_FECHA_INI_ALQUILER, ''DD/MM/YY'')
						 ELSE NULL
					END FECHA_FIN
					FROM '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS AUX
					JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = AUX.ACT_ID
					JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.AHP_ID = AUX.AHP_ID
				) T2
				ON (T1.APU_ID = T2.APU_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.APU_FECHA_INI_ALQUILER = T2.FECHA_FIN
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE
				WHERE T2.FECHA_FIN IS NOT NULL';
	EXECUTE IMMEDIATE V_MSQL;

/************************* PASO 3 *************************/

	DBMS_OUTPUT.put_line('[INFO] Inicio del PASO 3');

	-- MISMO ESTADO PUBLICACION VENTA

	V_MSQL := 'TRUNCATE TABLE '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS
				SELECT DISTINCT ACT.ACT_ID, AHP.AHP_ID
				FROM '||V_ESQUEMA||'.ACT_ACTIVO ACT
				JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = ACT.ACT_ID
				JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.ACT_ID = ACT.ACT_ID AND AHP.BORRADO = 0 AND AHP.AHP_FECHA_INI_VENTA IS NOT NULL AND AHP.AHP_FECHA_FIN_VENTA IS NULL
				WHERE ACT_NUM_ACTIVO > 0 AND ACT.BORRADO = 0
				AND APU.DD_EPV_ID = AHP.DD_EPV_ID
				AND TO_DATE(APU.APU_FECHA_INI_VENTA, ''DD/MM/YY'') <> TO_DATE(AHP.AHP_FECHA_INI_VENTA, ''DD/MM/YY'') 
				AND (CASE WHEN APU.DD_EPV_ID = 4 THEN
						     CASE WHEN APU.DD_MTO_V_ID = AHP.DD_MTO_V_ID THEN 1
						          ELSE 0
						     END
						  ELSE 1
					 END) = 1';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION T1
				USING (
					SELECT * FROM (
						SELECT DISTINCT APU.APU_ID, TO_DATE(AHP.AHP_FECHA_INI_VENTA, ''DD/MM/YY'') AS FECHA_FIN,
						ROW_NUMBER() OVER (PARTITION BY APU.APU_ID ORDER BY AHP.AHP_FECHA_INI_VENTA ASC) RN
						FROM '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS AUX
						JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = AUX.ACT_ID
						JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.AHP_ID = AUX.AHP_ID
					) WHERE RN = 1
				) T2
				ON (T1.APU_ID = T2.APU_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.APU_FECHA_INI_VENTA = T2.FECHA_FIN
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE
				WHERE T2.FECHA_FIN IS NOT NULL';
	EXECUTE IMMEDIATE V_MSQL;

	-- MISMO ESTADO PUBLICACION ALQUILER

	V_MSQL := 'TRUNCATE TABLE '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'INSERT INTO '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS
				SELECT DISTINCT ACT.ACT_ID, AHP.AHP_ID 
				FROM '||V_ESQUEMA||'.ACT_ACTIVO ACT
				JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = ACT.ACT_ID
				JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.ACT_ID = ACT.ACT_ID AND AHP.BORRADO = 0 AND AHP.AHP_FECHA_INI_ALQUILER IS NOT NULL AND AHP.AHP_FECHA_FIN_ALQUILER IS NULL
				WHERE ACT_NUM_ACTIVO > 0 AND ACT.BORRADO = 0
				AND APU.DD_EPA_ID = AHP.DD_EPA_ID
				AND (CASE WHEN APU.DD_EPA_ID = 4 THEN
						     CASE WHEN APU.DD_MTO_A_ID = AHP.DD_MTO_A_ID THEN 1
						          ELSE 0
						     END
						  ELSE 1
					 END) = 1';
	EXECUTE IMMEDIATE V_MSQL;

	V_MSQL := 'MERGE INTO '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION T1
				USING (
					SELECT * FROM (
						SELECT DISTINCT APU.APU_ID, TO_DATE(APU.APU_FECHA_INI_ALQUILER, ''DD/MM/YY'') AS FECHA_FIN,
						ROW_NUMBER() OVER (PARTITION BY APU.APU_ID ORDER BY AHP.AHP_FECHA_INI_ALQUILER ASC) RN
						FROM '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS AUX
						JOIN '||V_ESQUEMA||'.ACT_APU_ACTIVO_PUBLICACION APU ON APU.ACT_ID = AUX.ACT_ID
						JOIN '||V_ESQUEMA||'.ACT_AHP_HIST_PUBLICACION AHP ON AHP.AHP_ID = AUX.AHP_ID
					) WHERE RN = 1
				) T2
				ON (T1.APU_ID = T2.APU_ID)
				WHEN MATCHED THEN UPDATE SET
					T1.APU_FECHA_INI_ALQUILER = T2.FECHA_FIN
					,T1.USUARIOMODIFICAR = '''||V_USUARIO||'''
					,T1.FECHAMODIFICAR = SYSDATE
				WHERE T2.FECHA_FIN IS NOT NULL';
	EXECUTE IMMEDIATE V_MSQL;

	DBMS_OUTPUT.put_line('[INFO] Borrado de la tabla auxiliar');

	V_MSQL := 'DROP TABLE '||V_ESQUEMA||'.ACT_AUX_DESCUADRADOS';
	EXECUTE IMMEDIATE V_MSQL;

	COMMIT;
	DBMS_OUTPUT.put_line('[FIN]');

EXCEPTION
     WHEN OTHERS THEN
          ERR_NUM := SQLCODE;
          ERR_MSG := SQLERRM;
          DBMS_OUTPUT.PUT_LINE('[ERROR] Se ha producido un error en la ejecución:'||TO_CHAR(ERR_NUM));
          DBMS_OUTPUT.PUT_LINE('-----------------------------------------------------------'); 
          DBMS_OUTPUT.PUT_LINE(ERR_MSG);
          ROLLBACK;
          RAISE;   
END;
/
EXIT;
