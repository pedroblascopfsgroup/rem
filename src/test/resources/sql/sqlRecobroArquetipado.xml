<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="recobro.idxdrop.jobArquetipado.Oracle9iDialect">
		<![CDATA[
DECLARE
  A_TABLES DBMS_SQL.VARCHAR2_TABLE;
  nCount NUMBER;

BEGIN
  A_TABLES(1) := 'TMP_REC_CNT_LIBRES';
  A_TABLES(A_TABLES.LAST + 1) := 'TMP_REC_CNT_LIBRES_ARQ_REC';
  A_TABLES(A_TABLES.LAST + 1) := 'TMP_REC_NUEVOS_CLI';
  A_TABLES(A_TABLES.LAST + 1) := 'TMP_REC_CNT_LIBRES_DES_ARQ';
  A_TABLES(A_TABLES.LAST + 1) := 'TMP_REC_CNT_LIBRES_DES_ARQ_REC';
  A_TABLES(A_TABLES.LAST + 1) := 'TMP_REC_CNT_LIBRES_DES_ARQ_ORD';
  A_TABLES(A_TABLES.LAST + 1) := 'TMP_REC_CNT_LIBRES_ARQ_REC_PRI';
  A_TABLES(A_TABLES.LAST + 1) := 'TMP_REC_CNT_LIBRES_PER_ARQ';

  FOR I IN A_TABLES.FIRST..A_TABLES.LAST LOOP
    DBMS_OUTPUT.PUT_LINE('Limpiando índice de '||A_TABLES(I));
    
    FOR IDX IN (SELECT INDEX_NAME FROM USER_INDEXES  WHERE TABLE_NAME = A_TABLES(I)) LOOP
      DBMS_OUTPUT.PUT_LINE('- Borrando índice '||IDX.INDEX_NAME);
      EXECUTE IMMEDIATE 'DROP INDEX '||IDX.INDEX_NAME;
    END LOOP;
  END LOOP;

END;
		]]>
	</entry>

	<!-- PASO 1 - TRUNCADO TABLAS TEMPORALES -->
	<entry key="recobro.borrado.tmp_rec_cnt_libres.Oracle9iDialect">
		<![CDATA[
			TRUNCATE TABLE TMP_REC_CNT_LIBRES
		]]>
	</entry>
	<entry key="recobro.borrado.tmp_rec_cnt_libres_arq_rec.Oracle9iDialect">
		<![CDATA[
			TRUNCATE TABLE TMP_REC_CNT_LIBRES_ARQ_REC
		]]>
	</entry>
	<entry key="recobro.borrado.tmp_rec_nuevos_cli.Oracle9iDialect">
		<![CDATA[
			TRUNCATE TABLE TMP_REC_NUEVOS_CLI
		]]>
	</entry>
	<entry key="recobro.borrado.tmp_rec_cnt_libres_des_arq.Oracle9iDialect">
		<![CDATA[
			TRUNCATE TABLE TMP_REC_CNT_LIBRES_DES_ARQ
		]]>
	</entry>
	<entry key="recobro.borrado.tmp_rec_cnt_libres_des_arq_rec.Oracle9iDialect">
		<![CDATA[
			TRUNCATE TABLE TMP_REC_CNT_LIBRES_DES_ARQ_REC
		]]>
	</entry>
	<entry key="recobro.borrado.tmp_rec_cnt_libres_des_arq_ord.Oracle9iDialect">
		<![CDATA[		
			TRUNCATE TABLE TMP_REC_CNT_LIBRES_DES_ARQ_ORD
		]]>
	</entry>
	<entry key="recobro.borrado.tmp_rec_cnt_libres_arq_rec_pri.Oracle9iDialect">
		<![CDATA[		
			TRUNCATE TABLE TMP_REC_CNT_LIBRES_ARQ_REC_PRI
		]]>
	</entry>
	<entry key="recobro.borrado.tmp_rec_cnt_libres_per_arq.Oracle9iDialect">
		<![CDATA[
			TRUNCATE TABLE TMP_REC_CNT_LIBRES_PER_ARQ
		]]>
	</entry>
	
	<!-- PASO 2 - Obtenemos todos los contratos libres -->
	<entry key="recobro.insert.tmp_rec_cnt_libres.Oracle9iDialect">
		<![CDATA[
			INSERT INTO TMP_REC_CNT_LIBRES
			SELECT CNT.CNT_ID, CPE.PER_ID 
			FROM BATCH_DATOS_CNT CNT
        		INNER JOIN BATCH_DATOS_CNT_PER CPE ON CNT.CNT_ID = CPE.CNT_ID
			WHERE NOT CNT.CNT_ID IN (SELECT CNT_ID FROM BATCH_DATOS_CNT_EXP)
		]]>
	</entry>
	
	<entry key="recobro.idxcreate.tmp_rec_cnt_libres.Oracle9iDialect">
		<![CDATA[
			BEGIN
				EXECUTE IMMEDIATE 'CREATE INDEX IDX_TMP_REC_CNT_LIBRES_1 ON TMP_REC_CNT_LIBRES (CNT_ID)';
				EXECUTE IMMEDIATE 'CREATE INDEX IDX_TMP_REC_CNT_LIBRES_2 ON TMP_REC_CNT_LIBRES (PER_ID)';
  				EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_REC_CNT_LIBRES COMPUTE STATISTICS';
			END;
		]]>
	</entry>
	
	<!-- PASO 3 - Regenar (compilar) la vista TMP_REC_DATA_RULE_ENGINE  -->
	<entry key="recobro.recompile.tmp_rec_data_rule_egine.Oracle9iDialect">
		<![CDATA[
			ALTER VIEW TMP_REC_DATA_RULE_ENGINE COMPILE		
		]]>
	</entry>
	
	<!-- PASO 4 - Obtenemos las personas arquetipadas de los contratos libres, de la tabla salida del bean -->
	<!-- Filtramos con la configuración, para obtener el único esquema liberado, y que el arquetipo
	de la persona sea distinto a un tipo de filtrado -->
	<entry key="recobro.insert.tmp_rec_cnt_libres_per_arq.Oracle9iDialect">
		<![CDATA[
			INSERT INTO TMP_REC_CNT_LIBRES_PER_ARQ
			SELECT DISTINCT TMP.PER_ID, ARQ.ARQ_ID
			FROM TMP_REC_DATA_RULE_ENGINE TMP
			  INNER JOIN 
				(SELECT PER_ID, ARQ_ID
				FROM ARP_ARQ_RECOBRO_PERSONA ARP
  					INNER JOIN (SELECT DISTINCT RCF_CAR_ID, RCF_DD_TCE_CODIGO 
  								FROM BATCH_RCF_ENTRADA 
  								WHERE RCF_DD_EES_CODIGO = ${ddEstadoEsquemas.Liberado.codigo}) RCFE
    					ON ARP.ARQ_ID = RCFE.RCF_CAR_ID
				WHERE RCFE.RCF_DD_TCE_CODIGO <> ${tipocartera.filtro}
				AND ARP.ARQ_DATE = (SELECT MAX(ARQ_DATE) FROM ARP_ARQ_RECOBRO_PERSONA WHERE PER_ID = ARP.PER_ID)) ARQ
			  ON TMP.PER_ID = ARQ.PER_ID
  		]]>	
	</entry>
	
	<!-- PASO 5 - Cruzamos las tablas resultantes anteriores y guardamos las personas arquetipadas -->
	<entry key="recobro.insert.tmp_rec_cnt_libres_des_arq.Oracle9iDialect">
		<![CDATA[
			INSERT INTO TMP_REC_CNT_LIBRES_DES_ARQ  
  			SELECT CNT.CNT_ID, PER.PER_ID, PER.ARQ_ID
  			FROM TMP_REC_CNT_LIBRES CNT
    			INNER JOIN TMP_REC_CNT_LIBRES_PER_ARQ PER ON CNT.PER_ID = PER.PER_ID
  			WHERE NOT PER.ARQ_ID IS NULL
  		]]>
  	</entry>
  	
	<!-- PASO 6 - Extraer de los contratos libres aquellos que no tienen asignados clientes -->
	<entry key="recobro.insert.tmp_rec_nuevos_cli.Oracle9iDialect">
		<![CDATA[
			INSERT INTO TMP_REC_NUEVOS_CLI
			SELECT TMP.CNT_ID, TMP.PER_ID, TMP.ARQ_ID
			FROM TMP_REC_CNT_LIBRES_DES_ARQ TMP
				LEFT JOIN BATCH_DATOS_CLI CLI ON TMP.PER_ID = CLI.PER_ID
			WHERE CLI.CLI_ID IS NULL
		]]>
	</entry>
	
	<!-- PASO 7 - Guardamos los contratos libres arquetipados junto con su riesgo -->
	<entry key="recobro.insert.tmp_rec_cnt_libres_des_arq_rec.Oracle9iDialect">
		<![CDATA[
			INSERT INTO TMP_REC_CNT_LIBRES_DES_ARQ_REC
			SELECT TMP.CNT_ID, TMP.PER_ID, TMP.ARQ_ID, NVL(CNT_RIESGO,0)
			FROM TMP_REC_CNT_LIBRES_DES_ARQ TMP
				JOIN BATCH_DATOS_CNT CNT ON TMP.CNT_ID = CNT.CNT_ID	
		]]>
	</entry>
	
	<entry key="recobro.idxcreate.tmp_rec_cnt_libres_des_arq_rec.Oracle9iDialect">
		<![CDATA[
			BEGIN
				EXECUTE IMMEDIATE 'CREATE INDEX TMP_REC_CNT_LIB_DES_ARQ_REC_1 ON TMP_REC_CNT_LIBRES_DES_ARQ_REC (CNT_ID)';
				EXECUTE IMMEDIATE 'CREATE INDEX TMP_REC_CNT_LIB_DES_ARQ_REC_2 ON TMP_REC_CNT_LIBRES_DES_ARQ_REC (PER_ID)';
				EXECUTE IMMEDIATE 'CREATE INDEX TMP_REC_CNT_LIB_DES_ARQ_REC_3 ON TMP_REC_CNT_LIBRES_DES_ARQ_REC (ARQ_ID)';
				EXECUTE IMMEDIATE 'CREATE INDEX TMP_REC_CNT_LIB_DES_ARQ_REC_4 ON TMP_REC_CNT_LIBRES_DES_ARQ_REC (MOV_RIESGO)';
  				EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_REC_CNT_LIBRES_DES_ARQ_REC COMPUTE STATISTICS';
			END;
		]]>
	</entry>
	
	<!-- PASO 8 - Ordenamos los contratos libres por la prioridad del arquetipo y por el riesgo -->
	<entry key="recobro.create2.tmp_arq_recobro.Oracle9iDialect">
		<![CDATA[
			CREATE OR REPLACE VIEW TMP_ARQ_RECOBRO AS
			SELECT RCF_CAR_ID ARQ_ID, RCF_ESC_PRIORIDAD ARQ_PRIORIDAD, RCF_CAR_NOMBRE ARQ_NOMBRE
			FROM BATCH_RCF_ENTRADA
  			WHERE RCF_DD_EES_CODIGO = 'LBR'
		]]>
	</entry>
	
	<entry key="recobro.insert.tmp_rec_cnt_libres_des_arq_ord.Oracle9iDialect">
		<![CDATA[
			INSERT INTO TMP_REC_CNT_LIBRES_DES_ARQ_ORD
			SELECT TMP.CNT_ID, TMP.PER_ID, TMP.ARQ_ID, TMP.MOV_RIESGO
			FROM TMP_REC_CNT_LIBRES_DES_ARQ_REC TMP
			  INNER JOIN TMP_ARQ_RECOBRO ARQ ON TMP.ARQ_ID = ARQ.ARQ_ID
			ORDER BY ARQ.ARQ_PRIORIDAD, TMP.MOV_RIESGO DESC
		]]>
	</entry>
	
	<!-- PASO 9 - Escojemos el arquetipo prioritario de cada contrato -->
	<entry key="recobro.insert.tmp_rec_cnt_libres_arq_rec_pri.Oracle9iDialect">
		<![CDATA[
			INSERT INTO TMP_REC_CNT_LIBRES_ARQ_REC_PRI
			SELECT CNT_ID, PER_ID, ARQ_ID, MOV_RIESGO
			FROM (
			  SELECT T.CNT_ID, T.PER_ID, T.ARQ_ID, T.MOV_RIESGO, 
			  ROW_NUMBER() OVER (PARTITION BY T.CNT_ID ORDER BY A.ARQ_PRIORIDAD, T.PER_ID) AS FILA
			  FROM TMP_REC_CNT_LIBRES_DES_ARQ_ORD T
        		JOIN TMP_ARQ_RECOBRO A ON T.ARQ_ID = A.ARQ_ID)
			WHERE FILA = 1
		]]>	
	</entry>
	
	<!-- PASO 10 - Borramos los contratos que no tengan personas -->
	<entry key="recobro.delete.tmp_rec_cnt_libres_arq_rec_pri.Oracle9iDialect">
		<![CDATA[
			DELETE FROM TMP_REC_CNT_LIBRES_ARQ_REC_PRI
			WHERE PER_ID IS NULL
		]]>	
	</entry>

	<!-- PASO 11 - Volver a ordenar los contratos por arquetipo y riesgo -->
	<entry key="recobro.insert.tmp_rec_cnt_libres_arq_rec.Oracle9iDialect">
		<![CDATA[
			INSERT INTO TMP_REC_CNT_LIBRES_ARQ_REC
			SELECT CNT_ID, PER_ID, ARQ_ID, MOV_RIESGO FROM (
				SELECT DISTINCT TMP.CNT_ID, TMP.PER_ID, PRI.ARQ_ID, TMP.MOV_RIESGO, ARQ.ARQ_PRIORIDAD
      			FROM TMP_REC_CNT_LIBRES_DES_ARQ_ORD TMP
			        INNER JOIN TMP_REC_CNT_LIBRES_ARQ_REC_PRI PRI ON TMP.CNT_ID = PRI.CNT_ID
				  	INNER JOIN TMP_ARQ_RECOBRO ARQ ON PRI.ARQ_ID = ARQ.ARQ_ID 
            		INNER JOIN BATCH_RCF_ENTRADA RCF ON PRI.ARQ_ID = RCF.RCF_CAR_ID AND RCF.RCF_SCA_ID IS NOT NULL
			)ORDER BY ARQ_PRIORIDAD, MOV_RIESGO DESC
		]]>
	</entry>
	
	<entry key="recobro.idxcreate.tmp_rec_cnt_libres_arq_rec.Oracle9iDialect">
		<![CDATA[
			BEGIN
				EXECUTE IMMEDIATE 'CREATE INDEX TMP_REC_CNT_LIB_ARQ_REC_1 ON TMP_REC_CNT_LIBRES_ARQ_REC (CNT_ID)';
				EXECUTE IMMEDIATE 'CREATE INDEX TMP_REC_CNT_LIB_ARQ_REC_2 ON TMP_REC_CNT_LIBRES_ARQ_REC (PER_ID)';
				EXECUTE IMMEDIATE 'CREATE INDEX TMP_REC_CNT_LIB_ARQ_REC_3 ON TMP_REC_CNT_LIBRES_ARQ_REC (ARQ_ID)';
				EXECUTE IMMEDIATE 'CREATE INDEX TMP_REC_CNT_LIB_ARQ_REC_4 ON TMP_REC_CNT_LIBRES_ARQ_REC (MOV_RIESGO)';
  				EXECUTE IMMEDIATE 'ANALYZE TABLE TMP_REC_CNT_LIBRES_ARQ_REC COMPUTE STATISTICS';
			END;
		]]>
	</entry>
	
	<entry key="recobro.drop2.tmp_arq_recobro.Oracle9iDialect">
		<![CDATA[
			DROP VIEW TMP_ARQ_RECOBRO
		]]>
	</entry>
	
	<!-- PASO 4 - Insertar los nuevos clientes en CLI_CLIENTES -->
	<!-- 
	<entry key="recobro.insert.cli_clientes.Oracle9iDialect">
		<![CDATA[
			INSERT INTO CLI_CLIENTES
			  (CLI_ID, PER_ID, ARQ_ID, DD_EST_ID, CLI_FECHA_EST_ID, USUARIOCREAR, FECHACREAR, 
			    BORRADO, CLI_FECHA_CREACION )
			SELECT S_CLI_CLIENTES.NEXTVAL AS CLI_ID, TMP.PER_ID, PER.ARQ_ID, 1 DD_EST_ID, SYSDATE CLI_FECHA_EST_ID, 'REC-BATCH' USUARIOCREAR, SYSDATE FECHACREAR, 
      			${borrado.no.id} BORRADO, SYSDATE CLI_FECHA_CREACION
			FROM TMP_REC_NUEVOS_CLI TMP
				INNER JOIN PER_PERSONAS PER ON TMP.PER_ID = PER.PER_ID
		]]>
	</entry>
	 -->			
</properties>